<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <CascadingFiltersHamburgerUI />
    <DatagraphCoreV1 />
    <_.fcp.DatagraphNodeAxisTitle.true...DatagraphNodeAxisTitle />
    <DatagraphNodeSingleValueFieldV1 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Sales&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Quantity Sold&quot;' />
          <member value='&quot;Orders&quot;' />
          <member value='&quot;Cost&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Xmas Dataset (Xmas_Gift_Sales_Dataset_FP20C12)' inline='true' name='federated.1pisyrt1uxa7dq1ggnarr0uwb1kz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Xmas_Gift_Sales_Dataset_FP20C12' name='excel-direct.1amh24u1t3ax870zyte161r32jat'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/edima/Documents/Coding/hackathon-coding-challenges/Onyx_FP20/Xmas_Gift/Xmas_Gift_Sales_Dataset_FP20C12.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1amh24u1t3ax870zyte161r32jat' name='Xmas Dataset' table='[&apos;Xmas Dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
            <column datatype='date' name='Date' ordinal='0' />
            <column datatype='string' name='Time (Hr/Min)' ordinal='1' />
            <column datatype='string' name='Customer Age Range' ordinal='2' />
            <column datatype='string' name='Product Type' ordinal='3' />
            <column datatype='string' name='Product Category' ordinal='4' />
            <column datatype='string' name='Product Name' ordinal='5' />
            <column datatype='string' name='Purchase Type' ordinal='6' />
            <column datatype='string' name='Country' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='Gender' ordinal='9' />
            <column datatype='string' name='Xmas Budget' ordinal='10' />
            <column datatype='string' name='Payment Method' ordinal='11' />
            <column datatype='integer' name='Quantity' ordinal='12' />
            <column datatype='real' name='Unit Price' ordinal='13' />
            <column datatype='real' name='Tax Amount' ordinal='14' />
            <column datatype='real' name='Unit Cost' ordinal='15' />
            <column datatype='real' name='Cost' ordinal='16' />
            <column datatype='real' name='Total Sales' ordinal='17' />
            <column datatype='real' name='Profit' ordinal='18' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:S10001:no:A1:S10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time (Hr/Min)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time (Hr/Min)]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Time (Hr/Min)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Age Range</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Age Range]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Customer Age Range</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Type]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Product Type</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Purchase Type]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Purchase Type</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Gender</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Xmas Budget</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Xmas Budget]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Xmas Budget</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Payment Method</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Payment Method]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Payment Method</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tax Amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Tax Amount]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Tax Amount</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Cost]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Unit Cost</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Cost]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Cost</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Sales]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Total Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Xmas Dataset]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Calculation' datatype='real' name='[Calculation_5204683481906315264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;When &quot;Sales&quot; then sum([Total Sales])&#10;When &quot;Profit&quot; then sum([Profit])&#10;When &quot;Quantity Sold&quot; then sum([Quantity])&#10;When &quot;Orders&quot; then sum([Quantity])&#10;When &quot;Cost&quot; then sum([Cost])&#10;&#10;End' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Xmas Dataset' datatype='table' name='[__tableau_internal_object_id__].[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]' role='measure' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, City'>
          <field>[Country]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/w9/cv0lh9lj3_79503qn1046m_00000gn/T/tableau-temp/#TableauTemp_0o1sf610g11ynv1fwlgbj0x3f1it.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/12/2025 04:16:38 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>0</ordinal>
              <family>Xmas Dataset</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1041</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time (Hr/Min)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time (Hr/Min)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Time (Hr/Min)</remote-alias>
              <ordinal>1</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2801</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Age Range</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Age Range]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Age Range</remote-alias>
              <ordinal>2</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Type</remote-alias>
              <ordinal>3</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Category</remote-alias>
              <ordinal>4</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>5</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Purchase Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Purchase Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Purchase Type</remote-alias>
              <ordinal>6</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>7</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>8</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Gender</remote-alias>
              <ordinal>9</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Xmas Budget</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Xmas Budget]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Xmas Budget</remote-alias>
              <ordinal>10</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Payment Method</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Payment Method]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Payment Method</remote-alias>
              <ordinal>11</ordinal>
              <family>Xmas Dataset</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>12</ordinal>
              <family>Xmas Dataset</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Price</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Price]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Price</remote-alias>
              <ordinal>13</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21375</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Tax Amount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Tax Amount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Tax Amount</remote-alias>
              <ordinal>14</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6248</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Unit Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Unit Cost</remote-alias>
              <ordinal>15</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11366</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Cost</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Cost]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Cost</remote-alias>
              <ordinal>16</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16416</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Total Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Total Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Total Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37531</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>18</ordinal>
              <family>Xmas Dataset</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>37531</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Time (Hr/Min)' />
        <field-sort-custom-order field='Customer Age Range' />
        <field-sort-custom-order field='Product Type' />
        <field-sort-custom-order field='Product Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Purchase Type' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='Gender' />
        <field-sort-custom-order field='Xmas Budget' />
        <field-sort-custom-order field='Payment Method' />
        <field-sort-custom-order field='Calculation_5204683481906315264' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Unit Price' />
        <field-sort-custom-order field='Tax Amount' />
        <field-sort-custom-order field='Unit Cost' />
        <field-sort-custom-order field='Cost' />
        <field-sort-custom-order field='Total Sales' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Xmas Dataset' id='Xmas Dataset_97C98497DD5D4494BD3BECE26CCB779A'>
            <properties context=''>
              <relation connection='excel-direct.1amh24u1t3ax870zyte161r32jat' name='Xmas Dataset' table='[&apos;Xmas Dataset$&apos;]' type='table'>
                <columns gridOrigin='A1:S10001:no:A1:S10001:0' header='yes' outcome='6'>
                  <column datatype='date' name='Date' ordinal='0' />
                  <column datatype='string' name='Time (Hr/Min)' ordinal='1' />
                  <column datatype='string' name='Customer Age Range' ordinal='2' />
                  <column datatype='string' name='Product Type' ordinal='3' />
                  <column datatype='string' name='Product Category' ordinal='4' />
                  <column datatype='string' name='Product Name' ordinal='5' />
                  <column datatype='string' name='Purchase Type' ordinal='6' />
                  <column datatype='string' name='Country' ordinal='7' />
                  <column datatype='string' name='City' ordinal='8' />
                  <column datatype='string' name='Gender' ordinal='9' />
                  <column datatype='string' name='Xmas Budget' ordinal='10' />
                  <column datatype='string' name='Payment Method' ordinal='11' />
                  <column datatype='integer' name='Quantity' ordinal='12' />
                  <column datatype='real' name='Unit Price' ordinal='13' />
                  <column datatype='real' name='Tax Amount' ordinal='14' />
                  <column datatype='real' name='Unit Cost' ordinal='15' />
                  <column datatype='real' name='Cost' ordinal='16' />
                  <column datatype='real' name='Total Sales' ordinal='17' />
                  <column datatype='real' name='Profit' ordinal='18' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; by &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Xmas Dataset (Xmas_Gift_Sales_Dataset_FP20C12)' name='federated.1pisyrt1uxa7dq1ggnarr0uwb1kz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pisyrt1uxa7dq1ggnarr0uwb1kz'>
            <column caption='Metric Calculation' datatype='real' name='[Calculation_5204683481906315264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;When &quot;Sales&quot; then sum([Total Sales])&#10;When &quot;Profit&quot; then sum([Profit])&#10;When &quot;Quantity Sold&quot; then sum([Quantity])&#10;When &quot;Orders&quot; then sum([Quantity])&#10;When &quot;Cost&quot; then sum([Cost])&#10;&#10;End' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Xmas Budget]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Xmas Budget]' derivation='None' name='[none:Xmas Budget:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5204683481906315264]' derivation='User' name='[usr:Calculation_5204683481906315264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Amsterdam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Antwerp&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Berlin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brussels&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coimbra&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Frankfurt&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Funchal&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ghent&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gothenburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hamburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Innsbruck&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Krakow&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lisbon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lodz&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;London&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lyon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Malmo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manchester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marseille&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Milan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Munich&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Naples&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nice&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paris&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Porto&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rome&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rotterdam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salzburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stockholm&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;The Hague&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Utrecht&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Venice&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vienna&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Warsaw&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Board Games&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Books&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Building Sets&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Clothing&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Electronics&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;General&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Kitchen Appliances&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Puzzles&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Technology&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Toys&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Video Games&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Wearable Tech&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Barbie Doll&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Chess Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;DC Comics Graphic Novel&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dolce Gusto Coffee Machine&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fisher-Price Learning Toy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fitbit Inspire&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Gordon Ramsay Cookbook&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Harry Potter Puzzle&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hot Wheels Car Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;JBL Headphones&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kindle E-reader&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;LEGO Star Wars Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Levi&apos;s Jeans&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nike Running Shoes&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;PlayStation 5 Game&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ray-Ban Sunglasses&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Samsung Galaxy Case&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The North Face Jacket&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Children&quot;' />
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Teen&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;High&quot;' />
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;Low&quot;' />
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;Medium&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]' />
              <color column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[usr:Calculation_5204683481906315264:qk]' />
              <geometry column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#000000'>In</run>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]> ]]></run>
                <run fontcolor='#000000'>the</run>
                <run bold='true' fontcolor='#000000'> &lt;[Parameters].[Parameter 1]&gt;</run>
                <run fontcolor='#000000'> is </run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[usr:Calculation_5204683481906315264:qk]> ]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-weight' value='bold' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.4172928333282471' />
                <format attr='mark-transparency' value='185' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[Latitude (generated)]</rows>
        <cols>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9A5AF320-1A4D-4DF1-84BA-D672C185614D}' />
    </worksheet>
    <worksheet name='Trend'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; &lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Xmas Dataset (Xmas_Gift_Sales_Dataset_FP20C12)' name='federated.1pisyrt1uxa7dq1ggnarr0uwb1kz' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Metrics' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1pisyrt1uxa7dq1ggnarr0uwb1kz'>
            <column caption='Metric Calculation' datatype='real' name='[Calculation_5204683481906315264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='Case [Parameters].[Parameter 1]&#10;When &quot;Sales&quot; then sum([Total Sales])&#10;When &quot;Profit&quot; then sum([Profit])&#10;When &quot;Quantity Sold&quot; then sum([Quantity])&#10;When &quot;Orders&quot; then sum([Quantity])&#10;When &quot;Cost&quot; then sum([Cost])&#10;&#10;End' />
            </column>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Cost]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Type]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='real' name='[Total Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Xmas Budget]' role='dimension' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Type]' derivation='None' name='[none:Product Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Xmas Budget]' derivation='None' name='[none:Xmas Budget:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Year-Trunc' name='[tyr:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5204683481906315264]' derivation='User' name='[usr:Calculation_5204683481906315264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Year' name='[yr:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Amsterdam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Antwerp&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Berlin&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Birmingham&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Brussels&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Coimbra&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Frankfurt&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Funchal&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Ghent&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Gothenburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Hamburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Innsbruck&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Krakow&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lisbon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Liverpool&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lodz&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;London&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Lyon&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Malmo&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Manchester&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Marseille&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Milan&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Munich&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Naples&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Nice&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Paris&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Porto&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rome&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Rotterdam&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Salzburg&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Stockholm&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;The Hague&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Utrecht&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Venice&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Vienna&quot;' />
              <groupfilter function='member' level='[none:City:nk]' member='&quot;Warsaw&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United Kingdom&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Accessories&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Board Games&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Books&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Building Sets&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Clothing&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Electronics&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;General&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Kitchen Appliances&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Puzzles&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Technology&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Toys&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Video Games&quot;' />
              <groupfilter function='member' level='[none:Product Category:nk]' member='&quot;Wearable Tech&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Barbie Doll&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Chess Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;DC Comics Graphic Novel&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Dolce Gusto Coffee Machine&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fisher-Price Learning Toy&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Fitbit Inspire&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Gordon Ramsay Cookbook&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Harry Potter Puzzle&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Hot Wheels Car Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;JBL Headphones&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Kindle E-reader&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;LEGO Star Wars Set&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Levi&apos;s Jeans&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Nike Running Shoes&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;PlayStation 5 Game&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Ray-Ban Sunglasses&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;Samsung Galaxy Case&quot;' />
              <groupfilter function='member' level='[none:Product Name:nk]' member='&quot;The North Face Jacket&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Adult&quot;' />
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Children&quot;' />
              <groupfilter function='member' level='[none:Product Type:nk]' member='&quot;Teen&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;High&quot;' />
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;Low&quot;' />
              <groupfilter function='member' level='[none:Xmas Budget:nk]' member='&quot;Medium&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]'>
            <groupfilter function='level-members' level='[yr:Date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]</column>
            <column>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[usr:Calculation_5204683481906315264:qk]' scope='rows' value='Profit' />
            <format attr='title' class='0' field='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[tyr:Date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.6408839225769043' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[usr:Calculation_5204683481906315264:qk]</rows>
        <cols>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[tyr:Date:qk]</cols>
      </table>
      <simple-id uuid='{E93BB6BD-3368-49CA-8B1D-E87CF81C5485}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA24685E-CB4B-4FD9-876C-B28ADB02626F}' />
    </window>
    <window class='worksheet' maximized='true' name='Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]' show-apply='true' type='filter' values='relevant' />
            <card mode='checkdropdown' param='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]' type='filter' values='relevant' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[:Measure Names]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:City:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Country:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Category:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Name:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Product Type:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[none:Xmas Budget:nk]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[tyr:Date:ok]</field>
            <field>[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CFCEE43-1A0E-485C-B9F4-8BBEA4C43E7A}' />
    </window>
  </windows>
  <datagraph>
    <graph>
      <properties>
        <default-execution-subgraph-guid value='92f4c1a7-dcf0-43b9-8e92-cbe1276351d7' />
      </properties>
      <node-execution-subgraphs>
        <pair execution-subgraph-guid='92f4c1a7-dcf0-43b9-8e92-cbe1276351d7' node-guid='f9a918ce-e975-43cf-9a56-b17e05f4c7b4' />
        <pair execution-subgraph-guid='92f4c1a7-dcf0-43b9-8e92-cbe1276351d7' node-guid='d7bbe5f9-a1e9-4458-94e2-9331e5f3518a' />
      </node-execution-subgraphs>
      <nodes>
        <single-value-field-node fieldname='[Parameters].[Parameter 1]' fieldname-input-guid='b255af88-b427-4848-bd11-d5e85480759d' node-guid='d7bbe5f9-a1e9-4458-94e2-9331e5f3518a' value-output-guid='4895e069-2f7b-41fc-81a9-38d968d8023d' />
        <_.fcp.DatagraphNodeAxisTitle.true...axis-title-node duplicate-index='0' fieldname='[federated.1pisyrt1uxa7dq1ggnarr0uwb1kz].[usr:Calculation_5204683481906315264:qk]' node-guid='f9a918ce-e975-43cf-9a56-b17e05f4c7b4' orientation='vertical' sheet-identifier='{E93BB6BD-3368-49CA-8B1D-E87CF81C5485}' title-input-guid='c54756d5-4a77-4fed-8c0a-49b24c0f37f1' />
      </nodes>
      <edges>
        <edge from='4895e069-2f7b-41fc-81a9-38d968d8023d' to='c54756d5-4a77-4fed-8c0a-49b24c0f37f1' />
      </edges>
      <pin-values />
    </graph>
  </datagraph>
  <thumbnails>
    <thumbnail height='384' name='Country' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Trend' width='384'>
      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
      sWPHmJ2dxXVdvvnNbzI2Nsb58+fp6OigpqZm2cpq/emf/umfLtvankOO47B582Zqamq4cuUK
      o6Oj7Nixg/r6eq5du0ZTUxNDQ0OkUimqqqqwbZvu7m7ef/99hoaGiEQiqpCWIJlM0traytq1
      a+nq6sLzPEpKSnjllVc4e/Yszc3NjI2N4TgO4XCYYDDI1atX2b9/P4lEgqmpqWX9A3nRJZNJ
      2tvbaWpq4sKFC2QyGWpqati2bRtnz56ltbUVy7LYvn07juMwNTXFzZs3ee+990ilUszOzlJV
      VbXSm/FCcRyHTZs2UVdXR3d3N2NjY2zdupXVq1fT3d1Nc3MzBQUF7Ny5k7GxMWzbJpFIkMlk
      KC4uXtZZj33fBFRVVUUsFuPIkSNs2rSJmZkZampqqKioYG5uDsMw2LhxIwUFBQCEw2EA/u7v
      /o6+vj5qa2tXsvgvnLKyMgzDoLOzkzVr1uT2dzAYJBAI4LouLS0tudlfg8EgMzMz9PT0MDY2
      xsTExApvwYulvLwc13U5ceIEzc3NTE1NUVtbm/seA9TU1DAwMEBPTw81NTVEIhFCoRBVVVXM
      zs6uYOlfTJWVlSSTSQ4fPsyGDRuYmpqirq6OsrIyEokEpmlSU1PD5cuXGRsbo6Ghgba2NoqL
      i5e9rL4PgPHxcY4cOcKePXuoq6vDNE0cx8FxnC+8yGR6epqCggL2799PW1sbAwMDK1DqF1c6
      nebIkSPU19ezffv23P5+VNtnKBTinXfeYXJyEsdxiEQiy1ziF1s6nebQoUM0NTWxefPm3P52
      XTc3HHGhifNb3/oWxcXFuf6BhQu1ZGmmpqY4dOgQb775Jo2NjViWRSaTwXGc3P7s6upifHyc
      9957b0X3se8D4MqVK7S2thKNRkmn09TW1tLb28utW7coLS3F8zzm5uZIpVIkEolc238wGMQ0
      TZLJ5Epvwgvl5s2bFBUVsWrVKpLJJDU1Ndy8eZOJiYncH8jCfk4kEqTTaQoKCti6dSuhUIjq
      6uqV3oQXSm9vL+Xl5dTX15NKpaivr6e3t5exsbFcAHR1dbFz504Mw8C2bVzXZXh4mNu3b1Ne
      Xr7CW/DiuXLlCs3NzRQVFZFOp3PNyXfu3KGoqAjXdbl27RpbtmzBdV0cxyEWi5FMJonH45/r
      oM8n3/cBjI+PMzExweDgII7jsH79eq5fv048Hmf79u0AnDlzBsdxmJubo6qqCtM06e3tJRgM
      snXr1ufqwo7n3ezsLOPj49y/f5/x8XE2b97M2NgYt27dYseOHUSjUa5cucLU1FTudHl0dJSe
      nh4qKytZu3atrlpdgpmZmdz+npqaYvPmzdy/f5+7d++yc+dOQqEQk5OTjIyMMDg4SCQSyfUX
      FBYW0t7errOAJZqYmMjVKalUik2bNnH9+nVmZ2fZsWMHhmEwOjrK6OgoQ0NDFBUV0dPTQzwe
      JxaLEQ6Hl605SBeCfYEnmexpYdIlVf5f3cL+fFTFrv39bGl/L78nmThvJSgARER8SufSIiI+
      9b8AdAd2Rk2Z61UAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
