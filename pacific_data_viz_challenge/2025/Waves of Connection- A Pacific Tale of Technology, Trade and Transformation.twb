<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Extensions />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <_.fcp.VizExtensions.true...VizExtensions />
    <_.fcp.VizExtensionsDupEncodingUUID.true...VizExtensionsDupEncodingUUID />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='technology_connectivity' inline='true' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='technology_connectivity' name='excel-direct.1fxcp711t41l0n11dzskq19k45ta'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/edima/Documents/Coding/hackathon-coding-challenges/pacific_data_viz_challenge/2025/technology_connectivity.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.1fxcp711t41l0n11dzskq19k45ta' name='df_gov' table='[df_gov$]' type='table'>
            <columns gridOrigin='A1:X793:no:A1:X793:0' header='yes' outcome='6'>
              <column datatype='string' name='STRUCTURE' ordinal='0' />
              <column datatype='string' name='STRUCTURE_ID' ordinal='1' />
              <column datatype='string' name='STRUCTURE_NAME' ordinal='2' />
              <column datatype='string' name='ACTION' ordinal='3' />
              <column datatype='string' name='FREQ' ordinal='4' />
              <column datatype='string' name='Frequency' ordinal='5' />
              <column datatype='string' name='GEO_PICT' ordinal='6' />
              <column datatype='string' name='Pacific Island Countries and territories' ordinal='7' />
              <column datatype='string' name='INDICATOR' ordinal='8' />
              <column datatype='string' name='Indicator' ordinal='9' />
              <column datatype='integer' name='TIME_PERIOD' ordinal='10' />
              <column datatype='string' name='Time' ordinal='11' />
              <column datatype='real' name='OBS_VALUE' ordinal='12' />
              <column datatype='string' name='Observation value' ordinal='13' />
              <column datatype='string' name='UNIT_MEASURE' ordinal='14' />
              <column datatype='string' name='Unit of measure' ordinal='15' />
              <column datatype='string' name='UNIT_MULT' ordinal='16' />
              <column datatype='string' name='Unit multiplier' ordinal='17' />
              <column datatype='string' name='OBS_STATUS' ordinal='18' />
              <column datatype='string' name='Observation Status' ordinal='19' />
              <column datatype='string' name='DATA_SOURCE' ordinal='20' />
              <column datatype='string' name='Data source' ordinal='21' />
              <column datatype='string' name='OBS_COMMENT' ordinal='22' />
              <column datatype='string' name='Comment' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1fxcp711t41l0n11dzskq19k45ta' name='df_trade' table='[df_trade$]' type='table'>
            <columns gridOrigin='A1:AB9264:no:A1:AB9264:0' header='yes' outcome='2'>
              <column datatype='string' name='STRUCTURE' ordinal='0' />
              <column datatype='string' name='STRUCTURE_ID' ordinal='1' />
              <column datatype='string' name='STRUCTURE_NAME' ordinal='2' />
              <column datatype='string' name='ACTION' ordinal='3' />
              <column datatype='string' name='FREQ' ordinal='4' />
              <column datatype='string' name='Frequency' ordinal='5' />
              <column datatype='integer' name='TIME_PERIOD' ordinal='6' />
              <column datatype='string' name='Time' ordinal='7' />
              <column datatype='string' name='GEO_PICT' ordinal='8' />
              <column datatype='string' name='Pacific Island Countries and territories' ordinal='9' />
              <column datatype='string' name='INDICATOR' ordinal='10' />
              <column datatype='string' name='Indicator' ordinal='11' />
              <column datatype='string' name='TRADE_FLOW' ordinal='12' />
              <column datatype='string' name='Trade flow' ordinal='13' />
              <column datatype='string' name='ICT_PRDSRV' ordinal='14' />
              <column datatype='string' name='ICT products and services' ordinal='15' />
              <column datatype='real' name='OBS_VALUE' ordinal='16' />
              <column datatype='string' name='Observation value' ordinal='17' />
              <column datatype='string' name='UNIT_MEASURE' ordinal='18' />
              <column datatype='string' name='Unit of measure' ordinal='19' />
              <column datatype='integer' name='UNIT_MULT' ordinal='20' />
              <column datatype='string' name='Unit multiplier' ordinal='21' />
              <column datatype='string' name='OBS_STATUS' ordinal='22' />
              <column datatype='string' name='Observation Status' ordinal='23' />
              <column datatype='string' name='DATA_SOURCE' ordinal='24' />
              <column datatype='string' name='Data source' ordinal='25' />
              <column datatype='string' name='OBS_COMMENT' ordinal='26' />
              <column datatype='string' name='Comment' ordinal='27' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ACTION (df!trade)]' value='[df_trade].[ACTION]' />
          <map key='[ACTION]' value='[df_gov].[ACTION]' />
          <map key='[Comment (df!trade)]' value='[df_trade].[Comment]' />
          <map key='[Comment]' value='[df_gov].[Comment]' />
          <map key='[DATA_SOURCE (df!trade)]' value='[df_trade].[DATA_SOURCE]' />
          <map key='[DATA_SOURCE]' value='[df_gov].[DATA_SOURCE]' />
          <map key='[Data source (df!trade)]' value='[df_trade].[Data source]' />
          <map key='[Data source]' value='[df_gov].[Data source]' />
          <map key='[FREQ (df!trade)]' value='[df_trade].[FREQ]' />
          <map key='[FREQ]' value='[df_gov].[FREQ]' />
          <map key='[Frequency (df!trade)]' value='[df_trade].[Frequency]' />
          <map key='[Frequency]' value='[df_gov].[Frequency]' />
          <map key='[GEO_PICT (df!trade)]' value='[df_trade].[GEO_PICT]' />
          <map key='[GEO_PICT]' value='[df_gov].[GEO_PICT]' />
          <map key='[ICT products and services]' value='[df_trade].[ICT products and services]' />
          <map key='[ICT_PRDSRV]' value='[df_trade].[ICT_PRDSRV]' />
          <map key='[INDICATOR (df!trade)]' value='[df_trade].[INDICATOR]' />
          <map key='[INDICATOR]' value='[df_gov].[INDICATOR]' />
          <map key='[Indicator (df!trade)]' value='[df_trade].[Indicator]' />
          <map key='[Indicator]' value='[df_gov].[Indicator]' />
          <map key='[OBS_COMMENT (df!trade)]' value='[df_trade].[OBS_COMMENT]' />
          <map key='[OBS_COMMENT]' value='[df_gov].[OBS_COMMENT]' />
          <map key='[OBS_STATUS (df!trade)]' value='[df_trade].[OBS_STATUS]' />
          <map key='[OBS_STATUS]' value='[df_gov].[OBS_STATUS]' />
          <map key='[OBS_VALUE (df!trade)]' value='[df_trade].[OBS_VALUE]' />
          <map key='[OBS_VALUE]' value='[df_gov].[OBS_VALUE]' />
          <map key='[Observation Status (df!trade)]' value='[df_trade].[Observation Status]' />
          <map key='[Observation Status]' value='[df_gov].[Observation Status]' />
          <map key='[Observation value (df!trade)]' value='[df_trade].[Observation value]' />
          <map key='[Observation value]' value='[df_gov].[Observation value]' />
          <map key='[Pacific Island Countries and territories (df!trade)]' value='[df_trade].[Pacific Island Countries and territories]' />
          <map key='[Pacific Island Countries and territories]' value='[df_gov].[Pacific Island Countries and territories]' />
          <map key='[STRUCTURE (df!trade)]' value='[df_trade].[STRUCTURE]' />
          <map key='[STRUCTURE]' value='[df_gov].[STRUCTURE]' />
          <map key='[STRUCTURE_ID (df!trade)]' value='[df_trade].[STRUCTURE_ID]' />
          <map key='[STRUCTURE_ID]' value='[df_gov].[STRUCTURE_ID]' />
          <map key='[STRUCTURE_NAME (df!trade)]' value='[df_trade].[STRUCTURE_NAME]' />
          <map key='[STRUCTURE_NAME]' value='[df_gov].[STRUCTURE_NAME]' />
          <map key='[TIME_PERIOD (df!trade)]' value='[df_trade].[TIME_PERIOD]' />
          <map key='[TIME_PERIOD]' value='[df_gov].[TIME_PERIOD]' />
          <map key='[TRADE_FLOW]' value='[df_trade].[TRADE_FLOW]' />
          <map key='[Time (df!trade)]' value='[df_trade].[Time]' />
          <map key='[Time]' value='[df_gov].[Time]' />
          <map key='[Trade flow]' value='[df_trade].[Trade flow]' />
          <map key='[UNIT_MEASURE (df!trade)]' value='[df_trade].[UNIT_MEASURE]' />
          <map key='[UNIT_MEASURE]' value='[df_gov].[UNIT_MEASURE]' />
          <map key='[UNIT_MULT (df!trade)]' value='[df_trade].[UNIT_MULT]' />
          <map key='[UNIT_MULT]' value='[df_gov].[UNIT_MULT]' />
          <map key='[Unit multiplier (df!trade)]' value='[df_trade].[Unit multiplier]' />
          <map key='[Unit multiplier]' value='[df_gov].[Unit multiplier]' />
          <map key='[Unit of measure (df!trade)]' value='[df_trade].[Unit of measure]' />
          <map key='[Unit of measure]' value='[df_gov].[Unit of measure]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_gov]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X793:no:A1:X793:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[df_trade]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:AB9264:no:A1:AB9264:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>STRUCTURE</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE_ID]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>STRUCTURE_ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE_NAME]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>STRUCTURE_NAME</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ACTION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ACTION]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>ACTION</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FREQ</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FREQ]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>FREQ</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Frequency]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO_PICT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO_PICT]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>GEO_PICT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pacific Island Countries and territories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pacific Island Countries and territories]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Pacific Island Countries and territories</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICATOR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[INDICATOR]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>INDICATOR</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME_PERIOD]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_VALUE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBS_VALUE]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>OBS_VALUE</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Observation value]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Observation value</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_MEASURE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNIT_MEASURE]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>UNIT_MEASURE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit of measure]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_MULT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNIT_MULT]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>UNIT_MULT</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit multiplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit multiplier]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Unit multiplier</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OBS_STATUS]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>OBS_STATUS</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Observation Status]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Observation Status</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATA_SOURCE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DATA_SOURCE]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>DATA_SOURCE</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data source]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Data source</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_COMMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OBS_COMMENT]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>OBS_COMMENT</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comment]</local-name>
            <parent-name>[df_gov]</parent-name>
            <remote-alias>Comment</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>STRUCTURE</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE_ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE_ID (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>STRUCTURE_ID</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STRUCTURE_NAME</remote-name>
            <remote-type>130</remote-type>
            <local-name>[STRUCTURE_NAME (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>STRUCTURE_NAME</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ACTION</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ACTION (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>ACTION</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FREQ</remote-name>
            <remote-type>130</remote-type>
            <local-name>[FREQ (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>FREQ</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Frequency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Frequency (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Frequency</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TIME_PERIOD</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TIME_PERIOD (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>TIME_PERIOD</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GEO_PICT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[GEO_PICT (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>GEO_PICT</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pacific Island Countries and territories</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pacific Island Countries and territories (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Pacific Island Countries and territories</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>INDICATOR</remote-name>
            <remote-type>130</remote-type>
            <local-name>[INDICATOR (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>INDICATOR</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Indicator</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Indicator (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Indicator</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRADE_FLOW</remote-name>
            <remote-type>130</remote-type>
            <local-name>[TRADE_FLOW]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>TRADE_FLOW</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Trade flow</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Trade flow]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Trade flow</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICT_PRDSRV</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICT_PRDSRV]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>ICT_PRDSRV</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ICT products and services</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ICT products and services]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>ICT products and services</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_VALUE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[OBS_VALUE (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>OBS_VALUE</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation value</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Observation value (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Observation value</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_MEASURE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[UNIT_MEASURE (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>UNIT_MEASURE</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit of measure</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit of measure (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Unit of measure</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>UNIT_MULT</remote-name>
            <remote-type>20</remote-type>
            <local-name>[UNIT_MULT (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>UNIT_MULT</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit multiplier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit multiplier (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Unit multiplier</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_STATUS</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OBS_STATUS (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>OBS_STATUS</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Observation Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Observation Status (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Observation Status</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DATA_SOURCE</remote-name>
            <remote-type>130</remote-type>
            <local-name>[DATA_SOURCE (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>DATA_SOURCE</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data source</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Data source (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Data source</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OBS_COMMENT</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OBS_COMMENT (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>OBS_COMMENT</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Comment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Comment (df!trade)]</local-name>
            <parent-name>[df_trade]</parent-name>
            <remote-alias>Comment</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RCA_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Action' datatype='string' name='[ACTION]' role='dimension' type='nominal' />
      <column caption='Trade Flow Calculation' datatype='string' name='[Calculation_5279415056985976832]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [Trade flow] = &quot;Imports&quot; or [Trade flow] = &quot;Re-imports&quot; then &quot;Imports&quot;&#10;Else &quot;Exports&quot;&#10;END' />
      </column>
      <column caption='DATA SOURCE (df!trade)' datatype='string' name='[DATA_SOURCE (df!trade)]' role='dimension' type='nominal' />
      <column caption='Data Source' datatype='string' name='[DATA_SOURCE]' role='dimension' type='nominal' />
      <column caption='Freq' datatype='string' name='[FREQ]' role='dimension' type='nominal' />
      <column caption='GEO PICT (df!trade)' datatype='string' name='[GEO_PICT (df!trade)]' role='dimension' type='nominal' />
      <column caption='Geo Pict' datatype='string' name='[GEO_PICT]' role='dimension' type='nominal' />
      <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
      <column caption='Ict Prdsrv' datatype='string' name='[ICT_PRDSRV]' role='dimension' type='nominal' />
      <column caption='Indicator' datatype='string' name='[INDICATOR]' role='dimension' type='nominal' />
      <column caption='Indicator1' datatype='string' name='[Indicator]' role='dimension' type='nominal' />
      <column caption='OBS COMMENT (df!trade)' datatype='string' name='[OBS_COMMENT (df!trade)]' role='dimension' type='nominal' />
      <column caption='Obs Comment' datatype='string' name='[OBS_COMMENT]' role='dimension' type='nominal' />
      <column caption='OBS STATUS (df!trade)' datatype='string' name='[OBS_STATUS (df!trade)]' role='dimension' type='nominal' />
      <column caption='Obs Status' datatype='string' name='[OBS_STATUS]' role='dimension' type='nominal' />
      <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
      <column caption='Obs Value' datatype='real' name='[OBS_VALUE]' role='measure' type='quantitative' />
      <column caption='Structure' datatype='string' name='[STRUCTURE]' role='dimension' type='nominal' />
      <column caption='STRUCTURE ID (df!trade)' datatype='string' name='[STRUCTURE_ID (df!trade)]' role='dimension' type='nominal' />
      <column caption='Structure Id' datatype='string' name='[STRUCTURE_ID]' role='dimension' type='nominal' />
      <column caption='STRUCTURE NAME (df!trade)' datatype='string' name='[STRUCTURE_NAME (df!trade)]' role='dimension' type='nominal' />
      <column caption='Structure Name' datatype='string' name='[STRUCTURE_NAME]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Time Period' datatype='integer' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
      <column caption='Trade Flow' datatype='string' name='[TRADE_FLOW]' role='dimension' type='nominal' />
      <column caption='UNIT MEASURE (df!trade)' datatype='string' name='[UNIT_MEASURE (df!trade)]' role='dimension' type='nominal' />
      <column caption='Unit Measure' datatype='string' name='[UNIT_MEASURE]' role='dimension' type='nominal' />
      <column caption='UNIT MULT (df!trade)' datatype='integer' name='[UNIT_MULT (df!trade)]' role='measure' type='quantitative' />
      <column caption='Unit Mult' datatype='string' name='[UNIT_MULT]' role='dimension' type='nominal' />
      <column caption='df_gov' datatype='table' name='[__tableau_internal_object_id__].[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]' role='measure' type='quantitative' />
      <column caption='df_trade' datatype='table' name='[__tableau_internal_object_id__].[df!trade_32D2B9933A57441781492C43279873C5]' role='measure' type='quantitative' />
      <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='/var/folders/w9/cv0lh9lj3_79503qn1046m_00000gn/T/tableau-temp/#TableauTemp_1dj72ci02bwesd1a14g8v0wrvmm8.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='06/26/2025 02:44:34 PM' username='tableau_internal_user'>
          <relation type='collection'>
            <relation name='df!gov_B11AF212FB2B4AF9B04F80975B82FC7A' table='[Extract].[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]' type='table' />
            <relation name='df!trade_32D2B9933A57441781492C43279873C5' table='[Extract].[df!trade_32D2B9933A57441781492C43279873C5]' type='table' />
          </relation>
          <cols>
            <map key='[ACTION (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[ACTION]' />
            <map key='[ACTION]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[ACTION]' />
            <map key='[Comment (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Comment]' />
            <map key='[Comment]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Comment]' />
            <map key='[DATA_SOURCE (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[DATA_SOURCE]' />
            <map key='[DATA_SOURCE]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[DATA_SOURCE]' />
            <map key='[Data source (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Data source]' />
            <map key='[Data source]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Data source]' />
            <map key='[FREQ (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[FREQ]' />
            <map key='[FREQ]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[FREQ]' />
            <map key='[Frequency (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Frequency]' />
            <map key='[Frequency]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Frequency]' />
            <map key='[GEO_PICT (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[GEO_PICT]' />
            <map key='[GEO_PICT]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[GEO_PICT]' />
            <map key='[ICT products and services]' value='[df!trade_32D2B9933A57441781492C43279873C5].[ICT products and services]' />
            <map key='[ICT_PRDSRV]' value='[df!trade_32D2B9933A57441781492C43279873C5].[ICT_PRDSRV]' />
            <map key='[INDICATOR (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[INDICATOR]' />
            <map key='[INDICATOR]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[INDICATOR]' />
            <map key='[Indicator (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Indicator1]' />
            <map key='[Indicator]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Indicator1]' />
            <map key='[OBS_COMMENT (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[OBS_COMMENT]' />
            <map key='[OBS_COMMENT]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[OBS_COMMENT]' />
            <map key='[OBS_STATUS (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[OBS_STATUS]' />
            <map key='[OBS_STATUS]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[OBS_STATUS]' />
            <map key='[OBS_VALUE (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[OBS_VALUE]' />
            <map key='[OBS_VALUE]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[OBS_VALUE]' />
            <map key='[Observation Status (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Observation Status]' />
            <map key='[Observation Status]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Observation Status]' />
            <map key='[Observation value (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Observation value]' />
            <map key='[Observation value]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Observation value]' />
            <map key='[Pacific Island Countries and territories (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Pacific Island Countries and territories]' />
            <map key='[Pacific Island Countries and territories]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Pacific Island Countries and territories]' />
            <map key='[STRUCTURE (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[STRUCTURE]' />
            <map key='[STRUCTURE]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[STRUCTURE]' />
            <map key='[STRUCTURE_ID (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[STRUCTURE_ID]' />
            <map key='[STRUCTURE_ID]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[STRUCTURE_ID]' />
            <map key='[STRUCTURE_NAME (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[STRUCTURE_NAME]' />
            <map key='[STRUCTURE_NAME]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[STRUCTURE_NAME]' />
            <map key='[TIME_PERIOD (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[TIME_PERIOD]' />
            <map key='[TIME_PERIOD]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[TIME_PERIOD]' />
            <map key='[TRADE_FLOW]' value='[df!trade_32D2B9933A57441781492C43279873C5].[TRADE_FLOW]' />
            <map key='[Time (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Time]' />
            <map key='[Time]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Time]' />
            <map key='[Trade flow]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Trade flow]' />
            <map key='[UNIT_MEASURE (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[UNIT_MEASURE]' />
            <map key='[UNIT_MEASURE]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[UNIT_MEASURE]' />
            <map key='[UNIT_MULT (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[UNIT_MULT]' />
            <map key='[UNIT_MULT]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[UNIT_MULT]' />
            <map key='[Unit multiplier (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Unit multiplier]' />
            <map key='[Unit multiplier]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Unit multiplier]' />
            <map key='[Unit of measure (df!trade)]' value='[df!trade_32D2B9933A57441781492C43279873C5].[Unit of measure]' />
            <map key='[Unit of measure]' value='[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A].[Unit of measure]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>STRUCTURE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>STRUCTURE</remote-alias>
              <ordinal>0</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STRUCTURE_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE_ID]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>STRUCTURE_ID</remote-alias>
              <ordinal>1</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STRUCTURE_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE_NAME]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>STRUCTURE_NAME</remote-alias>
              <ordinal>2</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ACTION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ACTION]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>ACTION</remote-alias>
              <ordinal>3</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FREQ</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FREQ]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>FREQ</remote-alias>
              <ordinal>4</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Frequency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Frequency]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Frequency</remote-alias>
              <ordinal>5</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GEO_PICT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEO_PICT]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>GEO_PICT</remote-alias>
              <ordinal>6</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pacific Island Countries and territories</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pacific Island Countries and territories]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Pacific Island Countries and territories</remote-alias>
              <ordinal>7</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>INDICATOR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[INDICATOR]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>INDICATOR</remote-alias>
              <ordinal>8</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Indicator1</remote-alias>
              <ordinal>9</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME_PERIOD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TIME_PERIOD]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>TIME_PERIOD</remote-alias>
              <ordinal>10</ordinal>
              <family>df_gov</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>11</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_VALUE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBS_VALUE]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>OBS_VALUE</remote-alias>
              <ordinal>12</ordinal>
              <family>df_gov</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>173</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Observation value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Observation value]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Observation value</remote-alias>
              <ordinal>13</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIT_MEASURE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UNIT_MEASURE]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>UNIT_MEASURE</remote-alias>
              <ordinal>14</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit of measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit of measure]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Unit of measure</remote-alias>
              <ordinal>15</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIT_MULT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UNIT_MULT]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>UNIT_MULT</remote-alias>
              <ordinal>16</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit multiplier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit multiplier]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Unit multiplier</remote-alias>
              <ordinal>17</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_STATUS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OBS_STATUS]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>OBS_STATUS</remote-alias>
              <ordinal>18</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Observation Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Observation Status]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Observation Status</remote-alias>
              <ordinal>19</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATA_SOURCE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATA_SOURCE]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>DATA_SOURCE</remote-alias>
              <ordinal>20</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Data source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Data source]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Data source</remote-alias>
              <ordinal>21</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_COMMENT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OBS_COMMENT]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>OBS_COMMENT</remote-alias>
              <ordinal>22</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Comment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Comment]</local-name>
              <parent-name>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</parent-name>
              <remote-alias>Comment</remote-alias>
              <ordinal>23</ordinal>
              <family>df_gov</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STRUCTURE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>STRUCTURE</remote-alias>
              <ordinal>24</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STRUCTURE_ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE_ID (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>STRUCTURE_ID</remote-alias>
              <ordinal>25</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STRUCTURE_NAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STRUCTURE_NAME (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>STRUCTURE_NAME</remote-alias>
              <ordinal>26</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ACTION</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ACTION (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>ACTION</remote-alias>
              <ordinal>27</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>FREQ</remote-name>
              <remote-type>129</remote-type>
              <local-name>[FREQ (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>FREQ</remote-alias>
              <ordinal>28</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Frequency</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Frequency (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Frequency</remote-alias>
              <ordinal>29</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TIME_PERIOD</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TIME_PERIOD (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>TIME_PERIOD</remote-alias>
              <ordinal>30</ordinal>
              <family>df_trade</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>77</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Time</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Time (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Time</remote-alias>
              <ordinal>31</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>GEO_PICT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[GEO_PICT (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>GEO_PICT</remote-alias>
              <ordinal>32</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Pacific Island Countries and territories</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Pacific Island Countries and territories (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Pacific Island Countries and territories</remote-alias>
              <ordinal>33</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>INDICATOR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[INDICATOR (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>INDICATOR</remote-alias>
              <ordinal>34</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Indicator1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Indicator (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Indicator1</remote-alias>
              <ordinal>35</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TRADE_FLOW</remote-name>
              <remote-type>129</remote-type>
              <local-name>[TRADE_FLOW]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>TRADE_FLOW</remote-alias>
              <ordinal>36</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Trade flow</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Trade flow]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Trade flow</remote-alias>
              <ordinal>37</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ICT_PRDSRV</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ICT_PRDSRV]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>ICT_PRDSRV</remote-alias>
              <ordinal>38</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ICT products and services</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ICT products and services]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>ICT products and services</remote-alias>
              <ordinal>39</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>10</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_VALUE</remote-name>
              <remote-type>5</remote-type>
              <local-name>[OBS_VALUE (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>OBS_VALUE</remote-alias>
              <ordinal>40</ordinal>
              <family>df_trade</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3791</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Observation value</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Observation value (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Observation value</remote-alias>
              <ordinal>41</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIT_MEASURE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[UNIT_MEASURE (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>UNIT_MEASURE</remote-alias>
              <ordinal>42</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit of measure</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit of measure (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Unit of measure</remote-alias>
              <ordinal>43</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>UNIT_MULT</remote-name>
              <remote-type>20</remote-type>
              <local-name>[UNIT_MULT (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>UNIT_MULT</remote-alias>
              <ordinal>44</ordinal>
              <family>df_trade</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Unit multiplier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Unit multiplier (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Unit multiplier</remote-alias>
              <ordinal>45</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_STATUS</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OBS_STATUS (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>OBS_STATUS</remote-alias>
              <ordinal>46</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Observation Status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Observation Status (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Observation Status</remote-alias>
              <ordinal>47</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DATA_SOURCE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[DATA_SOURCE (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>DATA_SOURCE</remote-alias>
              <ordinal>48</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Data source</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Data source (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Data source</remote-alias>
              <ordinal>49</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>OBS_COMMENT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[OBS_COMMENT (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>OBS_COMMENT</remote-alias>
              <ordinal>50</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Comment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Comment (df!trade)]</local-name>
              <parent-name>[df!trade_32D2B9933A57441781492C43279873C5]</parent-name>
              <remote-alias>Comment</remote-alias>
              <ordinal>51</ordinal>
              <family>df_trade</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RCA_S2' />
              <object-id>[df!trade_32D2B9933A57441781492C43279873C5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:ICT products and services:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Communication equipment&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Electronic components&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Digitally-deliverable services&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Total merchandise trade&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Miscellaneous ICT products&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Total trade in services&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Consumer electronic equipment&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;ICT services&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Computers and peripheral equipment&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Total ICT goods&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='STRUCTURE' />
        <field-sort-custom-order field='STRUCTURE_ID' />
        <field-sort-custom-order field='STRUCTURE_NAME' />
        <field-sort-custom-order field='ACTION' />
        <field-sort-custom-order field='FREQ' />
        <field-sort-custom-order field='Frequency' />
        <field-sort-custom-order field='GEO_PICT' />
        <field-sort-custom-order field='Pacific Island Countries and territories' />
        <field-sort-custom-order field='INDICATOR' />
        <field-sort-custom-order field='Indicator' />
        <field-sort-custom-order field='TIME_PERIOD' />
        <field-sort-custom-order field='Time' />
        <field-sort-custom-order field='OBS_VALUE' />
        <field-sort-custom-order field='Observation value' />
        <field-sort-custom-order field='UNIT_MEASURE' />
        <field-sort-custom-order field='Unit of measure' />
        <field-sort-custom-order field='UNIT_MULT' />
        <field-sort-custom-order field='Unit multiplier' />
        <field-sort-custom-order field='OBS_STATUS' />
        <field-sort-custom-order field='Observation Status' />
        <field-sort-custom-order field='DATA_SOURCE' />
        <field-sort-custom-order field='Data source' />
        <field-sort-custom-order field='OBS_COMMENT' />
        <field-sort-custom-order field='Comment' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='df_gov' id='df!gov_B11AF212FB2B4AF9B04F80975B82FC7A'>
            <properties context=''>
              <relation connection='excel-direct.1fxcp711t41l0n11dzskq19k45ta' name='df_gov' table='[df_gov$]' type='table'>
                <columns gridOrigin='A1:X793:no:A1:X793:0' header='yes' outcome='6'>
                  <column datatype='string' name='STRUCTURE' ordinal='0' />
                  <column datatype='string' name='STRUCTURE_ID' ordinal='1' />
                  <column datatype='string' name='STRUCTURE_NAME' ordinal='2' />
                  <column datatype='string' name='ACTION' ordinal='3' />
                  <column datatype='string' name='FREQ' ordinal='4' />
                  <column datatype='string' name='Frequency' ordinal='5' />
                  <column datatype='string' name='GEO_PICT' ordinal='6' />
                  <column datatype='string' name='Pacific Island Countries and territories' ordinal='7' />
                  <column datatype='string' name='INDICATOR' ordinal='8' />
                  <column datatype='string' name='Indicator' ordinal='9' />
                  <column datatype='integer' name='TIME_PERIOD' ordinal='10' />
                  <column datatype='string' name='Time' ordinal='11' />
                  <column datatype='real' name='OBS_VALUE' ordinal='12' />
                  <column datatype='string' name='Observation value' ordinal='13' />
                  <column datatype='string' name='UNIT_MEASURE' ordinal='14' />
                  <column datatype='string' name='Unit of measure' ordinal='15' />
                  <column datatype='string' name='UNIT_MULT' ordinal='16' />
                  <column datatype='string' name='Unit multiplier' ordinal='17' />
                  <column datatype='string' name='OBS_STATUS' ordinal='18' />
                  <column datatype='string' name='Observation Status' ordinal='19' />
                  <column datatype='string' name='DATA_SOURCE' ordinal='20' />
                  <column datatype='string' name='Data source' ordinal='21' />
                  <column datatype='string' name='OBS_COMMENT' ordinal='22' />
                  <column datatype='string' name='Comment' ordinal='23' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df!gov_B11AF212FB2B4AF9B04F80975B82FC7A' table='[Extract].[df!gov_B11AF212FB2B4AF9B04F80975B82FC7A]' type='table' />
            </properties>
          </object>
          <object caption='df_trade' id='df!trade_32D2B9933A57441781492C43279873C5'>
            <properties context=''>
              <relation connection='excel-direct.1fxcp711t41l0n11dzskq19k45ta' name='df_trade' table='[df_trade$]' type='table'>
                <columns gridOrigin='A1:AB9264:no:A1:AB9264:0' header='yes' outcome='2'>
                  <column datatype='string' name='STRUCTURE' ordinal='0' />
                  <column datatype='string' name='STRUCTURE_ID' ordinal='1' />
                  <column datatype='string' name='STRUCTURE_NAME' ordinal='2' />
                  <column datatype='string' name='ACTION' ordinal='3' />
                  <column datatype='string' name='FREQ' ordinal='4' />
                  <column datatype='string' name='Frequency' ordinal='5' />
                  <column datatype='integer' name='TIME_PERIOD' ordinal='6' />
                  <column datatype='string' name='Time' ordinal='7' />
                  <column datatype='string' name='GEO_PICT' ordinal='8' />
                  <column datatype='string' name='Pacific Island Countries and territories' ordinal='9' />
                  <column datatype='string' name='INDICATOR' ordinal='10' />
                  <column datatype='string' name='Indicator' ordinal='11' />
                  <column datatype='string' name='TRADE_FLOW' ordinal='12' />
                  <column datatype='string' name='Trade flow' ordinal='13' />
                  <column datatype='string' name='ICT_PRDSRV' ordinal='14' />
                  <column datatype='string' name='ICT products and services' ordinal='15' />
                  <column datatype='real' name='OBS_VALUE' ordinal='16' />
                  <column datatype='string' name='Observation value' ordinal='17' />
                  <column datatype='string' name='UNIT_MEASURE' ordinal='18' />
                  <column datatype='string' name='Unit of measure' ordinal='19' />
                  <column datatype='integer' name='UNIT_MULT' ordinal='20' />
                  <column datatype='string' name='Unit multiplier' ordinal='21' />
                  <column datatype='string' name='OBS_STATUS' ordinal='22' />
                  <column datatype='string' name='Observation Status' ordinal='23' />
                  <column datatype='string' name='DATA_SOURCE' ordinal='24' />
                  <column datatype='string' name='Data source' ordinal='25' />
                  <column datatype='string' name='OBS_COMMENT' ordinal='26' />
                  <column datatype='string' name='Comment' ordinal='27' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='df!trade_32D2B9933A57441781492C43279873C5' table='[Extract].[df!trade_32D2B9933A57441781492C43279873C5]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Pacific Island Countries and territories]' />
              <expression op='[Pacific Island Countries and territories (df!trade)]' />
            </expression>
            <first-end-point object-id='df!gov_B11AF212FB2B4AF9B04F80975B82FC7A' />
            <second-end-point object-id='df!trade_32D2B9933A57441781492C43279873C5' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
      <datasources>
        <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
      </datasources>
      <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
        <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
        <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]'>
        <groupfilter function='level-members' level='[none:Pacific Island Countries and territories (df!trade):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Part 1 - ICT Imports'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]</rows>
        <cols>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</cols>
      </table>
      <simple-id uuid='{4CE21F4E-76FD-4645-B805-B96B19A15B66}' />
    </worksheet>
    <worksheet name='Part 1 - ICT Imports by Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <color column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <text column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{85D25A00-51FD-4FC5-97D2-91AAAAB52ACA}' />
    </worksheet>
    <worksheet name='Part 1 - ICT Imports by Category Country Portfolio'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</rows>
        <cols>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]</cols>
      </table>
      <simple-id uuid='{4F35EE8A-CDBE-4404-80E0-C91139DF77F8}' />
    </worksheet>
    <worksheet name='Part 1 - ICT Imports by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]' value='43' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]' value='108' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Heatmap' />
            <encodings>
              <color column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <lod column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='density-kernel-size' value='3.1712706089019775' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</rows>
        <cols>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</cols>
      </table>
      <simple-id uuid='{AA19352F-872E-46EA-B60E-5E4387D7CE07}' />
    </worksheet>
    <worksheet name='Part 2 - E Govt Rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column caption='Indicator1' datatype='string' name='[Indicator]' role='dimension' type='nominal' />
            <column caption='Obs Value' datatype='real' name='[OBS_VALUE]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='Time Period' datatype='integer' name='[TIME_PERIOD]' role='dimension' type='ordinal' />
            <column-instance column='[Indicator]' derivation='None' name='[none:Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE]' derivation='None' name='[none:OBS_VALUE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD]' derivation='None' name='[none:TIME_PERIOD:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Indicator:nk]'>
            <groupfilter function='member' level='[none:Indicator:nk]' member='&quot;E-Government Index&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Indicator:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:OBS_VALUE:qk]</rows>
        <cols>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD:ok]</cols>
      </table>
      <simple-id uuid='{8197F8BD-1AD6-4435-BA72-5094204BABBE}' />
    </worksheet>
    <worksheet name='Part 2 - ICT Category Portfolio'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <color column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <text column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4931744A-7460-4ADD-822A-113ECC36C312}' />
    </worksheet>
    <worksheet name='Part 2 - ICT Imports Export by Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column caption='Trade Flow Calculation' datatype='string' name='[Calculation_5279415056985976832]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Trade flow] = &quot;Imports&quot; or [Trade flow] = &quot;Re-imports&quot; then &quot;Imports&quot;&#10;Else &quot;Exports&quot;&#10;END' />
            </column>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5279415056985976832]' derivation='None' name='[none:Calculation_5279415056985976832:nk]' pivot='key' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-exports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Total exports&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]</rows>
        <cols>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</cols>
      </table>
      <simple-id uuid='{B726469F-B444-4D9C-A9F9-5C15B69119ED}' />
    </worksheet>
    <worksheet name='Part 2 - ICT Trade flow'>
      <table>
        <view>
          <datasources>
            <datasource caption='technology_connectivity' name='federated.03xni7c1xhk91e1h6gfdv1sblyqu' />
          </datasources>
          <datasource-dependencies datasource='federated.03xni7c1xhk91e1h6gfdv1sblyqu'>
            <column caption='Trade Flow Calculation' datatype='string' name='[Calculation_5279415056985976832]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [Trade flow] = &quot;Imports&quot; or [Trade flow] = &quot;Re-imports&quot; then &quot;Imports&quot;&#10;Else &quot;Exports&quot;&#10;END' />
            </column>
            <column datatype='string' name='[ICT products and services]' role='dimension' type='nominal' />
            <column caption='OBS VALUE (df!trade)' datatype='real' name='[OBS_VALUE (df!trade)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Pacific Island Countries and territories (df!trade)]' role='dimension' type='nominal' />
            <column aggregation='Sum' caption='TIME PERIOD (df!trade)' datatype='integer' name='[TIME_PERIOD (df!trade)]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Trade flow]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5279415056985976832]' derivation='None' name='[none:Calculation_5279415056985976832:nk]' pivot='key' type='nominal' />
            <column-instance column='[ICT products and services]' derivation='None' name='[none:ICT products and services:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pacific Island Countries and territories (df!trade)]' derivation='None' name='[none:Pacific Island Countries and territories (df!trade):nk]' pivot='key' type='nominal' />
            <column-instance column='[TIME_PERIOD (df!trade)]' derivation='None' name='[none:TIME_PERIOD (df!trade):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Trade flow]' derivation='None' name='[none:Trade flow:nk]' pivot='key' type='nominal' />
            <column-instance column='[OBS_VALUE (df!trade)]' derivation='Sum' name='[sum:OBS_VALUE (df!trade):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Communication equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Computers and peripheral equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Consumer electronic equipment&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Digitally-deliverable services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Electronic components&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;ICT services&quot;' />
              <groupfilter function='member' level='[none:ICT products and services:nk]' member='&quot;Miscellaneous ICT products&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]' filter-group='3'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2000' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2001' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2002' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2003' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2004' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2005' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2006' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2007' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2008' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2009' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2010' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2011' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2012' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2013' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2014' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2015' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2016' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2017' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2018' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2019' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2020' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2021' />
              <groupfilter function='member' level='[none:TIME_PERIOD (df!trade):ok]' member='2022' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-exports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Re-imports&quot;' />
              <groupfilter function='member' level='[none:Trade flow:nk]' member='&quot;Total exports&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Trade flow:nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</column>
            <column>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <_.fcp.VizExtensions.false...mark class='Automatic' />
            <_.fcp.VizExtensions.true...mark class='VizExtension' />
            <_.fcp.VizExtensions.true...add-in add-in-id='com.tableau.extension.sankey' extension-url='https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html' extension-version='1.5.0' instance-id='A00A5A85894341E6937D6F77C046817B'>
              <instance-settings />
              <type-settings>
                <worksheet />
              </type-settings>
            </_.fcp.VizExtensions.true...add-in>
            <encodings>
              <_.fcp.VizExtensions.false...lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{238C9930-2C71-4D6E-A3FC-AD8D24010C78}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]' />
              <_.fcp.VizExtensions.true...custom _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{238C9930-2C71-4D6E-A3FC-AD8D24010C78}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]' custom-type-name='level' />
              <_.fcp.VizExtensions.false...lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{2E3AF950-7F06-4E78-A5AD-C3C7A5E084EA}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' />
              <_.fcp.VizExtensions.true...custom _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{2E3AF950-7F06-4E78-A5AD-C3C7A5E084EA}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' custom-type-name='level' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{154D77D4-FB71-4D10-8CBF-5E59D4975BB3}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' />
              <lod _.fcp.VizExtensionsDupEncodingUUID.true...encoding-id='{B98DD705-59FC-4C26-84D8-F1694CF3D4A3}' column='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{694A1162-E4E1-40A1-B14B-070333167FD0}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Home'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <zones />
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='17' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E8EB496C-8FE0-44B0-AA1F-4410B4AC307A}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' name='Home'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{A93B4318-1A91-4196-AFB4-1CAF3F8D19D6}' />
    </window>
    <window class='worksheet' name='Part 1 - ICT Imports' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CB02643-D295-449B-986D-3DE836D2CD68}' />
    </window>
    <window class='worksheet' name='Part 1 - ICT Imports by Category' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEDD284D-28CF-4C43-9F51-6452E3F5B9FC}' />
    </window>
    <window class='worksheet' name='Part 1 - ICT Imports by Country' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E09EFDA9-F174-470A-9DF2-5AE02F7929EF}' />
    </window>
    <window class='worksheet' name='Part 1 - ICT Imports by Category Country Portfolio' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC53A1BB-8D58-4418-9671-B983DAE6956F}' />
    </window>
    <window class='worksheet' maximized='true' name='Part 2 - ICT Imports Export by Country' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{64FB7C63-B6F6-4AE6-BE95-90E194C621BB}' />
    </window>
    <window class='worksheet' name='Part 2 - ICT Trade flow' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:ICT products and services:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1912BBC4-11D5-4EED-B1B3-6554DD468746}' />
    </window>
    <window class='worksheet' name='Part 2 - E Govt Rank' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Calculation_5279415056985976832:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Indicator:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Observation value:nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD (df!trade):ok]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:TIME_PERIOD:ok]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9960C412-91E4-43CB-8858-B01DAA083763}' />
    </window>
    <window class='worksheet' name='Part 2 - ICT Category Portfolio' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[none:Pacific Island Countries and territories (df!trade):nk]</field>
            <field>[federated.03xni7c1xhk91e1h6gfdv1sblyqu].[sum:OBS_VALUE (df!trade):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C9FB3BA-4304-40BB-A75C-0CF68F5743DF}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Part 1 - ICT Imports' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dW2yU953/8c+cPDMeH7CNj9jGYw6GYBzDQkghu4ADaYBERElX295V3W0r
      Naq0e7E3q15E2tX2pjd7t9um6m6rKlW7rVrUpqQlUEgNDQcn5eTaGGM8PuPzYc7zzP8iyvzr
      QNJhmWeM83u/rjwZ83x/juzn7ec3BzvS6XRaAADjOFd6AQCAlUEAAMBQBAAADEUAAMBQBAAA
      DEUAAMAAsVhMiURi2X9zr9BaAMA4fX19+va3v63BwUEdOHBALS0tmp6eltfr1c9+9jP9x3/8
      h3p6evStb31L//iP/6jvfe97qq+v17Zt2/Tyyy8rFArpX//1X1VRUaFNmzapsrJSJ0+eVE1N
      jf72b/9WP/jBD5RKpeT1evW1r31NP/3pT3XkyBHdvHlTv//975VMJvV3f/d3Gh8f1y9/+Uu5
      XnvttddW+n8KAJigvLxcLS0tCofDevXVVzU+Pq6FhQW53W7Nzs6qoaFBvb29CofD2rp1q8Lh
      sL70pS+ppaVFXq9Xc3Nzmp2d1de//nW99dZbKikp0bZt23T8+HHV1tbq2rVr+upXv6rBwUGt
      WbNGoVBIDQ0NOnPmjP7pn/5JTz75pE6ePKmKigrt3r2bLSAAeBy0tLTo2rVrmp2dVV1dnSRp
      YGBAP/7xj3XlypXM573//vv693//d7W3t6uoqEjvvPOOfvzjH2tiYkJTU1P653/+Z01MTGjT
      pk2SpEQiIafTKb/fL7/fr1QqlTkWAQCAx0BjY6MuX76s2tpauVyuzH975ZVX1N7envm89vZ2
      ffOb39Tx48clSfv27dMrr7yitWvXqqKiQq+++qoSiYSi0agkKRAIyOVy6b333tPFixdVWVkp
      Sbp37x5bQACQb16vV/X19ZKkkpISVVZWqqamRtXV1dq+fbuKioq0bt06TU1N6caNG4rFYgoG
      g5Ikn8+ndevWZY51/fp19fb2qrq6WmVlZdq+fbs2bNigoaEh1dfXq76+Xu3t7Tp79qwsy9Ir
      r7yigoICdXd3y8F7AQGAmdgCAgBDPZYB+OhzVQEAufdYBgAAYD8CAACGIgAAYCgCAACGIgAA
      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
    </thumbnail>
    <thumbnail height='384' name='Part 1 - ICT Imports by Category' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALbElEQVR4nO3d32/V933H8fc5trGNbQwGQzAk/A4khDRAltBma5pfyya1azet67S7adN2
      v78gf8B2u150mqZJkTap2ZT+2tQ2WVVSQgJJyAgQSCDY4ZcBG2xjMMapd5EMiSZkgTBy8Xo8
      7vz98fl+5K/0fZ7zPf76NGZnZ2cLgDjNL3oCAHwxBAAglAAAhBIAgFACABCq9Xordh8Yqt0H
      hm7nXAC4ja4bgFf3D9Z3n9t+O+cCwG3kFhBAKAEACCUAAKFueQAajeuvm9PWUl0dc2peV0e1
      tnz6ofvmzf3YsgUfLfu0Y3yaBT3XjrngE45xM252PgBfpM8cgG89en/9+de31V9965Fad2d/
      Le7rqVUDC6/Zpq21WZvX31mLertq4+qlHxtj+eIFtXHN0np448qa3935qcf7vW33fmzZ73+0
      7KF7V37WaV/j6W33fOJ4n9f6u5ZUb1fHLRkL4Ha57l8B/aZmo1Hff/GNunDxcv3FN79SP915
      oOZ1ddRjW9fV2uX91dvdWX/77Au1vH9+rVzaV5vWDFRrS7PmdXXUhhVLanxyqnYfGKpGNarR
      qJrbOaf+aPPa+rdfvFnfeXJL/evPX6+qqt95YE1tWLHkalz+5s8eq5Zms557cc/VV9pLFvbU
      4w/eXf/97onq7eqoed2d9djWtVe3+9Ldy2t5//z6wUt769HNa6t/fnf9ZMf+WtzXU3/5za9U
      W2tLffe57dVoVK24o6++/cTmqqr6u2dfqNmq+vYTm6u7c07tfOtorVneX6sHFtbQqXN14uxY
      3bdmoE6fm6hGVf3wpbfqjx/fXMOj4zU8OlHfeWpLdXXMqRd3H6qvbbm7ers7atf+werqbK+B
      /t46NHS6Xt773i09gQA364ZvAc1W1ZUrM9XW2lIdc9pqxR199b3nd9SJs2NVVdUzt71e3TdY
      //XaO/XmO8fr9LkLdf7CpVq9bNE141ycmq7+BT21fPH8GhmbrKcf3lCPbl5bq5ctqu89v6P2
      HTlZK5f2VVtLS711+GQ99uDdV/ft6Wyv3QeG6qsPrKmHN66sCxenrtluxdK++uefvFKDJ0fr
      5NnxOn5mrL60blmdOTdR//D8jpqZ+aAaH9XkqYc31L4jJ6vZbNRdd/RVVVV3Z3uNjF2s906M
      1IP33FX73ztV969bVp3tbXXk+Nn60Utv1aIF3bVm2aI6eXasOtvbqq21We1trfWPP9xZQ6fO
      1b2rltS+Iyfry5tW1dyOtro8PVNvHx2+2fMEcMvdcABWDyys6ZkPrv48v6ezFvV2Vf/87qvL
      Lk/P1Nz2tqr68BX9v//izRoZm/zYWK+9PVR//YeP1C/3HK6f7TpY2/ccrt6ujmo0qtpaW+ri
      1HSdm7hUr+4frB//at81+45PTlX33PZqNKvGLly6ZrvhkfEam5yq/vnd1d3ZXv/x8v5r7tO3
      NBv1v/8Fe/LS5Tp6cqSe/c9ddfr8RFVVff/FN+r1g+/Xnzy5tSYmp+rNd4/XP/14Z1VVHXr/
      dFVVnR6ZqKe33VM79x2tqqpfz85W+5wP31A1m40aHb9Ybxw6Vv/ys9fqhV2H6qevHKg//d2t
      N/rrBvh/0/LMM88880krdv3Gk8CNRqO+tmVdze2YUz/45d6qqpqavlKvHzxWjzywphb2dtXL
      e9+rZrNRR06M1P1rl1VrS0udn7hYX960qo6dPl9HT47U1PSVmrh4uUbHJ+v94fO1Zf2dtX3P
      4Zqd/fDdxdiFqfqDr95/9ZbR4gU9tWnNQJ366KI+PDpRjUajhkcnqqXZrKFT52rw1Llrt7tw
      qYZHJ+ri1HRtWjtQA/29dfjY2Zqemalt962uPe8cq+HRiWo2G7Vj75F66qENtXRRbx0cHK6Z
      D35dj25eWxtXD9RLe96td4+dqSceXF+NRtXgqdE6PzFV01dm6sTZsVo0v7vePjpcjUajRscn
      a/rKB/X41nV15vxkjY5P1rb7VtXk1HQt6ZtXD927ovYcOlanRsZvx3kF+D81rveFMH//3PbP
      9CTwk7+1vvoX9NSR42fqlX2DN3Twb/z2pnrj0Pt17PT5G9oPgM/vM38IfD0/33WwGo2qm/le
      sR/9au9N7QfA53dLngO42Yu4iz/AF8eTwAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUA
      AKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgB
      AAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJ
      AEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBK
      AABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQ
      AgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACE
      EgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAg
      lAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAA
      oQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEA
      CCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkA
      QCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoA
      AEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFAC
      ABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQS
      AIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCU
      AACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAACh
      BAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAI
      JQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBA
      KAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAA
      QgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIA
      EEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIA
      gFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQA
      AIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEE
      ACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAgl
      AAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAo
      AQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhGrMzs7OftKKXfsH
      a9f+wds9HwBuk/8BjwT+Uw3vdrYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Part 1 - ICT Imports by Category Country Portfolio' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Part 1 - ICT Imports by Country' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydaZAc53nff33PubMHdhfA4lzcJADRPERCJKyDkuiiFNmJRIrxIVNWFItW
      +aiUnXLiWJGrYid2PsR2Uj5kF2XJjgSLMQuiREIlMqBMiRJIgRRJ8ABBAiDuxd5zT9/58Pbb
      M7O7OHZ2AEZC/6sG2Lm6n3n77ec+lDAMQxIkSJAgwTUH9e0mIEGCBAkSvD1IBECCBAkSXKNI
      BECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNI
      BECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNI
      BECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBECCBAkSXKNIBMASEAQBjuMgp2oGQUC9Xo+f
      h2GIbdv4vh9/x3VdXNe9IvS4rovnefFzz/OwbbuNnkajQesU0CAICIKg67TI3z733K1r4Xke
      juNc8DvdhO/7865V61pI+uRaSFpa17ObcBxn3r5opS8Mw7a9JF+7EmsTBMEl94njOFds387F
      QmvTeu651w6g0Wi07aVuYaG1mXtdHMe5YvtkLjzPw3Xd+Py+71/WPr7QPa5fFap/AvHqq6/y
      ta99jUajwa233sqHP/xhvvSlL3H06FG2bNnCz//8z/OjH/2Ihx9+mJ6eHu6//35qtRoPPvgg
      hmHw8z//82zZsgVFUbpCz549e3j55ZdxXZfPfvazAPzd3/0d9Xqde+65h+3bt/N3f/d3HDt2
      jG3btvGLv/iLvPLKK3zzm9/k7rvv5oYbbugKHQBjY2Ps2bOH8fFxVq1axS/90i/x7LPP8vjj
      j9Pf38+nPvUpqtUqDz74ILZtc++999Lb28uePXsoFots376de++9F9M0u0LPgQMH2LdvH7Zt
      c9ddd3H77bfzv/7X/2JiYoKf+qmf4p577uHxxx9n//799Pf3c//99/Od73yHl156CYD77ruP
      7du3d4UW27b56le/yhtvvIFhGPzqr/4qs7Oz7NmzB9u2+fSnP83Q0BBf/OIXOXv2LLfeeis/
      +7M/SxiG/O3f/i3nz5/nc5/7XFdoAThx4gR79uxhdnaWzZs3c9999/Gtb32LZ555hpGREX75
      l3+Z8+fPt+3bMAz58pe/jGEYbNu2jY9+9KNduVb1ep2vfvWrHD16lFQqxb/9t/+W8fFxHnro
      IRzH4YEHHqC3t5cHH3yQ8+fPc8cdd3DXXXexb98+nn32WTKZDL/1W79FJpPpwsrAsWPH2LNn
      D+Vymeuuu457772XRx55hOeff57Vq1fziU98gjNnzvDggw+STqfje/7QoUO4rksul+Pf/bt/
      Rzab7Qo9jz32GAcOHMC2bX7xF3+RkZER/uqv/opyucwHPvAB3vve9/KVr3yFQ4cOsXLlSj7z
      mc/w9a9/nRdffJFUKsUnP/lJRkZG2o6pff7zn/98V6i7xnDmzBluueUWtmzZwt69e1m3bh0/
      +MEP+OxnP8vevXsZHR3la1/7Gvfffz/1ep033niDAwcOcPfdd7N27Vq+/e1vc8cdd3RNAExM
      THD33XdTqVQ4efIkb7zxBiMjI9xxxx18/etfZ9WqVTz55JP8+q//Oo8++iibNm3iu9/9LufO
      nWN0dJQ1a9Z0hQ6A2dlZli1bxt13383DDz/MyMgIDz30EL/zO7/DiRMnmJ6e5rnnnuO6667j
      p3/6p9mzZw/XX38969ev54Mf/CB79uzhpptuIp/Pd4Wec+fOcfvtt7N8+XKefPJJenp6eP31
      1/nkJz/J//7f/5tbbrmFf/iHf+Azn/kMx44dw7ZtbrjhBt7//vdTLpc5evQoN954Y1do8TyP
      arXKv/gX/4Ljx49j2zbf+9732LVrF9dffz379u3DsiyOHDnCZz/7Wf7xH/+RnTt3cuLECZ58
      8kk8z+MDH/hAV2gBmJycZHR0lN27d/O1r32N0dFRvvnNb/I7v/M7HDhwANM0eeyxx/jwhz/M
      6tWreeKJJ+Lrcv/993PdddeRTqe7so8dx8G2bT7ykY9w+PBhwjDk//7f/8udd97Jhg0bePzx
      xwE4e/Ysn/70p9mzZw+rV6/mn/7pn/jN3/xNbr75Znp6elDV7jg2xsfH2bJlC7fddhv/+I//
      yKZNm/jWt77Fb//2b/Pkk0+Sz+d5+OGH+fjHP05/fz9PP/0099xzDzfffDOe51Gv17n99tu7
      Rs/58+e58847MQyDl156iVKphO/7fOQjH+H//J//w/bt23nooYf4jd/4Df75n/+Znp4ennji
      CX7rt36L8+fPMzs7y5YtW9qOmbiAOsQ73vEOenp6ePTRR7nhhhs4c+YMGzduZHh4mA0bNvDa
      a6/heR5bt25l27ZtnDp1iqmpKXbu3MnGjRsplUpdNeff8573cOrUKQ4cOMCuXbuYmJhg27Zt
      bN++nXq9ziuvvMKmTZsYGRlhdHSU06dP8+lPf5qNGzd2jQaJVatWsW3bNvbt20d/fz/pdJpc
      Lsfy5cu54YYbOH78OOfOnWPnzp2sW7cO3/dZuXIlo6OjfOUrX2Hz5s0MDAx0jZ6bb74Z0zR5
      9NFHuemmmzh+/Dg7d+5k9erVDA8Pc+jQIbLZLKOjo2zfvp2xsTHS6TR/9md/xhNPPMG73/3u
      rtGSSqX46Z/+aV566SWOHj3Kjh07KJVKbNy4kZtvvpnz589z5MgRduzYwfDwMMPDw5w9e5aH
      H36Yn/3Zn+2aVSSxceNG1qxZw2OPPcbo6CiNRoPh4WEGBwfZvn07b7zxRtu+LRaL1Go1Dh48
      yF/8xV9w9OjRru3jbDbL7t27ee655zhz5gzXX3895XKZ0dFR3vnOd3L69GneeOMNduzYwYoV
      KxgYGOCFF15gbGyMP/3TP+ULX/gCtVqtK7QAbNmyhZUrV/Loo4+yZcsWSqUSK1euZNmyZfHa
      zMzMsHPnTjZt2sTMzAyFQoFUKsWzzz7Lxz72MXS9e06W22+/nUqlwhNPPMGtt97K6dOn2bFj
      Bxs3boyFwqpVq1izZg07duxgcnKSVatW8d/+23/ju9/9Ljt37px3zEQAdIhSqcT/+B//g61b
      t/Lxj38cwzBiX6Ft26TTacIwxPM8PM9D13VUVcV1XXzf75rmL/H000/zjW98g09/+tOMjo6i
      aVrsVwZIp9M4jhPHLQzD6Or5W9FoNPj7v/97xsfH+Y3f+A0KhULsI200GpimGdMXhiFBEFAu
      l/nCF75Ab28vn/jEJ7rK6E6fPs2f/dmfceedd3LXXXfF1yoIAlzXJZPJ4Pt+HCfQdZ2enh7u
      vvtutmzZEruCuoEgCPj2t7/N9773PR544AFWrVqFoiixL1fTNFKpVLyXXNflxRdf5MyZM7z2
      2mucOnWKw4cPd42eWq3GF77wBVRV5Vd/9VdJp9Oxv922bVKpFKqq4nlevG/f85738Pu///t8
      4AMf4G/+5m+oVCpdocX3fR577DGeeeYZHnjgAVasWBGvjW3b6LqOZVlxrMR1XSzLYv369fz6
      r/86iqLwwgsvdIUWgGq1yl/+5V+Sy+X41Kc+FZ8bxD62LAtFUdrWBuDQoUP09vayevXqrtEi
      j/ulL32JX/iFX+DGG29E1/U4/hAEAZlMJr7HbdumVqsxNTUVf/7111+fd8xEAHQAaZrm83mu
      u+46zp8/z7p16zhy5AiHDx/m6NGjXHfddWSzWb7//e9z4MABtmzZwurVq/nOd77Ds88+G2/u
      btHz0EMPcdttt5HL5Zienmb16tU888wzfP/736e3t5cdO3bw6quvcujQIY4ePcratWs5e/Ys
      pVKJyclJSqVSV2gBeP311zl8+DDvf//7mZqawrIsPM/j5Zdf5sCBA2zatInR0VG++93v8sMf
      /pCenh4OHz7MxMQEu3btYnp6umsBvTAM+da3vhVrRuPj42zdupWDBw9y6NAhJicn2b59O47j
      8Nxzz3HgwAGGhoZ48cUXWb16NatWreL48eNdoQUEU9m7dy933nknqqpSKpUYHh7m4MGD7N+/
      n7Vr17Jt2zZ++MMf8uqrrzI1NcUNN9zARz/6UXK5HJqmdU2rDMOQgwcPMj09zbve9S7Gx8fp
      7+9namqKw4cP8/zzz8f79sknn+TZZ59l5cqVvPTSS0xOTuL7Prqud20fF4tFHnnkET74wQ8S
      hiHlcpmhoSGee+45Hn/8cTZu3Mi2bdt45plnePnllymVStx4443Mzs5SLpfxPK9rik0Yhhw4
      cIBarcY73/lOxsfHGRoa4vz587z++uu88MILbN26lVWrVrF///44ZhIEAU8++SR33nlnV5W8
      MAzZu3cvO3bsoL+/n8nJSTZu3MiBAwd47rnnAOGVOHPmDC+88ALPP/88a9asoVKpsHz5ctLp
      NBMTE/OOm8QAOsSZM2eYnJzkjTfe4PTp07z//e9HURSeeOIJ7r77bq6//no2bdrEvn37GBwc
      5EMf+hA7d+5k//791Ot17rvvvq4FhwCOHDnC+Pg4r7/+OpZlcccdd3D48GHeeustPvGJT7Bi
      xQpSqRT79+/nrrvuYnR0lK9+9at4nsf09DSpVKprGsvs7Cznz5/n6NGjHD16lO3bt7Njxw7+
      6Z/+ifXr1/MzP/MzbN68mRdeeIG33nqL+++/H9u2mZqa4siRI5w9e5YNGzaQTqe7Qs+JEyfi
      Y09PT/O+972PcrnMgQMH+NjHPsbo6CirVq1i3759bN26ld27d/PSSy/x6KOPEoYhH//4x7sW
      j3BdlxMnTsTujEKhwLve9S4OHjzI5OQkn/zkJ1m5ciWe5/Gd73yHf/Wv/hU33ngjGzduZPXq
      1eTzeW699dau0AIiBjAxMcGbb77JsWPH2LVrFytXrmTv3r28853v5Pbbb+f6669n//79NBoN
      7rvvPnzfZ//+/fG1W7FiRVdosW2b06dPxzGsgYEBdu3axQ9+8ANmZ2fjIGa9Xuepp57i4x//
      OJs3b2Z4eJjHHnuMTZs2cdddd3WN8Z4/f75tbXbv3s3AwACPPPIIu3fv5tZbb2XHjh3s27cP
      gHvuuQfbtrFtm927d6NpWlfokDh27BgTExO8/vrreJ7H7t27OXPmDK+88gr/+l//a0ZGRujv
      7+eJJ57g9ttv573vfS/ZbJa9e/eSTqf56Ec/SiqVajumEl6JvLJrFGEY4vs+mqahKErs3lAU
      JQ4ESVOxW4GhiyEIAsIwRFXVmJ5W+q4m5LlVVY1/u6Sv2zfKYuhpvVZzn3ueh6Zp1+y1aj33
      3H17Na+dTAmV51qIPs/z2vbWlcLlrM3VhEzjvtg+nnvftSIRAAkSJEhwjWKeM9G2baanp98O
      WhIkSJAgwVXEPAtAZkYkSJAgQYKfbCQuoAQJEiS4RpGkgSZIkCDBNYpEACRIkCDBNYpEACRI
      kCDBNYpEACRIkCDBNYpEACRIkCDBNYpEACRIkCDBNYpEACRIkCDBNYpLCoAwDJmcnGTfvn08
      8cQTlMvli34+CAIeeeSRed0li8Uihw4dmvf5I0eO8P3vf39RRO/bt4/x8fFFfSdBggSXjyAI
      qTte28Pzuz86NMHbi0sKgHq9zv/8n/+TiYkJHMehXC5TKpV46623mJ2dJQxDarUab731FpOT
      kwRBwI9+9CPq9TrFYpFqtQqIKT579+4FRAfCkydPUiqVGBsb48iRIziOw6lTpzh79iyu69Jo
      NJiYmODUqVPxeUqlEidPnuSZZ56hWCwyPT3NyZMnKRaLV3aVEiS4hhAEIbbnz3vd9QM8P7gi
      c4l/3BCGIX7w478el2wsPjY2hu/73HfffZimied5fP7zn6dcLqPrOv/lv/wXvvjFL3LkyBGC
      IODf//t/D4iBCV/+8pf58Ic/zLZt2wBiJv4nf/InFAoFtm3bRn9/PwCvvPIKjz32GDMzM/zc
      z/0cpmny5S9/mb6+PizL4ld+5Vf427/9WxRF4cyZM/Egi97eXjZv3sw999xzBZcpQYJrB+5F
      NH3XD9DUq9+99f83OF5AEDF+LwBLv/pdW7uBS1oAxWKRvr6+uBXrkSNHME2TP/7jP2ZwcJDH
      H3+cU6dO8cd//Mfceuut/PCHPyQIAv70T/+UjRs3snXr1rbjOY5Do9Fgy5Yt7Nq1K25Run79
      em666SZWrlzJD37wA2zb5sYbb+T3f//3qVQqvPLKK2QyGX7v936P0dFRfN+nUqmwZcsWbr/9
      9iuwNAkSJEgwH0EQxswfIAzBD348rYBLCoAVK1Zw4sQJJiYmqFQq8di8RqOBbdtYlhWPIKvX
      67Gg6OnpYWZmZl5juXw+z7/5N/+Ger3OF7/4xfj9vXv3Mj09zcaNG2OTSvawln2t6/U6tm3j
      eR7pdJoHHniAUqnEgw8+2O11SZAgQYKFsYCi/2Oo/AOXIQCWLVvGO9/5Tv7oj/6I//pf/yu6
      rhOGIf/5P/9nZmdn2bVrF6tXr+Zzn/scL7zwAu94xzvQdZ1f+ZVfYWJigqeffrp5MlVlamqK
      vXv38vrrr5PNZuPBBb29vRw8eJBnnnkGRVHih/zeqlWrGBsb4w//8A85ffo01WqVPXv2cOTI
      EXK53JVboQQJEiRogaooaKrS9lz9MZUAl90NVA7wNk0zHuItZ5RK3758fjnHajQa5HK5Nr+Z
      HBh+ock6nudh2zaZTAZFUeLjZLPZt2UaT4IEP4kIQxEEXogzmLrWxvyuZYRhSBDyY70eSTvo
      BAkSzEMYhjheADTZg66paImi9ROFRAAkSJAgwTWKRJwnSJAgwTWKRAAkSJAgwTWKRAAkSJAg
      wTWKRAAkSJAgwTWKRAAkSJAgwTWKRAAkSJAgwTWKRAAkSJAgwTWKRAAkSJAgwTWKS7aDTpCg
      mwjDMK4tVeBtbaHbSovE29XTZSFa4O1ZozAMCUPaOl4S0aEqV5+eIKKntWZV9Aq7+tdLrk1I
      GLfKUBRQEPS8HWsztzupgoKqirW5FD2JAEhwVeAHAUEgmJxsnavQ7KOia+pVvXlcz2+jRUJX
      xU2ja1fPOHajoSKOJ9ZIQlUVTF1FAQz96vTgdzyfSsOlXHepNFw8P+rMq0A2ZZC1dAoZE8u4
      8v3v/SCg7gh66rZH3RFDahQFUoZGxtLJpQxSpnZVWlTYrk/D9SnVHGq2F+8dVYWUodOTMchY
      +lWZDeAHAaWay0zVZrLUoFR34r2TNnUKWZPhQpp82iRjXZjNJ60gElxR+EGA6wV4QYgfhHh+
      c5CG0FQUDE10UzR10WtGvULNtYIwxPH8iA4x0WmuANBUFUMT3R51TcW4QoJJTJQSTdc8P4j6
      7ggmE4QhqqJgGYLpG5qKoatYuoaqXpnOk47nM1lqMF6sM16sU4yYnBMJSkNTSZs6+bTBsp4U
      Qz1phnrTZC2j67T4QUil4TJZqjNRbFCsOdQdl5rTnFKWMTUylkEhYzJYSLMsnyKXMq7I3nE8
      n5mqzfnZOsWqQ7FmU6q7sUKjqQoZUwjG3qzJUCFNX84icwXWJgxDZqsOb44VOTlZ5uR4hZma
      Td32sF0fVVHIWDppS2fVQI7Vy3KMDvewaiCLuYASkQiABFcEQRDi+gGO5+P6Ia7n489xLSg0
      zVRDV9FVwfQ0Vekq4w3DEC8SPo4nxvjJbpdBGOJ6AYoirBDZ6tfUVXRNxYyYbzc1TNlt03YD
      bNfH9YOY8RPRJN0JUhAYmoplaFi62lXtOwwFsz03U+Ot8TLnZ+tMlOoUazbluosTjYbUVZVs
      yiCfMViWTzNcSLNqIMvaoTyFjNmV9RHdNUMmSg3OTFUZm61xbqbGbNWm7ng0WiwAK7IAerMW
      K3ozrOjLMDKQYyBvXZbr43Lpabg+YzM1Tk5WOD9bY7IsBFK14UbXTFgjaVOjJ2MykE8z3Jtm
      pD/L6mU5MpbeNYHt+gFjMzUOnZji0Mlpzs1UqceWSCsbF+ezDI1C1mLj8h5uHB1kw/Iecimj
      bW0SF1CCrkPOlHU8of1LLdePfJXSCpBMXlMV/ECN3S7SLbSQxtIJvCAU5rvj4wVCKHl+iOP6
      BHM875qiYBoari+0f0/XsMKQlEHXmJzt+dQdQU/DFYyt1QpohaGr2K5HytTF+gUaKN0ZQRiG
      IVXb48REmWPny7w1XuLMdJVSzYlm3bZ+2o+0coXx2TpT5QzlhosXhKwfytOfSy1Z+w7CkLPT
      QhCdmqwwVqxxbrpGpe7gBfPXRtdU8mmTUs0RTNn2WDeUZ2VftisDWuqOz4mJEicnqpyYKHN6
      qsJM1cZ2/bZ4RCn639Q1ejI1ZipZqg0hPNcM5unLWkumxQ8CTk6Uee7YBM8fnWSqXI/jEfMh
      Xmw4wiqYrQiLpWa7bF87QE/ajD+ZCIAEXYfQbgWTbbgeDVcwONcTQkDePLYSoCmgaYL5W7pg
      sFIwKIqwBJYCPwhi5t9wvVjjdlzhChJCSXxWU0WQ0/UCDF3F0DVh5odCEGXMpWmWMfO3faq2
      Sz26QRuOEJa269MaClYQwsjSVTw/jIRodMuGYBrakrRL1w84MV7myNkib54rcnKi3DIHIIxo
      bn5eUcAPiH3glYYbMaEQXVPpXQKj84OQyVKDt8ZLHDtf5sREmfOzNeGCuoCPwvUCZioNqo1m
      vCIMhXAcyC9NINmuz+mpCm+OlTg6VuTkRIVy3b3oAHjb9Zks1WN6XC9AQezhXKpzd1AYhozN
      1vnhm+P88M0JilU7okMGx+d/p3VbOJ7H4VMzeF6AqircODoYK1eJAEjQVXh+ED2azN9u0XD9
      yM3hBwGaqqIoYOghvh9AqMU7V1UjP7zaOdMNI/eOtEJkEM92fLxAxAOkHxeaQWlT13D9gFQY
      kRO5h1w/WJJryg9CbDeg4frUHY9a5LetO4I2EfRs9uBPmxqO7+PqWmw9AXGcRNdUVK1TWgLG
      i3WOj5eFxj1VoeH6QLtW2ZrpIgWDoojrPD5bw4pcZRlLBEA7tdoqDZcz01VOTQpt+9x0NR5O
      f3EvtYLt+pydrorrpynk0yIwnG/RdBcDPwiYKNU5OVnh1ESF05NVynUn/v0Xd5or1B2Ps9NV
      TF0jZeqkTI31wz0dKzM1x+OVk9O8fGKaUsT85Zpc2Apop8kLfI6Pl8hnTIZ6Mqwbyos91BFF
      CRIsAOFrD7Alw/UEs5WM1w+C2BcPwv8vGaupa22MGIhjAXqHTM7zxfkcP8D1mszfjlxAtido
      kjeQoEeJsoNUFMWP6XA8Pw4Oax0KAMcT7icpjGw3oGp71G0hKKXLzIuEo+MJgeOZQkjJtEdD
      86K16Txbqe74jM3WGJutcXZa+JKhyfBbrYDW18V8blCUED+AsdkaubTBQC7F8t40A/nUogWk
      HwRMlRuMzdQYK9Y4P1uLmT8LJse2IgQUXC9gbLZONmXQn7PozYrsl07cdnXHZ7xYZ2ymxump
      CsWavSDzn2sdSXrCUKFue5yZqpBPR4HqnhS9WaujtTk7XePVUzNMlOpx+mkrPRcWkAq03FW2
      6/PG2VnWDuYYLKTJp43FCwDHcQiCAMMwaDQapNNp6vV6PKYxwbULPwhx3CC2AmzXx4kYrwwI
      2277lClNVUgZepTrLVwamhYIpusGmNHfi91bclyf7TatD9cLcPyAhuNTdz0hBNwgvoFUVSFl
      CMabMrTYCrFdH0PTYobcCc91/SBag0AwfKdpBVTqrhBOUSDYD0I0VaHuKKQMLWaGMmiuawqG
      HtGjBx1pljMVm7PTgvmX6g6tzK2pXcL84GIYWQMKihLScHzGZur056qs6M/Qm7UWLbAbjs9E
      sc65GeHzl4HnSzM4QZOiCCFgux7nZmr0Zi0GcikGCxmy1uLXplhzmCw1ODdTZarcmMNsxd9z
      IV6Xv1uYjqW6w9mZKv35FFOVDD0Zi8XqMrbrR7GZSouyIt0/F16fUFqvbUJAuO/eGi+zeUWB
      fLpwaQFQKpX4vd/7PQqFAn19fbzvfe9jbGyMW265hUceeYSf+7mf45vf/CYf+9jHyGQyi/t1
      CX6i4EfuFC9idr4f4voy+0b64f2YoamKgqVrgE8KDV9tftbQVPyw6aPvxAhwPD9O/WwVAl4Q
      0HCEgJJBYQWR+eP7KilTE5aJ5wtNW1dxPB9Tj9xAi3RzSJO9mRUVxD5/uSYNV8QFXK+Z6ijO
      I25eI0pJdbwA0xNBbVPX4mMvRkB6fsBs1aZUc+L88VbmfyFXh6II7Vb83WQylYZLseYwW7Fp
      uD65RQgkmYVUrDnM1mwqkaul1cUh/oe5wkjQIJi/tATKdYfZqk2x7lBtOGTMxQXLXT+Ig8rF
      mhO53eZr3fOFgBKvjzid+LtccylWHUo1B8fzSZuL07mLNYdzMzWKtea6NBl/87lcI/lThaUW
      tggBgSAMOTNVYbzUYNWy3KUFgOd56LrOr/3ar5FOp5mdncXzPAzDYPXq1ViWxdDQEKbZmb8t
      wU8G5EaUGT5B5OqR2T+x/71FAEh3AoooplFVBSNQMQNiN5EXp7gtTgJ4EVPz/CYtftC0TDw/
      iIPC0rfu+iopQzB/x/XRVQUzEHGElCmOGbTELxYDxwviNEcp5GRdhO351GyXhuNRbXjxd7Kp
      Zr2EZWgioO35pHwtDgJKq2QxEFlIHuW6E7t+2jFfCLRq/UIINIWO64niqHpk1Swm4BmGUHe8
      +LFQts9CAqmd2Tbh+YE4VlQ4ttid47UIgErdnRNknbsuTfdKkx5xRsmM645Hqe5QrDrY7uIF
      QKnmMlu12woEoVUQXExgK/PWDERMYbZq4/rB5fUCKpfLHDp0iDfffJMzZ85w6NAhKpUKTz/9
      NPV6naeeegrf9y99oAQ/sQjCED9ibmGUyy73rOP7+IFgglLTrTQEw3M8P87IkZqoLP33ogpZ
      d4H0yEvSE53cD4LIKhHHdH2Ruy1TUxuuyGapNlwarhcXZ0lG7UfCTD7Eb+1sfYQQEM/DECEQ
      I8Hg+iIeULPFzVmzhTCQAtXxhNUSa3tERWMdEBOGUI3jDn7b6xfycbczvPZz+njZwIQAACAA
      SURBVEFI3fGo2l4suC+bFkLqjk/N9mk4F/puK8OVj/l0SAj3mhBGlwwhzEEcN/L8SPm4CO3z
      rILm6xJBpPyIYy5+H1dtl1LNvcSnmsJA3kPtwqBpIYShWJ9SzcW7XAFQr9c5deoUZ8+eXfQP
      SHBtwo8YwdxKW7lJF6rCDQkjP2d7b5OlIAjn97QB4hulmQra7Kmy0KmlK2BptDTN9SYdQdxu
      AYizllqZhR+t19xjdSKIWrGQtj0X4QI0L4S59F0pdGlbXBLScr0IJc2/LvIxUWi4NOX4UkK1
      1R3U/vrCezZoKRy7LHtkZGSEX/iFXyCdTvO9733v8qhOcE1D01RwowBuy+ui0lZFCcMouEvs
      uFQQ76mK0p7DvYTcAnVewzDxtzy3rqr4qvCValGbhYVOrcp80CVgboWqSDttZjkpgGmooMha
      CGJadVVtO72sWO4UCuK3X/Jzl+k/lym9na6RaKh2eZ+7/M90vj66pqKpChfWvZvB1YvRpCrK
      kvo4KREtF/3MBX6vcoE925pUcUkBkEqlePe7342ui4+OjIxgWRZBEBAEAalUijvuuANNuzrN
      qhL8/wlNVdEUESC1Pb+NQRmahqMGcdBSvq4oIufe0sXNpqrNbpNy44tisMXvrbYmc64vKmo9
      PwroClo8PyBlapi6rEAWzNiMeu4YuhYLI5kRBNAJ31Wj39pwvei3i1J92/WpuyLdNZsS91gm
      qqfKpnSMqD2FoaukjGYNggKYemd9k0S/GIOUKRqXifz/JiNpDSa2Q5nzv4CuiV44GVNfdAaQ
      gkLaFK0ULPNCjK7pW1+YnnZYUWuGtKktWgaI/k8iOSEWzMpcLX8+Pa3rJdp4iL9FZpmGoSnx
      PlsMsimDQnbhmIoUuO3B3/n0SDplB1XL1EQKqKZeWgBkMhk+9KEPxc/Xr1/P4OAgf//3f8+O
      HTvIZrPcfffdi/5hCX7yINs6iEKlAD3K4/d8kVYJoKDjqjIILG7WlKlhalqUYila2Uqtp9Ma
      AKnhay3MW1dVDC3EMlRcTyVl6iLgG/UCMnURABZVyeJvNcoCkkViqtJZSwhLV2lEzbpkXx9R
      cazFawPtWrmuqWQtA8vQMHXR8dLSNQxdjS2STpiKqatkTI2etEHa0qMK5FY0s2raXo0YjuxT
      JGFoGoWsScbSyCwyyKkokLH06GGga9o8l4kMQC+UBTQXhqaRjYrSMpa+aBvA0FR6MiaFjEk+
      ZVBteC2uFRnsbdI1n572M2ai7qmFrBk391sMejImvdkUmqq0uQqbAd6w7bq0vi8ZfqtAAoWs
      JWolTE3rrBAsnU5zzz33UCgUktz/BDF0TUFxiRm/q4mcdV1T49CdoiikwuaNoKlNbUsyX8Hs
      lPjRqadDVvSauha3d/BD0bYgZQpt3/YCLEPcWM3Ga0pchCabwsVN6jow51vbWli6hq2JFE7L
      EOmynt+8DUUmVSjWUhHao2XopIyoGZwRrZEhLBd57MVA11R6cxaFjHiUag5hFBMRx2pl/vOZ
      bquWqSiQSxsUMhZ9udSimZyiKELLzZj0ZS160gbTFZ9WIbRQOmPr91sZYE/UkbOQMclaRkdr
      05MWDLuQtZgoNfB8qfE3M6EWNi2UNkarKIoQJlmTQtqKUp4Xh560yUh/hkLWYrrcaHmnKZQu
      jvb3VVVh1UCOwZ60aMC4aIoATdNYtmxZJ19N8BMMVVEwDRXHV9GDENPQCMKmS0EUMQVxgFj2
      3dcjxpoyVMyIwemS+aqdtV6Qw0uEqyfE1FU8X40LznQ1yu035lcCS0vA1NVYCMgOoZ0KI9la
      2tBVUpYet8eWAWphdYhqYJlmaurR56POl2lTj90bgrbOeyX1ZS1W9GUYm81QrNnMVOw4r761
      2ndhv3LTGrAMneW9GZb3ZRgspDqKS6QMjcFCmuVlm9mqTdV2o86fF2O2kh7i91OGzvK+NMt7
      swwW0h1p3ACFrMmynjQr+jLMVGwminWCeD2a52tPsWynRwEKGZMVfRkGe9L05a3Lil/MhWVo
      rFmWZ6Q/S7FqR720Wq/BwphrrclHIWOydijPYCENJL2AEnQRiiLcLK0uDULiHi2iGZywBoIg
      jHvby5YGpqGSMvRI6226hDqFHhWTCcYrunrG70WBXzNU23QpVVXj/jYpQ8MytUgIaHG76E4h
      hJDo6+N5IoYGRuTj9/F94Y+X9KQiq0Mw/aYVkDJFz52ldEtNmTor+jKMF2XnyoBqw20r8JL+
      ZZjv4wZxzVb2Zxjpz7KyP0shvfhWByBcasvyKVb0ZeKunmemKlH671zXz1yI85m6xor+DMt7
      s6zozzCQ70wYgRAkw4U0s5Us5boozputOrEQWNgF1KRHuLUMVi3LsbI/x/LeDPnU4q0REBby
      yECW7Wv6mSqL6uR2QdQU2G1ULCAA0qbO1pE+tq7sjYfEJAIgQVehayq6L/z/6FrsP9WioS+t
      aZaC4Ub++WjgiWUIH3c3hrFIt4unh1hhOy2OG7mEIk0chOtKNFkTVoChS7eLHmvbS6FHMnPZ
      7kEUwEXVxp6K7fptWquMS1iS8Rti0Id0BS1FOGqqwmBPmnVD+bhS+sREWeTOAwsx3VamYmgq
      Q70Z1g/3sH5YaKhGB/EIiaxlMDKQpWqL/HQFGJupRUHzi1sAKUNnRX+GtYM9rFmWY2V/dtGx
      iFZoqsKynhQ1J0fd8cTENsqiMji4lOatkE3pjPRnWbMsx5plOVb0Z5Y0YS5laFy/pj9uRT3V
      5gq6EB1NehRFtBXfsLyHnesGWDmQjRWZRAAk6DpkYzdVDQAdRVHwgwBDEy4P3w8IQmI/t3QD
      Sa27dSDLUqGpKq2FqSLo62No4YKthlWVFheQ0P6F5q0vOd4lsp5U5G0np47p0e9dyGVhRO6w
      tNW0jDKm0P6XSo+uKaxZliOIMrNMQ+PsdJVi1cH1/QWzgTRVIZ82Ge5Ns3pZjk0relk3lCe/
      hHbHIBSB/lyKtYN5wlCcJ5vSOTddo1R3FsyFNzQxhEW6fdYsy7F2MEd/1lrybAJT1xjpz+J5
      Qbwvz0xVmanYNFxvgdoSIdwLGZOV0TCYdYN5Vg1klzw1TVGEsL5pdBAFeO7ohGgMFzbdYxfa
      CkoU19o60sctGwfZOtLb5jZMBECCrkONNF2RU68IjdsTAmBukZfQYpsM39JVMR+gi6P9tCgV
      T1eVOAXUdn1Spuj373gBwmBR41oAMwpMG1EcYCnaditahUA8fUxToz78zUro1gHsMvPH0jVM
      Q+0K85e0ZCyddUN5MdXKMhjIp8REsKroE+S4zZGQuZRBT8ZkWT7FUG9GTAQbzJFPmV0Zxagq
      sLIvi2WINMX+KFBdjEYets0ENjUypkFv1ozdPiv7s/RnO/O1L4SUIdo4ZyydrKXTn0sxVW5Q
      rNlU5ESwQNCStnQKaZOBfIqhlolgqQ7jEHOhqYo4XjR57NCJac5MVag03AtOBEubGn25FJtW
      9PJTo8tYP5yfZxklIyETXFH4gcx0iXrytAQ+pQtI5LqL5meSAV8JyMHrfiDaVnv+/IpjTVok
      LZlAV3ImsOMFcadQohYVciawYPTNRnAyGH0l6HF90ZJ5olhnoiSYXM32YyvJ0FXSEWNe1pNm
      sJBisCe96N42l4MgCKnaLlNlOxpP6UT9fZrpoeko5VTOBB7Ip8iY+hWZCex6AcWazXixzmxV
      9Akq193YnampCmlLi2YCWwz1pClkzSuyNmEYUq67HBsvcWqiwonJMjMVO54toSoKmZRO1jJY
      NRBZIkM9rOjLLJgwkAiABFcFfhBEGUFNn7sIDkf5/leIsV0IbtRnaG65v66pl1V92U3Inke2
      F7QJJDWyFroxGe1y4Xg+NdujXHdbtEuhdWctnWzKoCdtxnRdSYhpbgGVhhs3ixMQxWNCMzfi
      FN0rDSea41CqO9RsP25/oSqK0MzTgulfnbUJqTQcZquidbXs6gqQNnUKWZPhQppsyrioIEoE
      QIKrirnb7e2sI1lo679d9FzsNrzaNLW3YG4lRAjtt4Oetl50bzMtMSktyTiSirdlbULaRonG
      2T+XQU8iABIkSJDgGkUSBO4yZGvfVlwpP/LlYG7XTTmG8e2CdL1I6Gpn/Wy6AdlquRWylcXV
      xkL7Bt6evROEIdVoyLrX4uYQs3/1q+aOkpCT02SHTk0T9SayOO5qQl4nz2/XuWX1+9Xey05U
      o+BGszdkMWPGMuhJX7r2ILEAugDZrrc59KPZBlm2MpDZH5ravYyShSD92nKTyl7lXhBGfWxE
      1o2qghUFXa8kg5E5747rxzEAJ/J1N+f9NovBrrRwktdJzAcI40ZoIHPKNWRW0pW+oeW1akRD
      aRrO/LbBcjSlTI+9UtdKXpfJcp0zUzWmK8KvbLviWqV0lUzUsmH1gJgpm7H0Kxawd6OpZaen
      qkwU6xRrNtWGSL9UVZWspYuAayHFSH82GkV5ZfaOZPoiDiFiJA3HaxMAMkU3lzKiQr2lFQ1e
      DJ4fMF2xOTlZ5sR4mbHZOuW6EAKynclgT4pVUSrq8t4M2Quk6SYCYAmQN7Dt+WIWbhBccOiD
      bGtgGuoVY7xyiImcuiUzXuZCtkiQ7Q6sKNukm/RI36QYeiIGl0hmK9+TzFXm/csmaUutuL0Q
      PXY0k1gMghFM154nAPR4fWRu/pXQwuWIyoYrmMpcWiRkOm3aFE3j5HXrJvwgYLps89Z4mbcm
      ypyeqjBbtaMq2MgCUBVyKYN82mDVgChwWh09urmXZZbLiYkyb5wrcmKizFS5QaUuCsQCxP7V
      VZV82mSgx2LtYJ7NK3pZM5gj12HF7YUgBbMYESnWpGa3BqQFRKGeyATqiR45y+iqAiEVlsOn
      Zzh0cprj50tMlOpRhX1LozhE1lY2ZTAykGPrSC/vWDfAUCE9z7pNXEAdQmhMPg23OfzcjUxU
      Z86NbBoajhc1SPM1PCMUfW+6lM8NRGMXPWw3iKddSXrcloInI7JCZJM0zxfVsGIUYvc2q2Sy
      tiuYXCyQ5rg5FEWsj+0KZutFtEjG1w1I5l+zfWxXTMKS06KalpIQ0rbjxxp3ytTFupksqe3C
      XPhBQM0Rg+Gr0SjIIKDNGpGwDGGFOJ6Oa+qkzZBsSu+am8oPAs5OV3nt9CyHz8xyYqJMpe4s
      qDhUGy7nZ+HcTI3TUxU2Fgs4fsDawRwpY+msJAxDijWHQyenee3UDG+cm6VUW5gW8Kk0XMaL
      Nc5O15gqNSjW+rludR+FjNm1+6pSd5ko1Zmp2MzWxGjHmu1Rd9unjcmutr1Zi966S6XuMtSb
      oTdrdm0fV22PF9+a5LuvnuPUZEV0cV1Afw8h5knFqsPpyQqzVYddW4ZZPZBrE0qJAOgArcy/
      7giG0nA8HDeIfe5ynJyuKtiuL5p7GSopU+aei6XvhhAQboSI+UcMzomsgLnjFAUtourT9QIs
      Q4uFgwVd8e+KtfGpNjwarocTjT70/aCN4cpWBw1HFGU5no/r6VHDq1Bo40vUoKRmXW14VG1R
      vCPnE8u1qTtebDqDMOd9X1xDkaOvk0vRlfQ+z5dpjT7lhoPt+JTrbps7SvZJgqYF4KfFaEw5
      4SyXMpZsCYRhyOmpKi8cn+Tlk9OcnKjEE9kuhmrD5dhYiZmKLeoYPJ/NK3uXLCRnqjY/Oj7J
      wTfHeet8eV68aCF4fsh0ucFzdSdulXDD6DL6staSaAnDkFLd5fxsjYlincmyzXhRVCXXo9nN
      MjtJpoGmTZ2Zis2yfIp6Tyqa2hbSl7WW7PatNlwOvH6ep147y9mpajztS04Dm9u6Q/YHCpWA
      2WqD7716lkrD4b3bR9iwvBB/LhEAHUAw3CAKTonOhZKhyGHfrRAuDg0vUKPZsgGyE0frRKhO
      IPyTfsz8644fBfCki6FdS5CxCDfqkOkHYdwvRGHp+fiS4YrCFKHltg6El/5UGQOwXV/064k0
      f0Ek8bQsU1ka03VcMR+2artxsUw1os1xxbxg2affdH0UBRxPw/I0MoFOEIQtw2mWZgn40XzY
      huvHA9krDZd6JLDr0YxfUa2sxpaIpWsx0xcttU3RHkLpbDYBiH0zVbE5fHqWV05Nc3qqgh80
      LcULMV7ZLC4gZLpi88qpaXRNNBpbP9zTsbZbsz2OnC3y8olp3hpvZ/4LpaW29rqRc6OPj5ew
      DI1symDH2v6OA8RSGE+U6kyU6pwvisd0uUGp5lBpuHHhniBC3OMZy6DhRIqXH6LQbAN+OQHZ
      C8H1A146Mc0zb5xnbLoWj+mUjL/9/+Y1ap5Ooe54vHxympShx9XciqIkAmCxkD5/eSNLBtfK
      5Gy3Xeu2jIjBhVpzxGDU5lj2w+lUQxA+/ybzrzXcFjp8vCDA90NcP4x6zyg4noJlBPiBHrUd
      EMdSFNEozerQKglD4f4Sbh9pBTTpcebMum0gBrGkTa2tPbJcD8NTY5o7gR8E2JGf3Y6stGrk
      vxXuIL8tC6juCEYv3WdhSDSmUsHQhJWwlKwl1xfCp2qLwqaKLYqt5IB222267mQPIFsXrgU/
      EMNNWoW0ripoF5yidSlaAs5MVThydpbTk1XcaGD9XKY7HwrNeQEBE8U6b5wr0p9LMdybIWst
      vmdSGIacnaly5OwsR8eKES3hRQXAQnDcgDfPFRnIpxjsSbFuKN/RPvaCkFLNoVi142rk8dka
      02WbmuPNX5tQWG0l38Z2ZPW0GDxkGqKFhhXFkzpZm4linUMnpjg1WSYI569N63UTaL1G0tpW
      qNQdXj01zbqhPL2bhjD0DgfCXMuQ1YmOJxiKvHHLdbflJhYuIhAao+MpkaksmJ9olCZuYMNV
      MbQATV28ZhmEgrFLxmpHrpaGIwKvDUc8WpmcotB0+4QA0RQs1UfXVDE4RVPROrhxZGuDhuvh
      yvNHjLfuCE1cpqtJWuLRjIbY2CKNzUdXFeqqiql11v5AZrU4nvD3S82/Oofhzg28pk0dzxcz
      BBREwFHTFLSopbQXBJidXKsgjAS1T63hUam7VG1BS7HmtKxTM7goWkBr2F50myrNvWPoKnYU
      R+pEIM1URND3xEQ5Zlhztf/5roW5jEUhIOTcdJXj4yXWDuUYHS6wWHndcH2OjZU4dr5EzZYM
      tp3BtWq4c+mRQ2zCUFgSR8dKLO/NsKIvQ6oDK6DhiGsyU3WYKNaZKjeYKtvUHfeiQigMwfY8
      Zipi6JCc9pZLiQllncwncLyAo2MljpydjSvGJcNv/b99SH1zTdo7qSpMlhq8cmqa0eEeVvZn
      Ly0AXNfl1VdfJQgCDMPg+uuv70iqBkHAU089xS233EI2m41f9zyPN998k3q9Tl9fHyMjIxhG
      e8rSkSNHCMOQLVu2LPq8rXjllVcYGhpicHCw42PIgR0yqOl6TW1XMDwv0izl5/02P7sc5+do
      kT88yhzqxLUg3AVNrdGVgddIOFUaMvgqXAtN90+Lb7Wl14zr+TiqgmWEdOJelnR4katDBqIa
      EfOVsQnZ+Ex06gzwohsj7o7pyLGJoj2CoWuLZiogerjYro/dZqWJNSrVnEhgNl1kiqLg+gFp
      X4/cPtGcAsePG8q5vtrRtfIj15fjRxlafiDiAHURBC5H7Q5qjaYAcL0AxxTnko31DE3EboS7
      UaQfq4sUSEEQMjZb4/RUlVLdock8FnIttKIZuyGa1AWif9GZ6Sqnp6qsGsgtyvUShiGzVZtz
      M7W2NsdzmZz8bBPzhZFkS5OlOudmahRrzqK17iAM4+siG+KVol5E7evRvj7NNRH3fKnqkDY1
      ijWTQs2hL2fhB+airdma43F8vCSmtoXz12Wh69Xq+mmlV1EgCANOTlQ4P1tjeV/m0gKgXC7z
      J3/yJ+zevZve3l42b96MoiixQHBdlyAIME0TEAw9CAJ0XUfXdTzPw3VdVFVl//79bNiwQQzd
      sCxUVaVcLvPnf/7nXHfddZw4cYK7776bd7/73TQajfhzhw8fJgxD1q9fHw+n9zwPTdPmnc9x
      HHzfj49v2zZhGGKaJsVikUKhgO/7OI4jOi1alz/EQi64TK/0I+baZC7CxdBwvLY6ABkQFhpv
      s/2v1JhTRtgitReHINpwnh/gRC4E4e4IYppkMFhkIUVpqBFD0aNOnWbEvM2gebMthh55c0o6
      ZC2CcAdFjDhaH6nJaKoaWydqVIBl6EJgur7IZkqbGvM1mUvDC0SATgbi5rrpGq4X5XP7cbGT
      qatxPxVDUyOtX7iu0lHwNQyJJ3YtZm0cL8oUc4XAd1poKTdcarZLtSF68Ej4QUiIdImpsUCV
      Fp/r+Ti+FsUnLn996q7HTMWmWLUJgrmaJDSDi3MDi2IkovyMPGcYQqXhMhsxzMUIgCCE6YrN
      VLkRZauFLQyuec/JdVwYTZpA3A9T5QZTFZvBQnpRO8cPwrjvkHxUGh7tQnL+94TPXezTMBSM
      W2abCetX3IeLDdxPFOucn623uH7k71x4jS6E1qEx5brDudk6Wxz/8lxAIyMj/PIv/zLpdJpv
      f/vbvPTSS8zMzHD//ffzV3/1V3iex3vf+15GRkb46le/iqZpDA8P80u/9Et86UtfYnp6mve8
      5z00Gg3+4i/+gpmZGT7zmc9www03AJDP5/nUpz7FU089xUsvvUQYhnzlK18hnU7zwAMPRAss
      Xtu0aROrV6/moYce4sYbb+Qb3/gGABs3buQjH/kIf/3Xf8309DR33XUXmzZt4gtf+ALZbJZ7
      772XI0eO0Nvby9mzZ/n6179OuVzm137t19i6detlXQyZVil93XKYiHT7SDO+ETE7IE6PE35k
      DdsVDF+mi6ZNnSAkTstcDGTlaBCKTptBxGiCMIxTQaVVIgrBhBarKs1ZuK4X4EUCSAotzw+i
      UYyXT0sQNitZxfrIZmuC2ckmY3XHw47cUmIgSxBXmbqayHJxvQBPl8cSVld6kb5uPwhoRK4f
      mXUUhuK3ycytetT0zPZEUN4yNMiK9tVmNIqRUPRZkWtpRgJqsTaA3CteS5aYiM0IIVCpe5Tr
      Tmw5ApTqTpxl4sgxkn4YZZoF8fPFQjQSc5mtOfPem6tlznUBiT0xVyCH1Boupbp9wTqYCyEM
      hb+93HDahp7PzWppF1Di/Xah16TJ80PKDZdypDUvRgLI6yz3SM325mXSXQ78IKDaaDL/uhMp
      EubijlOqOUyV6y2vzHXPhRcRAE2rKGwJCtdsj6lyHdf3uay76tixY/z3//7f+Zu/+Rvq9Trn
      zp3jU5/6FK+++ioDAwN84AMf4J//+Z9pNBps3LiR3/3d32V8fJwXX3wRVVX5T//pP3H77bdj
      WRaf/OQnufPOOzl+/HjzR5ZKfPGLX2T//v3s3LmTb3zjG/zBH/wBH/nIR3j88cfFT1EUbrrp
      Jr7zne/w8ssvs2LFCur1OjfccAO/+Zu/yenTpzl48CCmaXLfffexf/9+jh07hmEYfOhDH2Lt
      2rWUy2Ucx2HdunV88IMfZHh4mIMHDy7qgrTeoFLLBGI/qszHbziBeLheJDSI4gJh/F2JhfOc
      L43WmbKtx3A9sSFsT2i3dUeYpDVbZgf5cYWuH30/CJqbyOuAqcjvyd8VAnZLzEO6qFxPpEGW
      ak4cn5B0imMEcZdFoM1F0wmkQGm4Pk5LDUIQWyhNF5qs5Wg9nbRehHDrnI65iOskIneOTPGU
      N7XU8NyoXbQTKRVusHhmNBcyHjG/9UTT9y6fX452CVH8x23Gdy4XIQhaLoPJNmm5ND2uJ+M7
      S79mYYvW37oUTWslnPeefH+pWKiYs52G5t/yHpZC/GLXz3YDguAy00CHh4f5l//yX5LP53nx
      xRfZvXs3o6OjPP/888zOzlKpVLjtttsAyGQy9PT0oGkaruuSzWZJp9N4noeqqhQKBbLZLPV6
      U6qZpsm2bdv48Ic/TC6X4+GHH6a3t5dCoYBt2/HnNm3aRLFY5JlnnuHee+/lxIkTZLNZ8vk8
      qqriui4zMzOcO3eOd7/73dx0002YpskjjzxCqVSKj/PYY4/hOA79/f24btPk7g6kUGj990J/
      XT1I3nI55+4afRe5AbpwbywK85TZxX73imBxR17Kb7ga6Ii0Dr7Uqs1eabzdy30lzx/C5VkA
      uVyOjRs3sm7dOgA0TRjAt9xyC6VSiTNnzlAul+d9b8OGDZw8eZI///M/5+mnnwYWbjeQSqW4
      7bbbWLNmDYVCgdtuu40/+IM/4B/+4R9417veFX/Osize8Y53UCqV2LBhQ9sxFEXhuuuuIwgC
      Tp8+TaVS4bXXXuPQoUOoqhoN4G7i3LlzHD9+fN7rl0JrwoWuKrF1KQu6tGgoesqMHoYeZ7FI
      F49M5VvomItB6/CU1kwQQ1fiSVKaqpI2NQoZg0xKjwecy75AMttHVZqZNkaHaZe6psS/S0FU
      +DbfU6Ngs2gpUMiapEzhjrKi6mT5uVb/eqcpqRJi0IwYZmK2zKyVbiczmhQm18XQlDbmkjLU
      qEpaZbFxiItBjBkUPWP06CEDifKhKMSziE1d7KVuFOqJojcVY14cQ567+VxRLi8DS1XFddQX
      WZcgstLUy5onLGm5HHoMXYv239KuWXQl2lKlL0TPXLK6UY1s6ZffO0xVJT3NoPSF1kvMlL4M
      C6C3t5f/+B//I6lUCoAPfvCD8Xtr1qzhD//wD6lUKhQKBdLpNDfeeCO6rvO7v/u75HI5/sN/
      +A8Ui0X6+/u5+eabyWazvO9974vNkkKh0HZ8TdO455572LVrF6lUiqGhoVhLLxaLFItFfuZn
      foZUKhUfx7Isfvu3f5tcLsfnPvc5SqUSfX19mKbJhg0bCMOQFStWsHv3bkzTZPPmzYyPj5PP
      5+PzXg6MlpRE0b5AtA0QqZ5BVEEqBIoM9uhSIEStFmTanqzGBRkfWPyNbWgqdfx4tKCcIuW4
      QZTtozZHIcrc8uhcVkSHIadMqc1aBG2R/n9o7zIq1kfF9sQxrSjVM4iqoA1dmKVq9J4lGaGm
      xH1MJCORgfPFQlMUUqYe12zIY+mqQsrQcUwx0ENRwPNlVXZz+LoU3KIolJg6twAAIABJREFU
      TYlmA2tYutqRwNYUIWw1VY3+V+K4UMrQ8NMi86g1CJxLG+RSIn1QXic1emgtj0XToipkIyE8
      XZk/YLwpiNod6Atnl4jnWcsgHw2KWQwUBfJp0TdHU5UW92Mzh118bqHn7TRI6JpCztLJp41F
      s39dVWLFTYzJ1EXKrbtYRVF0KxWKoB71cVr8Ps6nTfpzKSZL0mOiRMFmEZBf6D4VAkCZI6ya
      f6ej8Za6pl5aAEi3TfzldLrloAoDAwMMDAzEr1mWKMGW3+np6aGnp6ftmNKCWOj4IFxCo6Oj
      8XOZ+TM2NsaaNWvYvXs3QBvzlsfo7++nv78/fn3NmjVtx5X/S2tmMWhqyCqO2mRuviGrW4V5
      qqlq7AhSEBvKMvS4YZRsBtc6crBTbUE2LnM8P551axkqARp+FPh1PR8zCOMaAE1VsaLmYroq
      5vDKVFAh4BavvSiKEk/4Er2PRF2B7O/jBVqUWURUESxuVCu60ayo4Em2PhAzcGV2y+LXRkz2
      8uO1NQ2hEVqyX1OUW69rauyOinsARb2ILFOL5/HKNZHZSotdG3l+02g2BJT7wU8ZYm0QglSy
      uWxKtBfIp83mOkVrZcaPxVdKp0zRSbMn7pkjGX2TscwPssrfwrz9oQDZlDhmfpFRTlVR6M9Z
      DORTcWacQHvweT4dSvx/K03S0h7Ip+jPpRatyGiRoE9HFnza0Mhaeks8oRkIXygNVP4tWlVr
      pI3of7Mz622wIGYMv3FutuW88jxNYSkytJq0tFonrdaLokAuZbC8N0Pa0H+8CsHWr1/P+vXr
      31YaTF3D9UUbA9MQBUMybRHaGbL8vGB0TcYivyurPTs16+XIwGZjt5BUlFUEYjs2nAC/xRWj
      QNNFFf0vO0y2zp3tBLrWLNyyorWRPdwJxaYUQkGPabEMrUXz1uLsG0NXRRqwvnhrRMKIjuWY
      WtzwzvdFZXQPphCYxvxCMCkE0kaTSadMIcAX6+KQEDn8TUFr6ippSyMIDVH9jHBbGPr8QrC0
      qZNPGaRNrekyitxpagf0aKrCit4MqwdynBgvM1u1mcvcmmmDC2UBtTJfIdxG+nOsGsguuthJ
      URT6chYr+jL051OcmapGrzfPI7CQNaK0MLvmJwfyKVb0Z+nNLr4pnKooZCzRLqE3YzGbcajH
      6ZyttQAX1r5NXaMnI0ZnFrImhYxJxtI7uq+ylsH6oR5ePjHFTMVuEb7z05vmu6fahQEIL8Ha
      wTzL+zKiGHXRFF3j0DXh6/R8jZQRMbdo4eXN3cxfBxThx5bMP2a8UWtfS++8F5AaFU4JoRRg
      BSqerxIEor0zioKuRWmHfhAXWknLJdWi4co2zMYSWjFrkUtJMtqU2SoYhcXjeO0MS1GUmLGl
      IitJashpQ0PrkB6lheGmDV2kT1p6FEAU9Q+appAO2hmWrjVjOBnLIGvpsbUk/fGdro1oB6CT
      sQKRsUEz7dLUNSzXI2cZuL6PoWltFlI2JebxyqpSuZ86Fdb9eYu1Q3lOTJSp2W6UvhnG6yOt
      tflMRmn7X1UUlvdmWDeUZ0VfpiP3WMrQWD/cw9kZ0W5BVNy2WiEXZnZNBi+YXNoSPYnWDeWb
      vaUWTU8kALImy+xUXNtCBerOhbPSJPPvzVr051IMFjL0ZS0KWSEAOoGpq2xY3sOG5QVefGsS
      1wuQ9QbynM2snyYdTf9/qzUA/fkU21b1MZgX3pNEACwSmqpiGSKNU6ZSAhAS+2ZTptZUnBTh
      /zUNDTNyiVgtGqV0yXQKQ1MJ9BDPF5tdbgQtqmKd2+9Godnr3tRVUqYel6lbkZuiU3eUokjN
      vzkxKQhCdFX00NE1lXQohFEQhJFrpTXIqZK29FgQWFH8olNIF5SsUWgO8W7OIAhDkRKnqGBG
      7rhYAJhN5h+3qF4CPYaukbVEzYbnB/EW0VSFlKtRd7W4ulu27RbnFcIxF1kBWcsgmzI68inH
      tGgqq/qzbFpRoFR3ODNVxfN9Lsfd1spYBvIpNq4osG4oT7bDXvyKojDSn2Xzyl5mKo247QFI
      QaQsmPkjNVzJ7AxdZXS4h80re1nZl+14H+uaEmvvjShN2A9Ee4dSzaHa8Nqun4K49zOWTiFj
      0puzGMynGchb9GZNetJmR32A5NoMFdLsWDvARKkh+gG1hCPkusx1AS1kHWUsg62r+tg60hsH
      3RMB0AGEi0MlDJtBXFVR0D0/riZtbQcd9/3RpW9Rj2/spbaJlRs/JbX+6DUREwgWZBKSlvag
      pwxwLo0e2Va51X0gBGOAaYheQ3FlNEQ3BqRMLWr/IMb8pc3uDGKRLgmZnq6posLXdJp1AQu1
      g5ZM14pcMJ36cFsh20kI5mahKE68d9JmiLVAO2hZuJdLG6QMjXxaCIGlKg6KorCsJ8V1q/tw
      okK4U5OVuNDxYusuGUtfLsX1a/q5fk0/awfzS9o72ZTB1pFe6rYozDsxXm6rKbjYoeU9sG6o
      h51rB9i8stCxxi2PlzY1BnvSMbPV1ciaNPWoHbQbW3CqIuIqaVOjJ2OxLJ9iWT7FUE+aoUKa
      fNpY0tqYusYN6waiojSfczO1iE4RD2hn/M3fIP9XFLAMne1r+rl9y3KGezPx5xIB0AFkiqX8
      W1VEszDXExqc7bX7ldsDm1Egz1CXnOIooakqKbNF8iPOJfr9B22ta/XIx6+rUdqjrsba7VK0
      7VYYmgoRPdKt5OiidYFntJvPUghoUWaS1L5lltJS0crYNZU47qKrChlEoZUVCUlT10TjN1WJ
      BWPG0uJ0ze5cKyWeWqUqYsiHpioXHAkprY50ZKmlTZ1sh/7khbBqIBefJ5syODlRoWq7UUuM
      ua4Occ6MpTPcm2HD8gI71/azbqhnSdaIRF/O4qdGB9E1lULG5OhYqWU4zcJBV01VyKdNNq4o
      cN3qPrav6V/yLABxfIVCxgSUONMvY+kUa85FJ4L1ZoXWX8iYDPdm6O3CLAAQAvLWzUNYhsb3
      XjvHmalKHGecvy2b7iFFEetz4+ggu7YMs+7/sffmQXZc5d3/t09333X20WhG0ow02pEl4wV5
      kSX7tQEDxuR9gUBiEqCoQKqSql+qqArkL5K4KKqo/JNQSaDqTX4xYBw7gPmBiTEYbGx5k21J
      lmTJ2qXRSKNtNNudu3b3WX5/nHO6+87c0Wx3xnJ0PlVXM7pz7+3nnu5+nnOe8ywdjdWvNC0h
      506U+SszOqMywhOUnHJzODYJy8IuSEtInd1KWZhBWiszkyiXlPRp68ib2Uf+XA0hZG9k3aiG
      q6Y18m8qCUUdzibSHaWN0UK0hOSqfEclLNtBZR2lgEURW1ZUKiOhN6fnGGkzHVSdJ112gAuE
      5UPiRC0hI79/vVtCUsYxlK+g7/I4zgzKlpC5ko9COajaw5F7EI5sCdnRgJVLGrGqozEsaV4P
      uJBdwc4M5nHiguxQNlLwUKgEYMrtYkFOLBpSLtoaU7Il5PJmrOpoRFOmfh24tDxlVbE1V5KF
      4absCObaaFbRVc0ZFw2pRF37fwshUPIo3jk3goOqb8JwvgzKeVjDSqIawydcLG/PYuPyFty8
      egmWtWYmXTvGANQBxnlVCWhZokH+TfubgSgiqF7t/GqhjZKuWgogbFIfl0UruXgy2ULAhSya
      56ka77p4nQwDJWHSWTgzX7Sm8Fwp3YlRQHK1oCOj6nkDT0Sfq8gATNUTWEYELXRTeE81QRkY
      LmKk4MlyHSpkN+kSZJOqKfySBnS2pJFNzc+1cTUCyjBS8HBuuIAruQrGYk3hbcuSYaeZJDqa
      0+huz6KtMVWXJLla6CZGutCjXAFUl5nQK8aGlBPu7y1kU/ih8QrOXMnjzOA4Lo+VMV72QVVT
      +IRjo6M5hZ72RqzubMSy1iwa06Yp/IISH8aJNVbiF+ZC3cBTyVO1UY0oGmcx5YmPTXzzDJCz
      fy3OYo8N5ZPrpMTHZzHlEUDN1ZrMZ1hcWbgACmU/LO0NRGGs2VS0F7LQMulzU/IoSj5Vzc+5
      qhorE60yqvLoYl3HAlF9pjiOihDTSn+xxsajHKOFSjip0QmZ2ZQrw2CnkcUYAIPBYLhOWdj1
      tsFgMBiuWUwUkMFgMMwQMcGlGocs8H7aQmAMgMFguGbRkW1iUkiqKkBISF3ChaeVQwjVsUy2
      96xVp1kXD3QnVLS9ljF7AAaD4Zoivik+k2ZJ8Wq69d58FUJ1b1ORfoxH3ffiWJauyIsweqwe
      iYwLjVkBGAyGa4qghuJnEyK2rFi0lmy3yVR5j7nV/7maLNoQBSxqnRqPrpPh1QRcSBeQEBzc
      tlSNp2vbCJgVgMFguCbQ8fZV7U1V9dZaSkomhFlVuSOOKng4X6UrVM0q2SpU9V/mMqeFTepP
      HNUD0ln2st8HURn3164RMCsAg8FwTSAQ9bbWM+2J/anjdYoEgIAJADxMkqNcwLZnUtJuelmo
      SqikXGaRcxGVN5/KBeTasqdBwiFAAFguwLg154q/C40xAAaD4Zog3hheu1yAyA8vn+dR+1Cl
      9PXrtJKVNbDm7griQmb164z+gHJlbHhY6XZi0p5ty5m/ECLsEGgniPoevMpldS0xJwNQqVSQ
      SCTCZhRCCHieh0QigWKxiFQqBdetnXoch1IKznnYqctgMFyfMM7DWXWglCwgdYtPGeJbAlr5
      cm6F7hW9EnBsEvrn56pwhRCqLDcP5fIpU30BOCjnyh0UVbt1uAVGBAAbgG7JygEQWJYA5xw2
      qe/+RD2YNlapUCjgP//zP1GpVPCrX/0Ke/fuxQ9/+EOMjY2Fr/E8D48//jjy+TyeeuopnD17
      dsrPGxsbw969ewEAhw8fxnPPPVeHr2EwGN7LxF09ceXvKeUvhKh6ANFMXYSGo7rkyHxkEbHf
      ufL/a+XvBxwB5fApC/sFeFS1Gg1kr2m9X6DlnbiJfa0w7QrA930cOnQImzZtwksvvYRvfOMb
      KBaLsG0bu3fvRnt7O0ZHR7FmzRpkMhlcuHABL774Ig4dOoQPfehDKBaLeOWVV9DU1IQ77rgD
      L774Ip599lkMDw9jw4YN6OnpWYzvaTAYrmH07H/iBrDWmVLZR0o9oRrmcCGVvevY4fttYs1L
      2QohQndUvJkQV89TVVBQUwlYuBFtJ2QrVMuSqxG9T1Hn4KS6MSMX0MDAAB555BE89NBDaGxs
      xLPPPouenh785Cc/geM4uOeee7Bz507cfvvtCIIAQRBg3759sCwLvb29yGQy2LVrFyilcBwH
      tm0jlUrh7NmzOH36NG688caF/p4Gg+E9QHVZ4+i5uMIFAJ9yJN3JmbdcCNjz3gKWxAu+6VWA
      3pjWiWFcyJavTG1EB5Sr4obSIFDVr/taZUbpaqlUCt3d3RgYGAAAMCaXXZRSfOUrX8G9994L
      xmQp20wmg7vvvhsPPvgg+vv7MTQ0BN/30dnZiQsXLmDjxo3o6enBPffcA9u2wfncl2oGg+F/
      JqJGqCUwhYEQWBT3ik5Q4yJyC3EhQDkP259OlOIa9PpUMSMDsGTJEnz+85/HoUOHcPDgwfD5
      RCKB7u7uqtcGQYB33nkHv//977Fy5UocOHAAvu/D8zwIIdDe3o7Lly/jlVdeAaWTG2AYDAZD
      vJdtfEJfq+xDvZsZhTLUkEmXC7dVvoETZvwizASufk/dxaor9sMPP/zw1V5ACEFHRwfWrVuH
      1atXgxCCdevWYeXKlejq6sLy5cth2zba29uxYsUKNDU1oVQqYeXKlbj33nuxevVqXLhwAWvX
      rsXmzZvR3d2NpqYmjIyMYMuWLVi+fDna2toW6esaDIZrEb1payHaB+AqDFMr3vj+QLxlqFTK
      ci6ryy/ormFzlYVymW8QL0ehZ/6ABSYEbELCpDNd/yfp2nAcWZ/ItWXb1XhHwGstIcxkAhsM
      hncdHXcPQHXbkngqAWsq4j2fgaij23zKQuiQz0ogI30CxmXb14DFuttBdZUTodFJOgS2LeXR
      /bZ1D3DHturWA7yemEQwg8HwrmMTAsal4nftKLkr4RD4lNc0AvEicPq1Gmce1ThtYoEyuRqR
      cgkZ0SMEAvUa2WJVHoNYFmxbuoV0z2ZdEkIrfNtauHae88EYAIPB8K6je1NzIZTrhiNg0g2T
      cEi4OogneMV7JMuw0Oj5+ZSI1n7+hEMgKA/bYeodXaKifeILDMcmygiQcEXg2CSU61otD21c
      QAaD4ZqAq8b0GlYj/LMWceUPACl3/q4WIQQqAQt77XqqF4DcH+A1o3scYsF1ZBBqwrGlO8iR
      +wLXqgEwKwCDwXBNoDdu9YawdPFYKou2ugeLbHYe1d7XuHPc+K2Fq9w+OliSCyFLP3NrUrhn
      VA1URgYRIpW/E2sUfy1iVgAGg+GaIqAsLP6mmRhjrxVuHMcmdTUAgEwG0wlfPpWlHXQ0kJaR
      WLLap45Wcu0oTPRabwpjDIDBYLjm0PX4JxqCWtSrB8BUUFUKQncEq9UPQMtBiAWHWLAXwBgt
      BMYAGAyGaxbdJKaWltLtFxdjhh2Xg01RvYAQCxbkhvFi9CmuB8YAGAwGwwzRLqBakGs01PNq
      GANgMBgM1ynXvpPKYDAYDAuCMQAGg8FwnWIMgMFgMFynmEQwg8FgmCG6vWMtCJncoOZaZ9oV
      AGMMp0+fRj6fBwCUSiX09fWhWCzi6NGjqFQqCyZcPp/HsWPHFuzzDQaDYSbovARPVQet9fAD
      ppLG3jtxNdMagFwuh7/4i7/AU089BQB46aWX8NWvfhXHjx/HmTNn4Pv+gglXLpev2mDeYDAY
      FhrdnH6qfITwdQAol/WManUuuxaZkQtoy5YtOHr0KMbHx3H48GFs2bIFQggcPnwY27dvx65d
      u/DTn/4Uy5Ytw7Zt27B792709/fjL//yL/Hzn/8cp06dwtatW/Hxj38c3/72t5FOp5HNZvF3
      f/d3ePLJJ/HKK6+gra0NX/va1/DII4/g4sWLuPHGG3Hbbbehv78fuVwO//Zv/4aLFy/itttu
      w2c/+1k4jvFeGQyGhUU2o2ezbu3oUVbVtOZaZUabwA0NDWhpacHx48dBCEE2m4UQIuz3++yz
      z+ILX/gCvvzlL8N1XezatQtf+tKXMDo6Ct/38a1vfQtnzpzB6dOn0dDQgL/6q7+C53kYHh7G
      iy++iE996lMolUp4++23ce7cOXzwgx/EXXfdBc45RkZGkEql8KEPfQgf/vCH8frrr6NYLC70
      uBgM1y1C1brxAopK7EEZX5Teu7XQ9XfCxyLJMRflr5EVRBenV/Fcx2bGUUBr1qzBG2+8gSVL
      lsB13fB5xhh830d3dzdaW1th2zbuuece3HzzzaCUoq2tDUuXLkVDQwMqlQoaGxvR2dmJRCIB
      z/OQy+Vw4sQJrFu3DsuXL8fnPvc5HD58GD/+8Y9RLpcBAGfOnMFTTz0Fz/NACDGN5A11Qft1
      fcrCjlTvloKbKIvuSrXY8gghi5x5qgCaiD0CJd9iyqRLMPgBg0ejhx+6ZBZOFjZF2We9EexT
      HpaLnkqOmdQymitCyOvVp7xqbLyAKdmnP/aMDcCGDRvw5ptv4pZbbqlKd04kErjxxhvx3e9+
      F48//jjGx8dD98zq1atx8uRJ/OM//iNKpRJ6enqqPjOdTmPLli0YGhoC5xyjo6PYv38/Ojo6
      UCgUQkVPKYXneRgaGlrQTWfD9YOuPR+onq/yhmZhxcd3WxbGRdiKcDE3FSnjYTnm2rJiUY1A
      oOSZeDRdmz+4iqzzQRrkyd9RK1yf8th5EvCC2l3LGKv9fF1kBFCZ4vrw6czGZtpSEJRSDA8P
      o7W1FVeuXMHSpUsxNjaGhoYG5HI5dHR0IAgC9Pf3I5lMor29Hb7vo729HZxzXL58GefPn8eq
      VavQ0tKC0dFRLFmyBIODg1iyZAmKxSIGBgbgui56enowODiIoaEh9PT0oKmpCfl8Hq2trThz
      5gw458hms+jq6oJtz63fp8EAABWfTlIqmvn0k50LwTRKVzcaWWgmNmS5GrIJy8KmEc1UnqRr
      1z38UjeEmYhW/LWwAKQSk8/TQoyVNkTTGZfpjm1qARmuO2Yyc1zMDbyyT6d9TTqx8EEP0xmi
      OJYFpNyFlSneKP5qLISBrGUAOBfwpulQ5tqWamkZsRAGgHE+o25p050nkwlsuO6YyZL8vRTL
      bVgcZnbdLIIgdWRGBqBSqeDIkSOgdPqZCgD4vr8gkTpCCIyPj1dtAnPOzaawwWAwzIFp13Cc
      czz33HNgjOHy5ct48cUX4TgO7rvvPmzfvr3me44fP47jx4/j05/+9IwFGR0dxdmzZ3HTTTdN
      +Rrf9/HYY4/hi1/8IrLZLPr7+/HjH/8YlmXhvvvuw6ZNm3DkyBHcdtttk97reR7eeustbNu2
      bcYyGf5n4hACxqf2LVvW5HaDhmosLPz4zPgIi1R+gRALFhNT7h0B0h11LTHdeZrWAJRKJbzx
      xhv4+te/jqeffhobNmzAfffdh8bGRuTzefzud79DW1sbduzYgXK5jNdeew3Hjh1DKpVCoVDA
      yy+/DEII7r33Xpw7dw6EEAwODmLNmjXYvXs3CCG47bbb8OKLL2Lnzp34zGc+g+3bt+PVV1/F
      6OgoduzYgba2Nuzduxd9fX04efIkGGNgjOG//uu/sHXrVmzcuBGFQgF79uzBo48+isHBQdx5
      5504cOAAxsbGcM899+D8+fP47ne/i5GREdx1111obW2t2yAb3lvomi1TLeltsriNvF2bXHVP
      YrFaC7qxhuwzee1C4zo26Az2RxZrfIhlwbatmtFB8u+LN3GwCYFr46rXjWXJ/YerMa0BKBaL
      SCQSSKfTEEKgWCxieHgYtm3jiSeeQGtrK9555x0kEgns378fnHMQteHxy1/+EoODgyiVSiCE
      oL+/H3v37sX27dvR2tqKIAhw/PhxXLlyBdlsVjZVJgQHDhzAs88+i7Vr1+Kxxx7Djh078Itf
      /AK33347GJMzN0II1q9fj1//+tfwfR87duzA0NBQ+Bm5XA7FYhH5fB7f//738aEPfSj8m8GQ
      cKTSjTcbtyx5Yy32LM4mFriwpmx8bi+iPAmHTLu5KNswLo480xnH6RTcfLCJNWkTWl8bMmdE
      PqfPk2tPHhRiYcEmE1K+2hMZy5Ir3ek6lE07esViEdlsNkzAOnDgAH7961/j+PHjOHr0KAqF
      AsrlMs6fP4++vj58+tOfxu233w4AOHToEPL5PHzfR19fHxhjuPvuu/G5z30OmUwG/f39GB4e
      xoULF7Bp0yb09vbi7rvvxpEjR1CpVDA+Po7+/n4cO3YMO3bswEc+8hE0NDSoL2jhE5/4BD77
      2c9iz549eOKJJ9Db24sVK1bggQceQENDAwYHB3Hp0iUMDAxg6dKl6OzsxAMPPGBm/wZYlgz1
      lA+iHjbcReoxO70sJHxuMeWxCbmqUrVV0/PFksmx5ThMNII6VHehQlEta3I0j37etcmE8yQf
      tcZkIXsWW5aFpGtPklPO/Cc/X4tpX9HQ0IBCoQDGGBzHwYMPPoivf/3r+MAHPoCmpiasXr0a
      Dz30EG699VZQSnH27FkMDQ0BANra2rBs2TI89NBD2L59OxzHwerVq2HbNn73u9+ht7cX999/
      P1zXRTabxcjICHK5HNrb29HY2IiPfvSjeOihh5BOp3Hy5EkMDQ3B8zwAMgN5//79WLFiBe6/
      /3709/fDcRx4nofBwUG8+eabYIzh85//PAghYXLaxYsXMT4+jjfffBMAsHfv3rDSqeH6Q86w
      yaK7faaTxSbvXmNxmxCkEw4cm1Q9ku7iGyQpj1T26YQTPmoZhXpDrKlXX/pvNrGmPE8LOfuP
      49qkamxSrjPj405rALLZLBhjKBQKWLFiBTo7OwEAqVQKX/rSl/Dmm2/i6aefhud5+OxnP4tn
      nnkGhw4dwqpVq/CHf/iHGBoawk9/+lOUSiWsWrUqnH3feeedeOutt3Do0CGsXr0aPT09WLp0
      KR599NHQRfSTn/wE586dw913341SqYQf/ehHWL9+PVzXhWVZyOfz+I//+A88//zz+PznP4/O
      zk7ceeed+Nd//Vf09vZiZGQEv/zlL7F582Y0NzfjwQcfxPe+9z2cPHkS+/btAwDs378fhUJh
      rmNvMPyPxbVJ1ePdNpDvBq5N5mRoiJqFX+tN4qdNBOOc4+mnn4bjOPjYxz42yYeuffK2bcu6
      HUEAx3HC1+kwTduuHgwhBCilcBwnfF6/1nEcWW+DsfB9OgR1YhVQSiksywozg+OfyxgDISSU
      pdYxDQaD4WroekQzSUoD5Kx/KpfQtcaMMoEppTh48CC2bNlSVQjOYDAYrhe4EGCMT1ngjVgW
      HNta8BIZ9cSUgjAYDIYZMp26fC/M+uOYrioGg8EwQ95rCn463jtrFYPBYDDUFWMADAaD4TrF
      GACDwWC4TjEGwGAwGK5TjAEwGAyG6xRjAAwGg+E6xRgAg8FguE4xeQAGg8HwHqZWDwdiTV2k
      Lo4xAAaDwfAehHGBgDFMlZxsE2va8ubGBWQwGAzvMRgX8OnUyl+/JmD8quUrjAEwGAyG9xBa
      +c/0tVfrqDatAcjlcvjTP/1T7N69G8ViEf/0T/+Ecrk8c2kNBoPBUBeEEGB8Zn2bNYyLKftf
      T7sHoGvyP/PMM+jt7cXw8DAqlQqef/55nDhxAtu3b8cNN9yAl156CQ888AD27duH5uZmnDlz
      Bk1NTbh48SLS6TS2bduG8+fPIwgCbNmyZVZfwGAwGAySmfYliEMZR8KxJz0/IxdQb28vMpkM
      Dh48KAVgDJ2dnbjrrrvwxBNP4MKFC/j9738PAHjnnXdw9uxZ7Ny5E4899hiy2SxefvllFItF
      9PX14ejRo7MW3mAwGAz1Z8ZRQPfddx/++7//G4wxlMtlvPLKKxBCoFQqoVKpTHo9IQR//ud/
      jg0bNmDnzp11FdpgMBgM82fGm8AbN26E4zg4c+YMLl26hLGxMXz84x9HKpWCbdtgjOHgwYPo
      6+sDIFtENjc3hyFIR48eNbN/g8FguIawH3744Yene1EikcDatWv/xWOdAAAgAElEQVSxevVq
      ZLNZbNu2DeVyGSdOnMBNN92EzZs3Y+nSpXj99dexevVq3HDDDWhtbcWqVauQTqfR3t6OPXv2
      YNmyZdi8eTM6OjoW4asZDAbD/zymakl5NYhVu1XlnFtC6rfpGb4QAkIIWJY1KfHgan8zGAwG
      w8wQQoBepS/xVKRcu6buNT2BDQaD4T0EFwJ+wDBTxe3YBK5d29tvEsEMBoPhPQSxLCRcGzPx
      pVxN+QNmBWAwGAzvSbhyB9XKC7AswCEENrm6290YAIPBYHgPU8sAEAsz2m81BsBgMBiuU8we
      gMFgMFynGANgMBgM1ynGABgMBsN1ijEABoPBcJ1iDIDBYDBcp5iewHUiHkw1sQNPPBFjsUph
      aHm4EFVhYrImiLWossTloYxXZTDahED3rl7ssZkoC/DujI8QAgK1m3s7NoG1yLL4lCNX8lH2
      KMoBhRBA0rWRTthoTCeQTUq1sdAyCSFAucDQeBmXxsoYLXhgnMMhBK0NSXS1ZrCkMTVtrHs9
      5fEow3gpQK7oheUYiGWhKeMu+thwAYyXPJwfKWGkUIEXMClLOoGO5hSWt2Wn7QlswkDrAOMc
      lEVt2mQHHvk3YiFUKAnHhmPXLspUL4RS+FzdyFOd3oRjwyYWCLFAFvBi5UKAc9nFyKe1OxlZ
      loWkymx0rpK1WA+0HJRxBExMUroJRybPyHNFwnO3EOhzVfYpKKvdus+1CRzbQjrhLKiiE0Ig
      Xw5w8mIOJy7lcPZKAeNlH15AwYVA0nGQSTroaslg44oWrF/WjCVNqQW7lvNlHwf7R7Dr2CWc
      Gcyj7AdV/W8tC8gkXaxe2oQ7N3bixlXtaEi5CyKLEAK5ko/jF3I4fG4E54YLKFYCVALZkzfl
      EqSTLpY2pXHjqnZsWL6wY+NThqPnx/DG8cs4en4UuaIPQITjY1lyYtW7tBE3rV6C29YtRUdT
      uuZnGQMwD/QN7AUMXqhUJitdy7LUjUyQdAiSrr0gNzPnAlQpuIBxMCYVb9UKgEgDJJUcgUMs
      uI4948SRmaJnKD5l4bgwrmbdsfFxbAJCLCmHTaQCtkndjZKun1IJGCgTqCjF5gXVvVXTCSdM
      tU84BElH/qz3uQoYD+Up+xRewMK2fULImxiQs0s5+3aQdG0kHRuuU1/FElCGM1fyeP3YZRwZ
      GMVY0as5ebDU6qgh5WJNVxM+sHYpbuptn7LQ2FxgXODkpRx+/VY/Tl7IoezTsJgkUD02urhk
      OuFgY3cLHrhlFVZ3NtXVaPuU4fTlcbx+7DIOnR1BoeIjmGIiYxMLmaSLdcuacfv6pXj/qnY5
      sanT2HAhMJL38Mxb/dh3+gryZR+ciykmeRYIkRO9Fe0N+NitK/H+Ve2TuoIZAzBH9HLQC7gy
      AAwB5fApm5SZp2eUrlIoSddG0pW/1+/GkXIEaiVCmTQEU6WJJx0btjJIji2NklMnoySEnM16
      AQPlUvFS1ch64tVmQRqlhGPDtQlch4SKl9TpRuZCoOxRVAIGL6Z0hRCo+JEBsCwLqYQNon6m
      XEf9tOum5PSkoaBmkCWPouJL2Xhs5ZZwpBEkJDIA8mGjIeXWZQKhXSyH+ofx/MHzOHUph0Cd
      o6nUgj6mTQiWNKfwoRu7cceGTmSTzrzlYZzj4NkR/NfLJ3ElV5KTCKXgasmjDQBRY9HVmsVD
      O9bhhp62eRsBWXVTYPepQbz0zgX0XR4PV4tXU5naSHY0Z3DPDcuwfdOyuoyNEALnhgp4ctdp
      vHN2OBwTzkX494lyWBZgWQSEAA3pJD6xdRXuuWE5km5kBGbUD8BQjVb+ZY+h7DNUfBreyF7A
      UdLPB9IoVNfsUEs1AVgEdbmRGeeo+NII+VQq3pKSRc80A8oRqFUK59X7FJxLo0DU0nG+aOVf
      CRgCxpXCDRBQOeOOZuJyTCgTYHqGBygjIWCT+c+8uRAoeRRlnyFf8VGqUBQ9Gj5X8SlK6lxp
      5Uv1ykmtYrQPvh4GknGB8bKPokeRL/vIlwMUKhTFCkU5YBgr+aj4DMUKBRMCXiBXcpTL60iO
      j4CrXHjzQQjgwJlhPPPWWZy+lAtXZ3r8tSHQz+nn9b8lL8CFkRJs28Ly1mzNnrOz4Z2zo/jh
      C0cxkq+Acw7Oeez4E41BpPC07it6FEcv5NC7tAlLmlLzkoULgd0nB/H07jM4N1SoOnb1uIjY
      mMVlCXD2SgG2TdDd3jDvVduV8Qoeef4ojl8YVWPBQ5n0OEWrgUhGjU8ZTl0ah+vYWL+sOXze
      GIA5IP22UsmXvEApEoaymtHJet28am+AqxuIA2FvBGJZoQtkrsjZtkBZzW7LPoVP5e8B5aj4
      NHQJBYyHBklwKQPl0hDovQB7mk2j6eBCoBJIQ1RRhsinUun7QbRK0T7vgEVLey7kDNiSUxc4
      tpRpPvJUAnluChUfFV8q2qJHUfYoSl4gjYEfGauAMiUH5BgRqWp0Ya35GEjGBYpqopAvByiU
      A5Q8hnzZR6EijVKxIlcD2kAGVF5LlhojC5DnCBZce+77N1wInB0q4Om9Z9A3OA7GJyu0uOKP
      K5P4ZLMSMAznPTRmXKxoy85ZnoHhAh5/6TgGx0qh8udcVD2E4GrGG5dLf4I8rhcwXBwtYf3y
      ZjSmE3MemzODefxq71mcHynUUK7Vx48bzMgwWQgYw2jBR0s2iWWtcx+bsk/xxMsncHRgVAZ1
      MF6l9CPjFDfgEfL/FhjnODdUkAayMSUnNXOS6DpGu1rkg4YKpuRRVAK5mTfRr5x0bQSMg7qq
      iQ6glImeVc595h0w7XaSxoaySL5KwMNZHeMiXG0EjCv3E0MCNmwijYhNBAhlc3ZNCeVnD40N
      kwaIMQFPrUwYl80sOBdw1SYrZQQp15aGScjnHULgU672T+Z249DYSqQSyFl12WcoKqMt5RHw
      Aio3opVbTBsoOfMHLFhIOEydr7kb7IBKObTyL/sM4yUfJZ+iWAngKdedpkjkuGS5C2mn5XEJ
      sWBbcg8nnZjbdVP2KPadvoK+y+NgjKPWjLaWqyPugwcsCCFwJVfCmycGsX5ZMzqa0rO+drgQ
      ePXIJZwfLkxQ/nzSzDs8shVvMKWPRwBwnB0ax65jl/HJO1bPSekWygF2n7yCM4PjE45f7Y7S
      8lhWfFwsSCPAIQTBlVwJbxy/jN6ljehsnv3YCCFwZGAUB/uHwcKxiSv/yUrfsgTkHoAcG+0O
      EoKgWAnw3NsDWLmkAdmUawzAbKFKmfnqZvaU8i/7kTHQ7gRAbuKlKEcqYVdv7hE5+9ePuQa/
      yI1f6csOFb/PqlwwAePhxMSx5XGjJatSdEBokOZ6VQjIdnVUuX18ypTyZ+HYxPcBvIDBti2k
      lE9SqPHSBtSx5cYw5uBZ0PsQ2ghVfLk6KqpZdsmjKPkBuJAzLGIBSdeBQyzQpBvO9iwrIfdw
      XBsJRxryJJm9QIxrI0jVSk0q/0IlQMELkC8H8AJa1enJIRYqrg3G46G8LhKujWTAkAxYGM01
      W84OFfB2/7Dy+U/lZkFNpRtHCIBxoO/yOA6fG8P2TalZG+wLI0XsPTUYTlYmzvzjrqBIFu3/
      1zeOVLqWRUApx56Tg9i2sRPLWrOzHpszV/J4+8wQGK9lGEW4CtHfXyt+tXBVijfyz5+8mMPR
      gTEsaUzBmeXY5CsBXjp8QQYJxGb7cSMZN9iRLPqulnsAWmbLEjg6MIKj50fxgbVLp08E830f
      r732GvL5PCilOHbsGCils/oSQgicPHkSzz//PI4dOwbGqmfIuVwOv/vd78B57d11Sil+/etf
      o1wuT3usw4cPo7+/f1byzYZ4VIuvNn8raiVQqAQoVAKUfYpCxUeh4qvfg3DTr+JT6atXyll/
      1lzQs2m5ycqVfz2a9Xp61usxjJeVu8PTRkpviurNWh5u1taKR58Jeo/BpxyUcvgBDxV/tPnK
      UahQjJcj11klJq92XzEuwnBNzifPRGcqz6Tje9ItVaj4KHkUuaKH8ZKP8bKPXMmTBkK5hsq+
      en/A1f4OC11ms0VHHMXPTSVgKHoU4yUfZS9ArugjV/AxmveQK/gYK0oZx8s+Sl5QNU468GCq
      e+Zq+JSh7/I4hsbLE1wZkxVdNOPkqHY3VBuKsk9x4uIYCmV/duPCBY6dH0Ou5FcZoOpVwHSP
      yP2h3z9SqOD4hVzNVczV8AKGo+dHMVr0phyTia6XyS6Y+D6KjDh759wwCpVgVrIAwKXREvoH
      CzXOSzRGjPHQLaR/TlxFxWWt+AyHzo7Cp2x6A1AoFPD3f//3+NWvfoVSqYQf/ehH8DwPpVIJ
      Q0NDqFQq8H0f5XIZlFLk83lwzlEsFsGYnF0cO3YM//7v/45Lly7hxIkT8DwPo6OjGBkZCd+z
      a9cucM4xPj6OoaEhUCqjNIrFIoaGhvDiiy/C8zxUKhUMDQ2hUCiE8uVyOYyMjIAxhiAIQClF
      pVLB8PAwcrnZXwRToT9HK3/Ko03Diq8VDVUuBqpmnEE466v4OkonUtwBmzy7mbk8UhadRMSF
      XA14lIWzbi+QLo9KQNV+RRQN41Gm9iqi3AH5OVePdJhqbHTSmd5A1Zu8HmXh+FR8irIv5Slq
      pearmTGV46Nn7zpKRcy4+V1EwCJXk/5e2iCVvADlQPrex0s+ipUAxQoNf9fnTm9Ys9gNFFC5
      tzPbsdGTBU/tj4SrokC6DvPlALmSj1xJyqR/5staHhYaeF8ZSj/gV831mIqyT3FhtISKz8KV
      TrVfffJGJ+cTlWH19+Nc4MJICaPF2RkAyjmOXRhTs//o8+Tx4+6OyQpuKpeVENL4Hzs/VjMK
      7mqUPIqLoyUEND6zrrXpW+sRvS4el8+5wOWxMsZKsxsbADh9eRyFsj/lMaczlFO978zgOPLl
      YGaL/ZtuuglvvfUWtm7dCkAq3R/84Ae4cuUKVq1aha1bt+LIkSO4/fbb8YMf/AB//dd/jSee
      eAJ/8id/gqVLl+L3v/89PvrRj+KDH/wgAODo0aN44oknkMvl8JnPfAa9vb0AgIGBAfzf//t/
      USwW8eEPfxi33XYbvvOd7yCVSmFsbAyUUnzve9/DqVOnkMlk8I1vfAPf+c53UC6XMTQ0hK9+
      9avo6+tDe3s7Tpw4gV27dmF4eBh/+7d/i87OzlkP/kQCpdC0T90PuIociTbtpK/ZhxdIJaET
      nGxCUCEMSZcglbDhBxwptSfAuFR4s42iCNRNEyrwWKglVYZGKxnGBYiFMEHNtQk4lwot6QpQ
      ysFdhApcCILZuCv1Bq6+kana+JarHBFGJ1WUohciSvqyLRmznHSFGmMSura00rVn6evmQoQ+
      97grTOdFyMgthmIlUHsNCGO2XUf63hnXyWIMlYCgElAkXBtczN4rpaOcAIBzubnrqRVh2ZMr
      NZkoF4X1+dRCsULh2DIUtBLYCJhTFTE1WwUHAF7AMV7yQrMaV3LxCJL4hmsUew8IYcGy9Ous
      8G9lP0BxlrNcygRG8pXYsSdGIWHSykP7tLVLI1JsVtXnDOXLoSt2phS9APmSTKxSo4P4OYlk
      jE/a5PWrx0fujUS+eD02uaIHdDTOSp4r4xW1NzbZMMdXHvF8AEKk22eqPQsActLj0ZnVAspk
      Mrj11lvx6quvAgBOnjyJwcFBfPKTn8SxY8egXTynTp1CS0sLTpw4geHhYWSzWQghMDY2hmXL
      loWf19XVhfvuuw9r167Fyy+/HD6/Z88eNDY24lOf+hSee+45vPDCC9iyZQu+9rWvoa2tDfl8
      HmfPnsU3v/lN9Pb2Ys+ePbAsC1/84hdx//33o6+vD6VSCZ7nYfPmzbjrrruQzWbx1ltvzWrQ
      r0b8fuPhxaoSjRhTm8Rc+pg9Gs4gfVad6BO/MOfo4biKjCLmjpEzzqIXhHsXXEh/tBBzmVvP
      DAEd865m8iwylp6ahWvZpKJHmGBT7/GAQOhq066XeK6EXrn4gdqz0G4jFT1FWf0E4hwqabB6
      1VdbUYmq54XQm/618ztmSkDlfkhtJaePJZ+Lu1fif4/LqPHDz505QsiIOv3Z1co/vjpRs1zG
      wplttTKOZNEylj1aQ96ro10k1TLGxyWSe6KRjD/i7wWk0Z3LdVTytEEVVT/j8gghIKpm/Lym
      vPGVnq8i3mY8rdq2bRsOHjyIQkHu1GtXzH333Yeenh5QSjEwMIBbb70Vr732Grq6upDNZkEI
      QU9PD/bv349KpYJSqYTnn38eR44cQXd3d9V+gnYBjY+P42Mf+xg458qakSrrb9s2HMcJ/55O
      p5FMJqtuqMcffxzFYhFdXV0Igtn73uaDjhyxYIUBCotXdUcLESXtxOMkYn9+l7CqfrNq/2lB
      D69iI2qucMLnFkoWa3Yf/e6dpzjXhhRTMWVkzVzFnsX74oe+2op5wS4na+IvMztaPG5qRnR1
      deHmm2/GqVOnsGbNGrS2tmLfvn0YGBhAOp3GmjVr0N/fj/Xr1+PIkSO49dZbQVQiz0c+8hEc
      OHAA3/zmN/H9738fANDX14f9+/dXbWLddNNNKJfLOHjwIK5cuYIbbrgBzz33HP75n/8ZY2Nj
      aGxsRFNTE7797W/j0KFDuPnmm6tOfhQWBti2jbfffhunTp2a6VecEfGAC2JFSsS2LCRsGzYh
      SDg2Min50FEarm3D1grZQlV4Wr3rzRBVekJnICccgkzSVWUNZKarLm+wgHpOZUXK4ziqvENC
      lcLIJN0wO1qHwuqieXUvv2MBrso01pnY8rgkzLi1VcatzrxN6bILKkqrXhAL6ntX5zfUDlec
      +BpE5TLmMUiuYyOddBGpgcgUx8ss6FDC+H01WczoiYQjM5ZnA1GlHPRnV0fUaLmiiB9i26Fe
      iY9PFIIZyZhJuLNyYwIygieVmFAuwYqPi/4ZHxer6u+1jELCtWcdAQQA2aSub1Q9M4mH4sYj
      oiK5JssbjaW+juzpS0EIIeD7PhKJBBhj8H0f6XQavu8jn88jk8kglUqBMQbGGBKJBDzPQyKR
      gG3bVZ9RKBSQTqeRSCQwNjaGTCYD27bhui6CIEAikUC5XEaxWERTUxNc1w2jj/RxgiDA0NAQ
      mpqakM1m4fs+XNetiiyyLAuMMeTzeWSzWTiOA9edf6EoIWQK/3g5QCHM5pSbdDKjM4r00Ut0
      m1hIJRykXJnC35h2kU44aEy7yKYcNKQSaEq7aEi5s44RpoyHx8yXfRXqKJOePBVxU1Eb0Pos
      63oyqYR8ZJOyxEA25YTlBhrT7rRVBGuNjaeiWopeoLJZgzDuPh4iq109OvRSl1tIJ2xkky4y
      SflcQzqhxs2ZdZ5EQBkKFYp8xUeuKDdUx4o+8pVAbvZ6UcQWZSI0AvKcuMgkXTSlE2jOuGjO
      JNGcddGcTSKbdGctjxACJZ9ipOAhV/SQKwUYK3rIFX2MlbxwszdX9GXGLxeqZpOF5mwCjWkl
      QyaJlkwCLdkEmrMJNGeSaGtMIpOYXamBXMnHk6+dwuvHL1XlAMQTruK+ZiC2mrS0UZD5EHED
      sWppE75w7wasXto0Y1l8yvDI80ex+8TlWCQLC6NbJm9oaiVrhd4BQlT9qAk/t23swpc++L5Z
      GfCxoodHXzyOt88MVeUhTMy2nag24wYhGhcSjs+K9gZ8+cObsGqWewC/3X8OP331JChjNSN9
      9PmLh6bGDcLEcdG/9y5twv/z4I3TbwJbloVkMgkAcBwHjiPfkkwmw+cBufGglWw6na75GfHX
      L1mypOo1+m+ZTAaZTCZ8vrm5uep1iUQCy5cvn/Q+MuGGdByn6nj1QA9swiFIuDY8KhOq5Eaq
      HYZP2sRCoCqD6plnypUzT0fNQh1lgcOZ+BwSVixLlQumHK5N4BMOh1hIuvIcycvBgUMIKOMy
      zt8mciPajeTQSWk6N0HP3mc7Nvr9NiEghKscBx7VHhFQiV3yxnId+dqUK8dHV0sNvxdkLsBc
      1in6e5GYXEmXwGc2Mkkn9K0nHIJKwMLVScqNDGEqYVcV7pOZ27PPBpbXjB3VgXKYqgclZ8w+
      ZWGkk94rkVnZFhrTbihTSteQUu9NuDYSc8jcTidsrGjPIp1wUKxEVTZlnD8QJTNNXF3HFV31
      7NImFla0Z9Gand0959gE71vRgn2nr4TegMnHskI3cFye6hlvJJOlVlnv626d9Uopk3Swoi2D
      owMEXiDURm50P8iY+snvq5ajelVgEwvLWjNomeXYAMCaziY0ZRIYLVQmHUPX+RFCJkzGjfXE
      8YmvFCzLwpquZjSmEiYRbLYkHAKfknApTl2CFLdDhWITAi+Q2bQAwsJi2q2Qcm0kXPlenfGa
      mGOdEJsQOIQjqWRKujZ0OKbO5iKWBcosCCHl0clVSVcpFOWS0QbJUcpyLkilKwuZUUbAXD0u
      VlTKwAJE7PvatjRYcaUWyUPmlXnrqu+Wcm1VqM8JI4sEIvdDwqdh1U3HJnJFlHRCoy0jt5yw
      YN1csC3tWnJQcRlSrg0vYYMyR44LpGGJ52DYxELKddCgVo1SnmisUi6ZUwZ5wrHRu7QRS5rS
      KHnBBHdC/HcZWRM+M0Epx10wqYSDdV3Nsy7JTCwL65e3oCWbxJUcAyFWGFkkz7uMRptY9XLi
      SmSicmxrTGJtV9OsjWPCsbFxRSveOj2Ey2PFmq4vqXTl71GEVHVhuvhYJV0Hm3va0JCavbrt
      bElj1dJGjBW9qhVG3Isfj+KaKAsh1Ss1ojwSN/S0SjforCW6zrGJnElSZiOViLL9AF3VksAL
      qn2ISVf6kVOunH2mXDtUKIk53sSRPJZSFJG7DVAXHwBHzbbjpSC0vzsVU7op15H7BnMsuwAg
      nLHrFQ8XApRagEtgwVE3gx3Och1b+v9tIkNjXfX/lCp9PJ96/OFKTfmlddKdpTZhiWUhYRMw
      LsJQ3YRrw1GyaJddyrWRSjpIu3ZosOeC3FsgVTN/PWa6PPfERDObRNdMJumgOZOIGSVnXhVT
      Vy1pxM2r23FptFhVukQqN6vK3aKJu4HiD8cmWLesGZt7Zj/jBoDlrRncvn4pnt1/FkEg1Gqe
      Qys5GZI8sdxBfBWAUNnpMN47NnShqyVT83jT0dvRiFvWLMFzB8oIhF6VVL9Gzrgn7g/ElT+B
      3gPbuKIFm7pb51SWoiHl4t4tK3D8/ChKnpxMCaEzoAVkyQl7gnFElbGIu6WIZWHLyjZs6m4F
      YDqCzRqbyJox1NWJT9EN6xACjzIkXRFFbakN36RS9inXRjIRKd/kPKs6OjZBQsh4aodIpSpv
      VAqbWJMShSy1AWTbBMmEVHh6o9O1rXmVqNauDllNU9b0SSUcqXghZ/syT8AOHQza9eI40apI
      l6SY72anTWS5a+raSOuZtvpuugS2TzmSXBrPZOiS0kraRjblIh3OuudXuM+1baRcjsZ0oir8
      lpAAjm3JJL6AhecrlXCUSy8yRo1p2Xkq5c6vL0AqYeOW1R04eXEcx86P1sz+tqyJpSCqN2e1
      QulsyeCODZ1obUjN0ZVpYfv7luHY+TGcupSDVP5RiYdqn3vkmqr2uZPw55rOFty5oXPO13Em
      5WDr2g6cvjSOExfHwHnk+pFjYsVm2/o7ROMSNwRdrRncuaET7Y1zH5sNy1tw85qleOP4JTkC
      AioCEmqc9Eqt9thE7iKCxkwSH76pO5wwGgMwB+SMm4Art4pNdFMTjoRLwgQxQCk4V7l6lCtB
      Kxi5hJ+7QgEQzsASLoFQsnkBk7HvNofrkKpViqX868SyIr+7ckO5dehPoBW6dEU5cGzpEoNl
      IaHyE/TsUm90EqLdUnboZtHun/nKk1C1dOJLZL0XklYJeFr5JZQBkKs1ea7SCTn7Trpzd/9o
      ZMMQ6YbKcu2i001f5MZn2afhbayb02hjlEk6yKZcJF2CbHL2G+NxLMvCirYs7rtxBbyAoe9y
      DnEboBWd9oFXR7pECq6tMYUdm5bhxpXt87qWu1oz+OQda/DI80cwWqhAG4HqRK9q+SZvvBK0
      NabwqTvXYGlz7Q5YM4FYFnqWNOB/bVmO8bKPS6Ml+XzM9TP5spy8R9KYTmLbxi5sXtk2r4lD
      yrXxf27vxZVcGScvjqmKvdItpscHmCibdqNFhjGddPDxD6zE+mUtkdTTRQEZaiOEzgDmYQ0b
      XSJiUkMY24optkj5J+raEEZWtQxLTbAo6WsicXdHwoncU/UMd9RZuLoIGmOy/EEt4i0YtfJP
      unbduoLpKJx4LZ6yT8G5CDO2NemEdKtoN53et0nNMrzxajAu6yHJXgS6IQwPy1YEVBpuYlky
      UioRNYRJuQ4a0/NT/hNlOXxuFM+/fR7HL4yGmeRTqQV9vdo2QWdLBve/vxtb1y1FJjn/8eFC
      1gV6bOdxXBotTki2AibuAQCo8v93tzfgT+7ZgA3Lm+tyXzHOse/0EF44dAGnLkXlKqYdG0LQ
      1ZrBvVtWYNvGzlmHxk7FxdESfvraKRzouxIziqKmTBONY1MmiU/esRrb39dVdZ8bAzAPdEkI
      T9Vl0e0Ya6FntAkVfbMgLSGFDJ0LW0KqcgpxN5XuQWArX6ljy/yFaAlbH/SF6dGosBtXM+54
      /rGus++o3rdhr+I6j40QUQc3XbJj6paQCCO09My/3udKG+iKqgxa3RIyqrqpQ2XTKpBgPhvR
      V5Pl3HABb54YxDtnRzCSlw3GJ+eJyyiopkwS65Y1Y+vaDmzuaatry0zOBfqv5PGb/Wdx5Nyo
      ilKqzvTVsuhrtiHlYvPKNnzslpXobm+oWyc5QGZen72SxxvHL+Pt/hHkSp4KY56sNm1C0JBO
      YOPyFty2filu6G6t69gIIXsT/3b/Obx54jJyJR9sii5lWvmnEjZWLW3CA7esxPtWtE5yGxoD
      UAd0/Rztb+cCVXkAxIo2JfWG30KhjZJcofDaKwAli459r7dyixM1hZcrplrolpByE/ndawof
      7o+QaMVWT2UyEX2udB2pWpOH+AptoZvCFysUpy+P42TYFN5TrTNl/kg26aKrNYMNy1uwrqsJ
      rQ3JBWt8XqwEODwwitePXcLpy+MoegFE3EVFgIZUAmu7moi4fQYAACAASURBVHDnhk5s6m6r
      yyqkFkII5MsBTl4ax5GBEZwbKqgGQ3K1lFT5K0ub09iysg3rljWjrSG1YPe57u715gnZw3m0
      4Mn7POYCcm0ba7qacNPqJbh19RK0NdbukGYMQJ0RQkwq77wQM8iZMqkpvDX3MM96oKt8auYT
      5jlfdDRSnPl2/Zorta4b4N25dgLKkK8EYR9lbQBSStGlE/VzXU4H57K082CujNGiB8YFHELQ
      kk2isyWN1mxyUa8fn8qGPuNlH0zV9iHEqkryXCyEEMhXAlwcLWGs4MGjMp+lMZ3AkqYkOpsz
      097rxgAYDAbDdcq7NxU0GAwGw7uKMQAGg8FwnWIMgMFgMFynGANgMBgM1ynGABgMBsN1iikF
      YTAYDO9xWKwfALFmni9iDIDBYDDMAV1W3EJ9s+hnc3ymkizj+SxE1QKaSRayyQMwGAyGWcBU
      pzCqEiwdEpXFXiy4kFnsE+uOxbEsmWh5NbnqIvHo6OiiN143GAyGxUaX7KAxxUtVjatgilIn
      CwGbRvkDsjporWz3ONO6gPL5PL71rW8hm81izZo1+IM/+INJbRp//OMf48EHH0RPT88MxTcY
      DIb3FrJ+VO1ij4A0BGA8XBEspBx0GuWvEZDlK1JubVU/7QogCAJ4nofPfe5zGBgYwM6dO/HW
      W2/hhz/8IV555RVwzjE8PIwgCHDs2DE8+uij+M1vfgPOOfbs2YNcLoe+vj6cPn16Vl/SYDAY
      riWupvw1lPEadULry2w//2pO/hltAnPO4fs+GGNIp9PI5/Po7u7Go48+io0bN4avGx8fR09P
      D5555hksW7YMzz33HFpaWnD06FFwzrFmzZpZim4wGAzvPnyGM279WjKP1qpXQwhRs3vbdASU
      wXXsSc/PaA9gYGAATz75JNauXYtt27ZhaGgIe/fuRbFYxJUrV8LXjY2NYc+ePSgUCrh48WKs
      U42YVK/aYDAY3ivEe2rU87WLxVTad0YrgHXr1uFv/uZvkE6nwRjDCy+8gK9+9avI5XJViv03
      v/kNvvzlL+OFF16QIUqM4cqVKxgYGEBXV1c9vofBYDAsOoQQgM9sk/fdKCc+V6Y1AMlkErff
      fjtsWy4fCCG499578eSTT2L58uVoaWnBzTffjMbGRjzwwAP4+c9/jo6ODnR3d6O5uRnPPvss
      Ojo6sGrVqgX/MgaDwbAQzKa5y0L3J3CINeNNYM1UXeTmlAfAuWzqoY2CRs/6Hcep+X+DwWB4
      rzJdFBAglbOzwE18ZiJHHAuYsqe1SQQzGAyGGXI15atbiS4GAWUzWgVYABKuPWWPbTM1NxgM
      hhkiZ/cISzAACHs1T+VmWQhsQiAwTSYwANsmUyp/wKwADAaDYU7oRuyW9e7VAqJcgHOOuB2w
      LKn8XWfqmX/4WmMADAaD4b0N4zxM+LJnkYlsDIDBYDBcp7x3AlYNBoPBUFeMATAYDIbrFGMA
      DAaD4TrFGACDwWC4TjEGwGAwGK5TTCKYYVHhIkqgsYBFbaM3ER1HHWcxk3kmwibEcxPr3Sks
      FlCGoXwFowUflYCCc4FUwkFDykVHcwqZhLNoce+cC1zOlXBptIThgoeAciQcgrbGFJa1ZrC0
      Kb3gtXfiVHyK05fHcW6oAI/KjGCHWOhqzWBtVxOaM8lFk0UIgbGij4HhAkYKHkoehU0stGQT
      6GhKY2VHw7TXjwkDrTNCiEkt2Ii1sB2CJsJV+W3KJssC6CQRAgvWotw8jEf9SyfKY0EWz3Jt
      Mqv45fnIAgh4Qe1WeTJ7UspjWda0iTTzQV8rnAv4jNds3GFZQMImIMRa0OtIK5O3+q7gnbMj
      OHslj7JPwTkgIEAsC65D0NmcweaVbbh1TQeWtWYWzIDnywEOnR3Gy4cv4vxwAR5lstmKkIbR
      sQmSro3uJY3YsWkZblzZhmzKXRBZOBc4P1LEzncu4GD/EPJlX14/yloTSyZdpRI2NvW04e5N
      y7F+WVPN+vv1wKcMx86PYdexSzh6fgxlj4JxeX/p7F/XJuhsyWDrug7ctm4pljSla36WMQB1
      QAgBAYQXaG0DoNLIsXBZg3pGy1Qf0CkNgGXBsaVCsUmk7BZCHp/ysH4KrzE22gDYSsEslCHQ
      ytYLOCjnoEyEhkkIAViABSmDlsUmFpKOvSCZnkKoPrKMI6Dy5pVZndH4EGLBIeocqbFxpknt
      nwsB4zg6MIpn959D3+UcKj5TPTyqXycPa8F1LHS2ZLFj0zL8r83LkXDqd/1wIdB/JY+n3ujD
      sfOjqPgMgJgkjz4nlmUh6Tq4oacN/+f2XnQvaajr+FQChlePXMRv3urHcL4CzgWE4JAl/7VA
      8v4m6rptTCdwx8YufPKO1XVdLQkhkCv5eOrNM3jr1CDyZT/stTJxbKRM8rpZ1pbFZ7atxabu
      1kkG2xiAecKFVLgzLc/qEGva+hxzJaAMAZPKjXK9CphcuEof3ybSEDiE1PUmBnTfUo6Kz0JF
      S9UKgCmZpCEioavDsaUcCae+ik4IAY8yZYwEAvW7btyhz52jVkOuY8sZpjYCrl3XIl+Mc1QC
      BsoEfBr9rHUrWpYsMObY0c+Ua9fNNRQwjp2HLuCZvf3IlSpyxh9r4KR/xpWKVr6uY2PHpuX4
      37f1ojmbmLcsnAscPDuMR184htFCRZY44GKCkhPQClcbAEIsEEKwpCmNL9y7EZtXttXl2il5
      FI++eAx7Tw4ioCyUR1dDlmh5LGUA5GrNtgnWLmvBlz+8CV0tmXnLAgBnh/J4/KUTOH5+NGaI
      ao8NYIUGiRCCTMrB/759NT64ZUXVysR++OGHH77aQcfGxvBnf/Zn2LVrF3bv3o21a9eiqalp
      3l/G9338wz/8A15++WXcfvvt+NnPfoZCoYDu7u55f/ZiwYWAHzBM1P3az831zDJ2MXKhWsbV
      eZbrqyWyTzkCNZv0qVS6gVK+lAswEbmIhJD9Qi0if9Zr5s04h08ZvEAqOl8ZpkpA4QcskoVx
      6fqAPD7nciVlWRYERF3cC1r5ewFHxaeo+AyVgMELKCoBQ9ln8AM5br6qsMi08YydWMuqjytP
      K/+KL8fEowwlL0BAOTwqZSz7LJSFq/On7mq5QrDkuZqvkmNc4PmD5/Hfu88gX/bkKimmcLWi
      ExOuF4n8/8BwAflKgLVdzUi68zOSb/cP4/u/P4pcwZP7IUrhMsYnKTxtqOJUAoYjA6NY1dGI
      jubaLo+Z4lOG7//+KHafuAxKGRjj6sHAGAsNAWNSrokyCQGMFX30Xc5jc08rMsn5uacujZXw
      //7uCPou59Rx5bHl8UWVsYyfQ71KYVzg9KVxWMTChuUt4edOawBKpRL27duHr33tazh16hTG
      x8dx/vx5/OxnP0N/fz82btyIJ554Aq+88gpef/11bNiwAXv27AGlFJ7nYdeuXchkMnjsscfw
      8ssvo6OjA62treCc4/nnn0elUkF3dzcGBgbQ1NSEdDqNRx55BLt27cLy5cvx29/+Fr29vdi5
      cyfOnz+PZDKJV155BevWrZvXgM4XoZR//BJkXMjlPNOKVt6wjItJ/mTORV0UrlZUWvkzLuUK
      GEOg3C/a/y4fkStGKtv6GgHt9vH0I1DK36fSOKkL16faTaVuIojQkFqQypbEZptzhXGBslb6
      lCkDQOEFUvFXGUcu3Wayj4V2C0UyubY9/7FhHJ7PUaEMZZ8qQylXJF7AlLsskoULQPDoJkZs
      bOZzroQQOHp+FD959VSo/BnjMeUvIqN8lZauAsDlXBmOTbB+WcucjdKFkSIef+kEBsdKYJyB
      Ma3UeEzB8SoFp79HXBqfclwaK2PDihY0zHFPgHOBlw5fxO/2n1PKP24AuDJIkxWuVrZCyDGw
      LGC8HKDsM9y4qn3O+22VgOE/XzqBowOjVTLocZG/69WJNtTRuOhfGRcYGC5gVUcTljSlYFnW
      9AagXC7jt7/9LVasWIG9e/fi5ptvRkdHB3p7e/GLX/wCN910E5566ince++9OHbsGJLJJE6e
      PIl0Og3LsvDqq6/i5ptvRnt7O4QQeO2113DHHXdACIGXXnoJO3bswL59+5BMJtHS0oLdu3cj
      mUwim82ir68PQ0NDSKfTeOaZZ3DlyhW4rouRkRFs2bJlToNZL7RPG9CNmgUCJmr23hRQN6/a
      wNI3rcD8ozyEkLLo2b6eOWplGygXQ2gAlFLRym2iESDW/DaGKeMo+0wpfxrKoGe8ExWdvljl
      5p6lLlwrVLzzcU0xzkPXT1nN/r1AGoOAitAoeGqVQpkAUxUewzK7lqWUPwln3nOVR39/n8nV
      RtlTKxAarZS8QI+bCFeS4fUDwLEjxS+NwNyun/FygJ+9fhrnroyHyp+rgmJxpasVXLyrbKRb
      olXJ4HgZ71vRipbs3KJg/r/XT+NA31A4s5WKjcVWAJEBiD+UROqcSHlyJR+EENy4qn1OslwY
      KeI/dx5HvuTHZtusSo64Iajlhwei+3wwV8bKjkZ0tc7NFbT39BU8vftMDQMUf0xcsclxiWSR
      j4AKDBcquHVth3QpzkSAoaEh7N+/H5/85CexdetW/Mu//AsqlQpKpRLGxsaQTqdxww03oFwu
      Y2BgYNL7+/v78atf/QrpdBr5fB481jT5lltuwYEDB3D58mX09vbi7NmzGB8fR0tLC1auXImt
      W7fiueeew5IlSxAEAQ4dOoT7779/TgNZL/SsXqNnbNNB1c2ccOSFwZTFno/CDdTymAuEyt6n
      DFQpGqb2BLR0rm3FXEDR88S15AqG8TkrOa5m/6HPn8nViBewcPNV+rqj9+gmGkzNXFIJG47N
      QTmBo+SZq/+dK4Onff8Vn4ZuqYDpPYH4HokMMaRMIOlIxWpBbsR6lMOxidownqtBkpOEihoT
      yuQeiY5w8UJ3ogDAQSwg6doIGEHSsWETC17AYEEqfkoEpmj0NC0HzgzhxIVRcB6f5aOGoo3e
      E/e3601QSxntXNHDi++cx+da18/aFXRmcBx7Tg6GM1itYOX5Y6H7R8sT+f+Jko/AsqJ9JUIE
      3jh+Gdvf14WVHY2zHpuXDl/E0Hg5JsdkIyDi+wDKz67HzLaF7BnA5H3kBRTPHTiH93W3IOXO
      7oSNFT08d2BgkqKvNgJ6fLQ48jwJQaqek+eL4+TFMezvG8L29y2bWSLY6tWr8ZWvfAV33nkn
      LMtCf38/tm3bhubmZgBApVLBwYMH8fLLL2P16tVoaGjAgQMH8MYbb8DzPPT19aG7u7vmrD2R
      SODee+/FG2+8ASEE1q9fj8bGRuzYsQNr167F5s2b8dprr2HdunXo6urC8ePH3/UG8zRmwNgE
      Y8C5gBfQqkc88mXi6+OfNVv0BUeVa4fpFYDyrQdUrwyi2binn1N/D9TrQ1eMqL2KmQna1aTl
      8ZVrQ7qEotl30aPIl4NQEfqUqZk6U+6ratcVn4FxrTU24T6ImnFL2eTvJY+i5DEUKxS5UoBc
      KUDJoyh6NHRXRa+PIplm04pv4thoOSiLxkZGJPFwbEpqbEoeRVk9pzfUw9UT199nogGbGT6V
      vvIo2ifuR45m/dFMfPKMU76n+vUnLuQwXvJnJQsXAgf7R1D26AQZ4sdTLhjtjqHx2TibpAg5
      FyhWAhw+Nzql62oqKj7Fwf7hGsZI/WQMjNKqB4//HlshRApb4MTFHMYK3qxkAYDzI0WcHy6E
      7riJLrG4YWKMgatHrZWCPk+cC+zvG0JA2fQuIMuy0NLSgp6eHhBCQAhBY2MjLl68iM2bN2P9
      +vXYuXMnLMvC1q1bcccdd2D58uXo7+9HW1sbbrnlFtx00024cOECMpkM3v/+96O7uxuEEDQ0
      NKCnpwednZ3o6urCDTfcgC1btsDzPAwODmLt2rVYvnw5WltbsXXrVqxatQrd3d1Yu3btpH7E
      i0lcCfg0+l3OgOW+QPwxcdOXi+oNzrluduoZe8Dk3gPXewEBD/3/2iWkZeZqP4JDJRrZUVSS
      jjWfq2shUIZH+teVQqeRIdKbn57eCGZRhIlNVKw7sUCgwlQJUSGQ0ze2qEXZl8qy5MvNZ+1u
      8RlDqSJ98FF0kFSyehNaroKkW0pHbiVUiOpcViRMiCo3mDYAej+ioh5ln1adLxXYIWPf1Xg4
      NoGj7sWEQ2Z9robGK3h23zkUVBhh5DsWMeU/0d+uBAHUTx0RFEUG+ZRj3bIWLG/LzlgWn3L8
      Zt85XBot1XRphLJMWJmEQ2PFI4KiUEzLsuA4Nj6wbumsGrqfvJTDy4cvwAvopFl/qFAZC38K
      dc3IYbFUmDdRspBwNg5YWNbWgNWdswugee3oJRw+Nxwbj4njo+TQsujxsaJ9iChCKYpWgmXh
      /b1LpncBpVIpbNu2req5u+66S324BUoptmzZgj/+4z9GY2MjLMvCkiVL8IUvfCF8DQD80R/9
      UdX/AeCOO+4If3/ggQfC3z/xiU+Ev1uWVfW3np6eGQ7dwqBj/QG9dI7+NnFTWCPU33RjZqE2
      YaXPW37mfCNeuBDw1cav9h3rkFCPMgBSQetM1xRxlNuIwyYcDrEm+TBne3wdJaJj7oVAqMx8
      KhWwdn0A8uLkQm6sWmBwiAXuEDARzfr1hrWN2RkAbZh9yqVPn0VhsdodpRWvT5lMuHLkURxC
      4NtyrOT5EeFnSZcMn1XGsD6u/l7yHMnP41ygEkTGsRJQBJTDddTyXehQUAJfZcEGlIG5tjT4
      XMARArNx2Y2XAhS94P9v782CLLmqs9FvD5l5hpp7bjQ1krqFJpAJwJpsga8JwoLLYBxEKMDc
      wDa2H3CEA+wHPznCbw5seDI8GKxA/HAByzYyvuJHZhICISwJh34s0RpQS93qsbq7xjNk7uE+
      7L0y85w6NZypuqXen6JU1VV1zllnZ9Zae6/h+7xt5c6VzqJm2eE6xwGfdnGGdebiGTJtcGap
      uWU7AHdPnlpsrHm+IjB55++dLtkCa8EBWM5gjEv7lO8/ay1OLqxCG4t+MlLHzq6imeqO2lS+
      Jl3O3xj3e5xzWL8hZZyDGePTZBacFza9cHIR77jpdX2tzyvnVjreU+fa2DwwGl20EXOyxafn
      6PeLNbJYbmZYbKSDUUGUbzYhBO6555686Nv9816P6ef5L2b0GrIitDPndNfLhxpjwcV43ifd
      HJTCoO4kIZjvuWdQ2vhd5WhOUuT0gSIY0JQrOVGyqe2P8InvZ1fawkY0u+Cer5wm03063DKM
      LRVTLfLe/1RpaOtsyZTO77lYCh+gqGOqCBxUFxgFMm1gUQx/GWM7CtLaB8ZI8jy9192aOmi8
      bvt0WLlQWG5fLDvjcr2u00n37jRppqovW7SxWG6kazYf3UHG2CIYMBeJwHLH1mk32bO0mvad
      AnL9/p0F5jXvPU9LkdOVYHnOvfy44j0AhU/oBwsrvdamKyBQeke7+9jShzGwnJeuM9mDvCV6
      y3f0eq1gjDHUarU82gQ4bNQ6ty2vj84/UEO7IxQfY7fBrve1b2/s+OXiZ6O2oeepzC8C1Tw6
      nNlILVjfrvw9w9ddyNGV/sBhi7WzwBpnMNhrr7MoG/3+Fl97kJJWd4ln3dfJ16T7F3rb19W8
      NBTWc8Ig52rX+cUh0bnJXPvc3ae3jV69++/RWrv5CcBai7Nnz+KRRx5BmqZ405vehGuuuQa8
      lHdcWVnBQw89hPe///2bvqHXEqiy3guVTdozxnnKoRy2FNylTzhDLXE7fcFdvp8oF0b2mv4/
      en1WGlZiDIgkQ1u5E0gsBWJZ9LNLwXKbqSOq3Bk1TJeU8DQTvJTTB5wNmT+FkM2REPm65ZOU
      cKkq+t6oEEuOdkZUDxyCGcSRgLEAZxqxdFw33Nvj1tJ1cQ2LJBIQXc9TnN6B7knbXh/lxxSP
      A2pJf0kFwRimqhHaadbxXNTWWX5NLoRLsayxheztfB9TtQisz0Ob9LWo7r/Pjtf09RfHpWnB
      ecmujnoM6/g8yCl2uh6Xms7KeX3kr8esBbe247rkP2OdU9y0VpVYoJLIzQNAo9HAZz7zGdx8
      883Yu3cvTp48iX379iFNU+zYsQMnT55ErVbD3NwcrLV45ZVXoJSC1hpXXnklsizDiy++iKmp
      Kezfvx/nz5/H6dOn83+/WtI9BJc+oR5+t5gUWSOfp+2FqJQ+IOfY/fUwoF51LV26gwizjLFg
      EYPWJi+0xtJxEgnOICWHpALREK/vCrj+a1YMvQnv4CLBUYndcVlwdxR2PC4CseSIpCtsMiBP
      U9H7GqQgHQmOdqYRCY6Wt4PBOdNIWEjheX4AxELkPf6xFIgFRyRYvl5kS+S5nOQA14uCIQW8
      VNH9whBLBmNFvpVIImdXIgUSKRBL5oO28I8vqDwGuXcmKpF7jQ7HYEtFQgtrOTg3YEx0/Kxc
      9AU6na7gDLN9zgFIwbBjsoozi401z19uZ+TWurSGteh0xJ0FTmeTc3S7pmoQfUaAPTM1JBFH
      lvUIgJy717QW1gcjWJsHBAoCfE2Qcs91+a6JvmwBkNNIrBeQqf2Uw23WGZDb2Ttou+epVyJM
      VqLNA8CJEyfAGMPv/M7v4Ny5c6hUKjh8+DCeeeYZfOQjH8EXvvAFfPCDH8SPfvQj3H777fj0
      pz+N2dlZHD9+HJ/61Kfwk5/8BC+88ALSNMXHP/5x/PznP8eLL76IU6dO4S/+4i+we/fuvhfl
      QoIuKDl9yRkyXyQUnCOWWBMEujs1yg6EYfDTQN414529c/zMOzIOKANEws0ClJyPyLtHiqEi
      2n1zPvhwEfXM550qwr1eZHju4DgYMs1grNvNkiMud7jEvutHeHsHssV3ODHvaKVy+XRjhc/n
      u52/FByZ1gBYzkEUSfe7iRSOgM334IuSs+nPFt+Vkp90HOGc9AEnTz9Z50S1cac2yTkqMc+5
      iIQorg91J5X/uLeKuYkEr5ubwNml1ro7fOfbKKfd2UFScMx0Ot3peoLLd229Awhw1+aq3ZN4
      9vj5vEPNfXBvg803FpbyS/5ezh0v4x1BgGw7sGeq7wB51Z5J1JIIjZYC58Z3Ppqiz5+6DxnL
      7aHgIIQodf6Uutr89br+stm+bAGAq/dOub9tbTqCANnjt0gwJafUKxB1BkmGnVNVzE4kmweA
      lZUVzMzMYGFhAV/96lexsLCAu+++G82mq/avrq5CKYXV1VVYa1Gv1/GJT3wC//qv/4qnn34a
      jz76KN7znvfgkUcewXPPPYcbb7wRaZripZdewrPPPvuqCwCAowSgzhqXZjF50VJwjmq8vgMt
      UgzFcw0Kt6MkG9xMQWT9c/v7nmsLxRhoKL4ggGOII+EddcHCSc85CCLJkWkDyTm0sHlKw6VK
      rU8HaSS2eP/UXhlJgTjiiCOe20TBapBdLmMMseBQPtUTR8L39rv3Xba3LIuRRO4kEgnncB0J
      Gy8Rsg0WHCPBkXHuu4g04tgFRDdRLvw5XcOU1oYzhkrEPTkdQ+LTQmSH9LTV/aISS9xw+Sye
      OXYOxpjSTpuVUruddAvdjoQcbx4UGMM1+6axY6LSly2Cc7zp9Tvxw/95BVqb0gATOTeeOz7L
      OagdtQhG3AX6ktNljKGeRHjjgf7pF6aqMa6/fA4/WnrFBxbrXwOgdC9jDMwR/7i1KTlcIYRr
      q+bFB2MMV+2Zwp4BSOGu2j2F/XN1vHR6CdZSZ1G5sOs+Uw22OHFwv2HgHUGJ1u3XXr8T1Vhu
      XgTev38/fvWrX8EYg9/7vd+DlI7etN1uY2lpCUr1rvozxvxiuD+2t7/97bjsssvwxS9+EYcO
      HcIVV1zxqi0as1IuGYCnVt78cc5ZlzqoeHGUHhSUH2bMBRNy5rEUiDyzZhIVH7TLJecf+Q/m
      d5SDpDcIDP604+kKiGU0iV0qI4kE6olEErmPSixRjSWSSKAScVQidxKgPneiQR7YntIuW3L3
      /O61JGpJhGosUIsFKpH7qCcy/xl9Lymtk6PzHq4eITlDJZL5ZG8SCVS9DRMV6W1wtkxUaI0K
      O5JIIIlkft0Hxc1X7cQVuybX9IcXjoznjqxwat2Otui7r1Ui3PGGfQMRwl29ZwrXXz5X7JY5
      63Cg5EekFBBC+s+ih7MtHn/jlXO4aoApYAC44w37MF1P8hMX5yJfj+J1BYSUkFHkbZO5PeW1
      49z9rf3G9ftRGWBtZusJbn/Dvtx5F89LdhVrU9hA6yL8R+eJ5LKdE7jlwC4AW1AEm5ubw9vf
      /nZ89rOfhRACBw4cwN69e/HCCy/gM5/5DLTWkFLmnUDVahWccyRJgh07duAd73gHHnroIczM
      zOD9738/5ubm8MADD2BpaQlSvjoFyRhzOy86BXDG8v5w6hnvhkt3dDozyYenYKa8stuZGjB0
      3mRCdHHMM0ojuPdA1Md5SmgIbQDncB2NMnWvlIO81G4Hjgi+2FkUrMuBqQha/Xb/d4KoG6jY
      W7aFTjs2KlpPaaeZSPcHnPgAUN79D1OQjiXPWzmlcIGR6B3c/bSW7iD2NRoKAHTd6FQyKHZM
      VnDXja9zylZWgXbbvfrx3doUxfnyoBP3AftNB3bi4L6Zge4dKTj+rzdehiOnl3B2qdVxnRhj
      /pRStDAyX7sgx9bpGDl2TVfxjpsvG3i25sCeKdx23T787ydfhuG2Y/cPmPy9lxtAisBYDpzu
      49r9M3jrtbsHWhvOGX794B789PApvHhqEQBK9yvZ0knb0R3MyzYlkcRvv/FyTNccffeW9QCo
      sJskrsiTpm7kO4435gG31iLLMnejSAljDNrtNqrV4ehaLwYQ9UKv7+dqQesU6hIphnIm3Whn
      2pOfOUoH6v/XprOX2+Wi13LwE9/8KHjUaQLZ0RsXlAVlDv4CDEnEO2ypRMIXjYffIDgRGJ3T
      TuRUCllBkmfy9B3zaZ8i5VOJihNKLIdjAwXc2rRKFA+pJ8qjXn/tbSJbqIheiSkQ8fx0Muzw
      oDYG9z/6Ir73f446WvOcDK43A2hnDrpwvjdduRMfuesgdkz2l/7pxo+eOYGvPvwsmu0MRLXc
      TQBX2NJZCKV0RzWJ8NG3X4e3HdwzlC2tVOGz33oKOnXFrwAAIABJREFUh4+dL6godCfdRBEA
      Otek7Pz3zNTxibtvxut29Fcb6caLp5bw+f/9C5xZbPbgAeqc6aA8f7kGIfxm7zdu2I8P/+ah
      /HmDIMyQIOKzjYbCyqAujlG2YALId7rkaGmCNuvRlVRWA3PpFua7QkZjE9mijaM/ILpq5f+Y
      yxQQ1NEi8wJw4XxHJXpCQYAoKFLlqbKNnxL23ROcMYAhTxlRYEoi7pXBhl8fa52DLwKAySel
      TXd/vk81kuNP/CnJCcL0X/ztZctqW+H/e+IlPPw/x9FoZx1DXmsDQPkU4HbdN12xAx+87Wrs
      m60NbU+qNB5++ji++diLWGlmXQ6uu6l/bdpqqh7jfW97Pe54w76htZ2ttTiz1MI//ufT+NWJ
      xQ5BGCJe6w5IHQGAc+yereH/ecd1OLh/cJrssj1PvXQW3/jJCzh+dqWDZ4hORp0BqXwqcapp
      d96wH//3Ww5gslrQZIcAMALQpGJWoonohsvR87HruqYlKghVoqzusAXIJQ+Zd3jjUCgz3tFp
      Qxz3vVtky9KUJH046jUiJbIybba1BZsqGHIpSCogC9+hNA6JSrcmJmdvLfQaOtNUlKqi4q8r
      1o9Wh3e1neHRX57Cd//PMZxdapboTjrTY+6zc3QTlRhvOrAT733rAczU45GtjzYG//X8GTzw
      sxdxerFR0ihY63DJyUnBsWe2jve99QBuef3Oka7PueUWvvXES3j0lyfQSlVHQCrsoXqIc7aR
      FLh2/wzu+Y2D2DdbG9nfljEWL88v4/995Hm8eHIRqVrvdEQ2uSBdr0S4+81X4s7r96+Z0wgB
      YMToHtcHkLfrbReMcbz22qwfkEifeFyi3mXQ7l8T334XIn8KGZdUZrctFo6bqZctuT2lNNm4
      QPeKMQWJYDdcYd0PhI3xPjLW4sS5Bh755XE8ffQ8Ti80kem11N0z9QTX7p/BbYf24tr90yOV
      yixjfrmFR54+jp8ePoX55WbvHTdj2DVdxdsO7sGd1+/DXJ8dSFuFNga/ePkcvvvUMTz7ykKJ
      0nztjvvAnincef1+vO3a3SNJYfZCM1X46bOn8JNfnsRLp5dympAyGGOYqiV441U7cNeNr8NV
      u3sXxEMAeA1jo0u7nQEJKGwxFjkZHLWwXgibaFdZZnalU9qFsAVYSxVeHvTaLnuUNlhtZTh2
      dhVnllpopgraGFRjiZl6gst21DE7kYzllNYNbSwa7QwvnVnB0fkVnF5sIM0Mklhg93QVV+yc
      wBU7J1FN5MhTqr3QzjQWVtt45th5vHByCa3MdUBGguPynRN4w2Wz2DNTQ2WE6dT1QGnNk+cb
      eOHUEs4sNrHSzCAFw9xkBftn6zi4fxq1SrRhOiwEgICAgIBLFOM//wcEBAQEXJR4dTbiBwQE
      jAXUpQQU6TGaMKW60bC60f1ivVoWG3ONphvUtdVIVa5rYa1F5ClDaokb8CPKj+2Ak4PtncTZ
      SvNCCAABAQF5QZpkOMsdbTnFAHQuSk/T0eMsStOMBmk6dMMNQdqxF8i1MVhtKyysplhqpFhp
      ZWi2VS7nKhhDJZaoVySmazGm6wkmEoloTAVyCtJ6g7UBiuYTuUFzRQgAAQGXOIy1+e6W5hOM
      tWsU7oruKIZKJGAjjHReI7fHlFTslOva0j36mR3Dq2tp1rrolhollDY4s9TC/FITpxebWGyk
      WG1laKQqn2fhnKEaCdQrEaZrMXZOVbBjsoJ9s7WRd0m5Vm+dN1OURZTW2M4ZIuHIBdeTDg0B
      IOCSRTndQdiOttiLCeRsaVKahuQo/UMzAZF09Nqcu9kIp0VtPF/S6NaN7FFe67o809INGqhU
      xiISDBajnbBvZxqnF5s4dnYFpxaaOLPUxPmVNhYbbTTa2p+SLGIpkEQcU7UYsxMVLDZSLDcz
      aGOxZ6aKehJt/mJbgLWkpmfdxL9PjWU91obmR5QuKGgisfY6hQBwCaCbX+ZC2gAgnwgmcrXt
      tot2URZrBZy0Z8fcjjbHsj20C++GHOPwIDkUcv6tTKOdqnw6uWxPM0XOOeXkPLsGikaQj+92
      /hkNyPkhvnKqgzPmxI78sJPrZzEdcxPDQGmD+eUWjp5dwbH5FZxabOKVsytYamS54ye0M42V
      FrCwmuLcShurrQytjDQvgH2zfCAiuDLontXaDXsqH4CNT9d1C1MRiy5dk/JqlINACACvYRAl
      g/W0EMxTC5Dq0XZC5zdqAdJNYAwjo1rYDOT01js2Gx8VrDUDMVsOApreXu9nNAk8atA1IZqM
      dqp8MDD5dDKlg2gCOdMWldKpKb+nBMcwhwAahnM2OeevSt9z93LxurHkUEZD8oLq3FFHW0Bp
      xNHg0+3GWiw0Upw838DJ8w2cON/AsbMrWNhAY9j6lMziahtKGS9G76hNIsGxb7Y2cIDMd/7G
      O38/RU5B2pjO4VM3zwIoDcQRAOU3WKW/N7IlBIDXKLp3cIC7Sd2EsM53c9sxsNKdS+6GtUAr
      83/MYyqcbdWW8u+2Mz3WNSpTd2y3LcRH1Ew1Wr6rZbWt0GwrvwvvJDpsZzov/CrNoXRn7pmE
      iQa9ftoYaL8eqSp4kmiCnBwcEeU1U1eQNpblGspkEI/cKYUPaEs70zi71MKJ86t45dwqjs6v
      YLHRLr3ftXl3ol+wFlhpZTg2v5LTm1RigelajIlKNND1M/70nGZuPVJl/ICezesApisAKO3S
      YsanqADASp4HbM58Z9dWDLDWsfIR+1/AxYtyN8dGIO6icac6tKde2AqUsZDWjsWefpx/+THj
      WiM6nW2VRNB45ziqIKD8BkFpg9QzlJZZU1tZkWagdF0knXiPsQJAoXAmBc9tG/T6uXu2yPln
      nj4kzVxgoJMIpTIFYzDW81lJINOeF8ifFDizGDTzvtLMcG6lhYVGijOLTSw3046OqF4gagh6
      761M4cxiE7MTCc4tx1icSlFPIgxy6cjR0wkgK50GymkyurkdL5ETGpIk8sQZmHaBWlrrZXW2
      cAJI0xTf/OY3cfjwYRw8eBDvfe97c0rogIsTmzl/gttNuTzquOzo5kXaDG2lx5IO6icQdTxu
      TGtEjm6Qxwwqk9n9XMYXEJUyeeGXagIUCCj9Iv3O33gtYSk42plBJJ0TqkTC/S7Qt4YDkQRa
      yvUbKvzaPA3UzbjLGYM0FokUUMyCMbcLVtpAcOY7h0zfaRdq+VxtZVhquLZPuk6FQhrQnXMH
      vGqZT7Vay7DczPKuoZWWqx0kvL9TSV4ENxbWazXQBi8rfZT5gBy1OgMswCIBZSy4NpDcnVCo
      hZSLLZwAnn/+eTz22GP48z//c7zyyivQWuO//uu/cPr0aVx//fXYvXs3nn76aSwuLmJ2dhbN
      ZhNKKfzmb/4mzp8/j8ceewzT09N4y1vegvPnz+OJJ57A9PQ0brnllteEJsDFhl4dARv+vjIQ
      G0hYDoOt7m7LGAcxifXOblC4IDA6e4C1utFbRabN0B031FvfznReRHSpF8dO2s6cRkErUznx
      WSQ5KpF0XwuOlERsMoMkck66EgknWdhngModfv5RMNoSayrtdAm0BoIzcMMgrHscNy4wuB55
      oN8kUKoMVloplpsKS40UzbSX4uHWbqZMaxdEmhlWmq4w3G8th0jwrHV/q6kqAqTWxSkty4oN
      jhQWxnLwyHVIydL6Ch8IjF+cTQPAzMwMlpaW8IMf/AB33nknarUannvuOSil8LnPfQ5/8id/
      gi996Uu49dZbce+99+LOO+/EU089hWuuuQZf+9rXwBjD8ePHYYxBpVJBo9HAI488AmMM7rjj
      jr4WI2BjlDtttvwYFIM+F9oWgrHACDa5hS0YLBgR+t2pX+wwpWtDu2/aQVIQSFWREjLGoGKl
      Sxl4BbMkEvlJszyN6k4ow9lHu3/6msRyMq9zQf0LnLH82iif9hkW1iKvQ7Q6UoYbnwLKmryU
      pgLgW2tLeg8jgLbFAJjy60KFYc6cpjKDmwPgnEGb9TcMm24l9u7di7/8y7/E4uIi/u7v/g7z
      8/OIogjHjh3Dc889B601du3ahXvuuQdXXXUV3vve9+LAgQM4ffo0Tp48iQ9/+MO4++678Ytf
      /AKTk5M4evQolpeX8eKLL45kMQIKULdPv+g3TbMlWzC4091qCmtU6EWn+1pH2XGSM9PG5ZEp
      799WOld2o3SQ8mme8gwFXS9tXZpiFLBdbbGUuii6gsrvxYzs+tFzWRQzEMPACTLZvEtolCDT
      3HP7lJnXALHY2jll0wBw4sQJNBoNvO9970OSJHjiiSfw5JNP4sMf/jB2797d8zGMMUSRK8Ec
      PXoUR44cweTkJL72ta/hjjvuwJ133rnFtxjQD1w/ff+PGwcHP8NgtgDYFmrf7te71JobaI05
      p5w9y3fW9DOa/I1KtA/5vcKK+4b7PLtgDGwoFedOdKe6nOY0W3O/jnISmZfeg/t6OJTv5XHV
      2oBCepZ7kaetYtMUkNYa//7v/45ms4mbbroJd9xxB5544gn8r//1v7B//37UajW8/vWvBwBc
      ffXViOMYV1xxBaampvC+970P//Iv/4JarYY//MM/xN69e/HAAw9gZmYGN91008BvNqA36A90
      PaGTno/BeBzuILYQRm0P8x+DbubGLVKz3WCsKNRKzgGmwb2iFamORVIg8dfOWFdsJaKzWLrh
      NOHzdFIUTnMUS0VF5lSZ0pwBg7UMXqHddyAV6SBS2xsWnGRSffsmy28c+qJ8J3W/3trXT7x2
      cyS5H1gbHu5+LmRdI1nUQ+jvmVpQ3RDhBs+1FT0AJ9CsIaUEYwxau/5gITZO9llrkaYphBCQ
      UrpjnVL58wSMHmUela2AdnjjAA3z9ItxCGoMaguAdXlULoQ9o5qVaLQzrLY1VtsZlhspWqnG
      SjtDo63QaKtSFxANDzkKiCQSqCUS9USi6gnQ6pUIk5UI1URiohL17YipyNvOXDtqpnUpd+7y
      593zEuTgkkjkA1dJJDwtg0CSa0v3d91SpfHy/AqeP76IXx4/j+dPLKHlC8Fb6QJynwHXJstx
      YM8krtk3g0P7Z/D6PVNrJBk3gzYW7UyhlfkurcxNarsiPc1L6LwDCygCZvdaJJHwa8Tza7kl
      a0jomLCZ4ycwxjpaRsupoYDxgHZMW8m/j2v3T4ikgMn6K36Na/CKc4ZBWoFcKmv09gjBoU1/
      cwnueo0mEHHmiMJoylhpg1gKn0P2u2zOfReQzZ2pc7Q8/zryQvXcO+RB4IbLjN/5U3+/63ai
      S8Z9CyOBMWefa3nknvqA57tgmk7uF7EUqCcusM3UEkxUIqT+Hi63ea7X7FoOArVEYrqWoJ5I
      TFTkQNPcxLzqOnloiMt1Zbm/KwvOZU5NDSCXVo297rc70bjHcVZobwNhEvg1B+Yv/GYTpgwY
      alx+q5CCIVVbc3PuSDue04jgHLHsr/1ynGvEGUMciS0Pp42K44YQSY5UGyTS9fdXYgFj3Wmf
      Ab7FU6MSi9LrO2ebRAKVSKASux031QrI+Q4Cckyuy8cgEgLWaljBwBmHMNTbbztSHdLrSUeU
      luLOuQ0TtCerMWYmEszUE+yervpTUebWga3fqlx+SSk4dk1VMTuRYHYiwXQ9waCXjmofinNE
      gtJyOq/LaGM67lFKoUkflN3XHJEQiATLU6JACACvSVAQoOnRbtAf63bktp3jZXkr33qIvE3j
      t2XrQWDcAZKCQDvbPGU3aqpj7lM6ZR4Zn+2B8Dv/WPJ8OpdOZrHw6YS4SCm4NIM7IQzqeKVg
      0MY5dUddoEFd/IK7nv5UGXBRUEDTjjaOBCTn+Y6XUiCDohIJ7JisYGk1xWrbzUK8cnYVrVTB
      opxTL9/PxetFUmDPTBV7Z2vYNVXFrqkq6sngaW/JGZQ/sQEcFkBsrQt4xkBrBsE7qSDo74k+
      x75+I7gjzyNbQgB4jYIxBsEYqjHPh2o4214FJYL7o/REXSgUnqj7Zjvt2koQyHfb2xAgyRGr
      dQKk4OMh76NNQqYdUyXLv+8Kq7HkaCuDMpMx7bRjPxRGJ4HYf2+Y9aLrwlip9RMaFZ/eUMZA
      lKZo6Z5xbKnF6YTI14a5n6TgmKsnaMzUXE1CaTDG8MrZFbRS7Sdyge40EGPuvtkzU8Ne/7Fn
      poqdk5WhdAHctSo/nrqU3OCbYmYN7QUFQcFdvl/44n13zS8EgEsAnLG+pzNHDZbvYJwjKX9/
      uyE4RyVia7jUaee03XZxzhAxjvVSxOO0pez83Wv59FBmUI3hOWasP505pxJJ4SeDhdcDECM5
      vbnn4D6X7a6DyXe6a5+fKA/Kee1RnSSTSGD/XD23qxJLVGOBs8ttLDXSjnkEKVwqarISYW6y
      gl1TVeyeqeLynRN43Vwdk9Xh657FyQgADADu02Cdf08EohCPBIcQDEkP5w+EABBwAXAxdIAx
      3x7XLzfLuHAh1oSVUiWMFTl1R+sApNpRRdBprVzspU4ScrqjsJ/s8edECC4cVQkH9DoBoDvd
      MSphGsYYKrELAowh736anUhziohOmgzhagf1BDsmEuyaruJ1O+qeAG4017YcBKjN2tjea0MZ
      gM0kPLfUBhoQEPDaBtFAkFNr92gioEIwBYFRqm91w7FfmpzquVfLrMxTiEW6YxxoZRqLjTbO
      LrW8JrBCI1XQ/vTIOUMlKjSB5yYrmKnFqFfG0/FYpscgXeBeoKE5sUGrdwgAAQEBAArSPKrR
      aGNy1TQ3KOYGvmjQaNynFnJNah0mV4ZiWnictpAdTj/BzUk02yrvvZfcFaLriUQ1kahGcuwq
      d2TTRgFgK+nMEAACAgJ6orsozcfs1F4NIA4kC+QiLLzUlvpqW58QAAICAgIuUYQicEBAwLro
      btkNcDC2kGFknpPnQoKuE9DftQoBICAgIIcpCbLQv61FTvwGALEQY89xd9hUkjvsANteor7y
      2tC6ACTB6AfUtmltrNcDyLQBLDokIYkRVPgC8EZrFAJAQEBArlFM+rOU/qc6QLkP3xhb4uAZ
      r6NLu5TAujEqcryNUF6bTFOBvHd9xNjxDe8RtHGiPU4tzfZUvHPDl4D01BnrDaKFGkBAwEWE
      smjIdqVdHGWIhtYWbWXyQmdZt5jI10hgPPLDT7EczRBYN0jqcKsY5QxAtx1kS6o6Wy/L6TEi
      n2OMObI873RHeQ3peqSZznWBKSh1w3VqOTuIGbRXq2w4AQQEXGCUUwvl7Zgyjvc9EuPbTVrr
      HEpbmdyh0GfjdXYBL7/IbS48Yix36mDW+kng0ThfYy0ypTt2tJRrT0uOLha8IwWU+bmBWI6O
      SpyolnOtZKVzjWJjilZMojMpTkQCijvOnsgHyVEgUxpKW7RInS0PADpXA6QBR+f8jSOQM9z/
      3NFtlK9VCAAB24peB85LtbhIO+31drourescD027jnKtSPaRnH/bnwKy0hBWedhJceMEUziH
      No4gjsRSkmj4Qqi1TuicnL9LvdieKaC253IS/jRC6RelzVCkdGVblHG7/nam8xOA8umXbnlH
      wZ0YveTMzwbYnJbaGDtUAKd8vzLuhFa+Tqny09pw14pOaIDTbRbC+mvpgpCjky40wEMACNgW
      rOfs6Kh6obsoLgQ2o+wuwzllIIlG9yebaQPtnVk7TwE5kZFMmZ6dLpwzxLKk/CsZpDFIFVCN
      h7ONNIeBYjJ5MwkH0nMmtlJlLBizQ7GBAiQM73b75PxJgKXXfSy5e20KAIiAVBUU0cOuTaoM
      0sxrM2uLVqbcdcuM108urgnl/621EJ6+m7FCLtLpCXjNh6GsCgjYAspFtG64nKoeWy55I5vo
      GJ2DuS6O7Rh4coXW/spv5R3usDA+l92mvHbJ+bcznRcZaXl4iSuovDKcMaR+vTJtBhaFsaV0
      U7fzz1NkpfuHTiKcs5wqmoKANmao0xJRLWS5IpnJFdJo102BByh4eZJIQJWJDkGEdXao60Z1
      CLKrrXR+jdq+HqB1mdSQ5WI6kbG5qJHgjh9ICQvhSfY2DQBpmiJN0/yJkySBlCFuvBpAN2h5
      t0J/wNuVdtnI+Zfh+Oe3JwhYX/RcY5J1dkjORpJG2Oj1+ylwlpHp4ZwbwaUyTG5L5p1MO3PS
      jETBXD4BSM46HR/c96x1il6Ss5yfp18QsyZ9XXQhmZ7U3cXGwVE/G9+Z4xTFXD58UBF2995t
      XmiltSLn3/Y5+O7TkYXTTlbcKZplnDllM82gxGD0GZT6UT4I5sVf7/xdADAd68cZoA2HtQKA
      AOcGUhsoHzTpWnG5BUnIH/zgB/j2t7+N5557Dr/2a7+Ge+65B4cOHep7UQO2H70EYbTRG7aF
      jRrUNbEVpEoPfVTeCjK9cWphVGmEjZ5/qMdrM3Tro/FOVuXEYm7HS/nt8k4XcKmMRDrVMM4Z
      hHb1gEwzCK7BuXS8QVhPLHFjlANipov1Kd+/xlho79gpp54qg2rM88fRsmTKQMSDn0aMd/CZ
      pnUpnL/Stufa0HvnPlUmRdFJNWivpbVUG7FFR5IyaCuqSVifmnJpIMeOyhDnwcBLQXINKTiU
      MYhtIbW56V/bO97xDlx33XX4h3/4B3zqU58C5xx///d/jxMnTuCOO+7A2972Nnz5y192UnKM
      4Q/+4A/w85//HD/84Q9Rq9Xwnve8B2ma4lvf+hY45/joRz+Kyy67bLDVCNgyKC/YC9ThsR1D
      NP3udEeV4lgP5dbGC2GHtcUOer2fG7sx7471vzf8CcV6e5DvmmnHm1I6SBlYAyQRRxsasQS0
      5tC8eCw5qVGgnBbrCApK54FTAR3c9uXU07D3tbEuyNDfCKXKyjvvVOnc6QKFrnYCQAlWpJA0
      Q0IFXG1gJO/7VJIXwv3zUEHY+NdwQakIDJwzGOPWgjMg4y41BsAHete9Ffnn2vQOl1IijmMI
      IRDHMZ544gm0Wi3cc889ePDBB7G0tIRTp07hAx/4AM6ePYvnnnsO//Ef/4GPfvSjqFarOHfu
      HHbv3o13v/vdmJiYwI9//OO+FiBgMNAf9HrY6q58u3GxWDVOOzZae8o5Uz/+eo8fxj5tjHdy
      yOsg5dZPOrW1M4N26pxdK3POj/LxziHaDofpHORgqa3cttKmhd5/r6CtSyLo5e31sPd1ebdO
      LKT0jMZP3Gr/3lNl0Ep1HhiolpKbVOqishbrbsg2Qne3kdJERufugXI6qFynyHxR2MIFL6M7
      TyHGB5K+z9vz8/O49tprcfDgQVSrVaRpisnJSVxzzTWYnJxEu91GkiS4+uqrMT09DWstfvjD
      H+L48eNot9tYXl7uexECAi4VmLU+beTY6q7dlE4G1m4edOgkMXL0YIIYJt3Ux8uuCxoEM2bj
      9zzq9eje1OXXx/+M5der83HlQFZG3wHgxhtvxOc//3ksLS0hiiJUq9WOo+iOHTuwb98+/O3f
      /i1eeOEFHDhwAKdOncLevXtx4sSJS7bne7ux2TKHq3DhwLC+c3FC7GbDYjjDcNdP+GKt8vw1
      NMjkntd1tDAAieSA178lwXXGKK/sviZbSJRl0C6g/L31eGOkVlbe3Qtv+5rfHerVXdqEIDlD
      u+u56UNw5msi1he+kX+UUV6PQfobuucHIsGRZrr0bwYlnO43XctYiFx+FSjWr/xUzP9/ICqI
      LMvQaDQwNTW1xqGvrq7i+9//Phhj+NGPfoQ//dM/xZVXXolGo7EmWASMF+uN029nEbjfkf7t
      KAJvxi8DjI9aAEDecTMoRsF/00oV2nl7o3IphFR39Lu3M53vOBmAOBKQXv0qjlx/eZLrAjvN
      3CQSA+Xgm6kqfa17fp9y6908O+V7phqL3N7KgPdSK1VoZRoNL/5C3Tar/muXHuu9NkksUI1k
      riFciQSqsUQtkU5/uc+1ca+l8tduZRrNtkIzpXSPu240MOcoOxwdRSwFKpFEEnEksUAtlkgi
      iXoi82s30ApFUYTp6emeP0uSBJdddhlOnTqFj3/843nBt1arDfJSAUPARX3hCKz8njPahB1w
      HDZow7bU8z7s7nGriASHMXrdXTgpXo0LkjMovfnvrfv4EawT87t8dxJwbYtScBhjO65D0ero
      etpj6UTGifaAAiXdUoOuWiR4vlGQguX58vL33XURax5XfF28+jBrxLyguuCu0Ew1ESqmtjM3
      ZduxNl06yaTFK4YkhaNdveQcitv8OsXS5nn8JAKEKOigOWOIvVYzCdbTdZKCdZxURr7dklLi
      TW9606ifNmAAXAzC58zfjJtNvY5zx93TpkisHQQDxkK50Ov1aXK0X4zKNim4Y5U0zH9NrYFu
      q8D9TrJodWQdxGKxJDZQt6EYZgYA8BTGBjm5GhVjKbhQwTn//S4dYKJkpq+HCeBSMESGIVOs
      I11WDja6a0ZCcHdPOQ4eT8LGu4Nk/zYR95IQDNIwRIZDSzf4lXgqDkdDUdjGAB8k3Efkg4Gb
      uKdA4H4/THQFjB0UBHoNhI1b0Hs9cMbAR5CzHhSRFDClNMJWwBlGlrqjqd6Y+sw5L3kDT/hW
      omYgsjPOGOLIOZTIM0xGPhgMk5bifsetPJ9NIrnvhIJ3XOs/1vXhFw5W8uGG+NzrWcSRhYV/
      T7RjFhxSrL2PiQJaCOZSYj5IUu1kmPssP4VoC8Wt3/0LcMX85DPP+YDIFsC17rpTm0DkTyaR
      YLlYPBACQMA2wQUBscbhbedU8sWGSPKep5BeGAf3PqV8lN+9IgMgix20sRayRAZH6QyqQdCu
      Ug7p4HJ7OIO1zOeyXRDYjA/IBcXC4Y8qfRdJ3tESCwDwg3Oix+mNTgpSuDSQECx3upQ6Gsoe
      4Xb+1JFViYDMn7iMJ+6jQjCJ08SR6Ez/lE4jhBAAArYV21l/uNhBpxDOkAuNdIN4+MeRHuM+
      FWYBINNAJCC034lzTzImeP675FxdGsF9TiT3XPOjqUs4plGd/zvxqToaiCIQA2jZ2buaxmgo
      PIjfP7E2/zfgBFYy7pg/rU+ZEReQFM5+R4/tApj0aZdhwOi5tQH89aLrJLkpVMH8MC6ljehE
      InlnOqi8PkEQJiDgIkJWqg6Pk4+oDGMLkZHg5VZIAAAe1klEQVRUEbtksasEUEgMdpwCeM7F
      M2r02yk1rhoS2ZEpg9QPumnfZ09cSnSdJCe2VJcai4fI/fcCTRSnXdoNvWpJ5dSq5C5t12sj
      EQJAQECAF2IxudwgOX6aOi733Uc+rz2ukwmAfPAs26R5gDMXiMaZSiROIJJg7DWZLHzDRVTK
      +Y8jMJZZbImWunvqn9JAlJai7q1e6xMCQEBAQI7uAGBKAYAQS+4HwbYnnafNeieB8bbr9rKD
      Tka9isDA9q1NWV/DrhMAttJgEQJAQEDAuuhOcwQ4EBkbUBTILyToOgFuJmGrtbYQAAICAgIu
      UYQuoICAgIBXKahWUt7GM/+/rdRFQgAICAhYg/KkK4GkBgMuPIx1fESpMmi0s1yvgNpXY8lR
      TyI/sBdqAAEBAZvAWEcxsBlFxYWa3r6YQANZgGdQ3aZitLVOAWxhtY3FRorVVoZmqpFmRbdU
      JN0sQi2WmKrFmKpFmKklPW0MJ4CAgEscpOyVKp2rjamS5i2BBpKcKhVDJEbHTfRqAPXhk5ZC
      eXWo6DrOllRrLVZaCmeWGphfamGxkWJh1QUB5TuCOHMzEbEUmKknmK5FmK7F0LMWMxPJmont
      EAACAi5xlDmaMq8w1fMM4FsPHeWBH5IyTg/3tR4E1hOnJ9Duu51pT78w+vVYbmY4udDAK+dW
      8wCw2HAngban8KYp7XoSYbGRYroWuwDgA8Tu6WqggggICHCggaLOD7fL7dZxkMLtbh1fD8up
      hlNlkEQXjnF23NjM+XdDaUdrOqxmA8Fai9W2wvHzqzhxroHj5xs4cX4V51fbOLfUguoxJzGP
      Fs5WW5ibTLBzstoxK7B3ppang0IACAi4RFGkNArqh7KAj7GdWoyZ1WDMEbZJwZFpQHALA/e4
      12KBuF9Bo/xxblpsKIpsQqoMziw2cfJ8EycWGjhxfgUnzzex3EzXFTaysFhuupNBpkyu5iY4
      RzUWmK4nrpYzlGUBAQGvWpDouaM3gKc6MJ54bT3qbnLyBpEUaCvHS5+9BgMArUcvdJ8IiJyu
      DMdlNFw6yFiL1XaG86ttnF9t48ySCwSLjXRTTWeq65xZbPnOIIGJiqsJ1JJocEWwvt6AMZif
      n8fOnTvBL+GugYCAiwmU7jGltA+J9qRK5ymDsugJuHMopElg/dfaWEjBkCk9srRHGWXaA8K4
      hXvcqWitg3UngrXf154mupv6WRvjlfkGs1Mbi8XVFAurbSystnFuuYXlZlZy/msF4IFC8cta
      hkxrnFtuY7IaYbIaYXo1xuxEsrUA8NBDD+F73/seFhYWsG/fPnzoQx/CoUOHtvwGWq0W/umf
      /gmf+MQngixkQMBFAuvbGKnlk5xdprTTCOhRDOac1N2cJCK8P3Yc+RYWrkNolE7ZWttTTc6d
      UNi6JGejQPdruiC0/q6bglS504Y6hnqq3W8BaabRTBWWGhkWG20srKYwlgJh4fw7BsFY8W/6
      eqWVYXE1xWItRcNrCk9WDTbdkt922234yEc+gnq9jj/6oz9CrVbDk08+iXa7jR/+8Ic4fPgw
      nn76aQDAww8/jFOnTuHBBx/E5z73OTzzzDOw1mJhYQHLy8v40Y9+BAB44okncPr06YEWJCAg
      YHgQ1bI2hciI9sIiFi4gaE8PndMP+7SQ9fMC9DzWFieKUQ8VkX290IuVc5zYCj01rc+o0FZe
      CD5VWG0ppJle4/Td6xUfna9fnBRWWhmaXvC+lSkYg80DQL1ex9zcHJIkwdzcHM6cOYOf/OQn
      aLVa+Pa3v43l5WV861vfQpZl+OY3v4l2u416vY6rr74aX/jCF9BsNgEAS0tL+M53vgMAePTR
      R3H8+PGRLFBAQMBwoJ528qWZz2+3VdEhRHUC+pkmttAxz5FuVoAdpEC7FfTq+umONdaunZXo
      qpuv+1xbhTaFVkNb6Q3V0dxpo/i6/BlwQT1TBmlmfP3Hbh4ANsPVV1+N1dVVPPzwwzhw4ACq
      1SqeeuopPPXUU1heXsbKysqwLxEQEHCBQCeDgLVw9QA90h1/N1wtxrGPmg1OF1sxQRmTX0tK
      +fUdAKIowrlz5/DCCy9gYWEB9XodV155Je677z7ccccdOHnyJE6fPo0PfvCDHTl/IQSazSZe
      fPFFnDhxot+XDQgIuABgrKB8eG2PenViKyl7KTiiLQzBDbNujBXiLhsVvbdkL+cQggMMkKKP
      OYBarYbbb78dQggcOnQIu3btwiOPPILbb78dnHPcddddOH36NG6++Wasrq7iwIEDeOihh/C2
      t70NU1NTuP3227Fv3z7cdddd+MY3voHrrrsOu3bt2voqBAQEjA2MObUvooqJJEc71Ugkz4vE
      3Dsi0pQVJRH2cSISfMM0zyjE6Nd7XtImJnDWmQaidSuDsbUOfyMyts1AnUXUxskZoLt+x81m
      2I4gQF+Xv0cC8YkspCoHIoMzuRCCe2OuKKQhhMhV6ss/J7icmQEfkXBzQEDAYHDashpKu06g
      dqZzhklSBaOJYIIoBYAkEuCMoRpLMIbcqUQjFo5Zrwsot2dMQjVEulYGFcU3QiTWMqYOo5u8
      2s7w8pkVHD6+gJdOL+NXp5bQaGe5IP16XUDF1yz/fNnOOq7cNYVr907h6n3T2DVVHWwOoNux
      M8YgpVz35+XfE+K1OzIeEPBqAfOyhUK4Nk4pGFJlfZuna+UUluVFTs4KxstEOudPu3+adh0H
      CRpjbge83XMAgHvP5cDjAg5btxXUcSR1+0YMPAMAALEUqMQC09UYUzXXv0+8PwADYy4IdL9E
      92lgsuoYQadrMWqVCJVIOM3ggS0LCAh41YJyyjCUxuGIpetYiaWA8kRvvDTFSkLw3IuNu/x3
      kQYaxxAYULCQbuekMb1mqjqdvRTcEeF1nQRkj0lgwOXdhwlSgjNH6FaPMdtIsNx07J8LqzQJ
      zDbM/zuheoHZiQQz9QQz9Rgz9Ri1xLn+EAACAi5RSMFhjEbkKZ7BiyAQSQHRlXahHb4UHDI/
      DfB8l/5agyitRze2ktenU8ow4IxhohJhbiLBSjNDK9P5SWi5mW04m8AZEEcSO6cq2Ddbx47J
      CuYmEszWkzyYhgAQEHCJgrh9aHrVFXw5YskAuJ7xcgiQgrtisE8HUf6ds9euOMxGQWAj9EoH
      DYpIcOyarqKt3KAepaUqcYqzng2UagJUguYMmKjG2DGZYMdkFXumq9g/V8Pu6SqmqnGelgoB
      ICDgEoYUPHcoMWfItHGUz2AQcW8H5pybz/szvCZ3/2X0GwSoGD4qMOb4/ffP1vIOo1hyzNRS
      zNZjLDYytDPlKDl8UK9XpBeEiTFdS/C6HTXsnalh11S1QxksSEIGBFzioEngNCsUwWgCuAzG
      WM5sSWkfzi4dRbAybbYtdeCUi98UDMfVmbTaVjiz1MT8UgtLpAjWztyUr9bgzJ3M4kjkYjDT
      tRj75uqYqcVri9QhAAQEBAAFt47WZl1OHwYaTBo+v/1qhpPFvDCawO1MezWwkiaw0tDG+iDN
      kUQctURiyncPTdXint1IIQAEBASsQS8SNga85jj/X60wloj6NBptlbO3Mt+hFUcc9STaNB0V
      AkBAQEDAqxTkvrudOO31N6WpCAEgICAg4NJE6AIKCAhYF6QZLMdEubAVUPG1GxfSpkx10kRc
      SFuM6WJs9XWArSCcAAICAnIUusBFNxDQSQWxHTQM9Nqp58DvFmePBM/nEmIpxm6P8TURNyG9
      lpbZzUM4W0h8fZwgnqa20nC+v1fHlrtOfANJynACCAgIgDGujVAZp4XrulxQ0gQuKB+M17+V
      3gmPGuTsqchJ/fdKOyGT8uvGkiPTjsMoGoM9tA6p0p4wz8tm+u8DbuiKHG6qjO/CwViCkikF
      RqW9dKex+TAYdWlJzpFxg0i6IJD4wNRtTwgAAQGXOEgIXnm2S9frbnNheKBwLIDrEIoEd3On
      I97tamPQzjRW2wrKf93OdB6IjLX5blZwx0qaRQapcm2Po7Yn084GVVLmSn36h05HFBgzzhFJ
      njvpOOLe8Y4mCBBba6pcgCRGV7JDG9txnRIpkGpH/6yNRSL5Gr6mEAACAi5hGONoj9tKQ2sn
      O0jpl24efskZhOD5kJjyKlVJNJr2UOWd7UorQzPTaKUKzbaCsUA762bBByqRQDPVqMQC1Vi6
      HbkFKvHwQYBoqNuZ0+R1QcBTaCu34y4zpQrOICVHrAVSxRBLAWMFYIHYU2cPg/w6eXvcCcAF
      gkwVWs0A8tNZqgwSyZEqjmok84G/uBQEQgAICLhEYaxz+GnJ+VOaRRuLTOk1XEDSp3/KIN82
      TBAo7/ybmcZqK0M71WhmGplPA5UnkyVnSJVGJEUulwj49kcGVCI21KCa9WkfCo6tTHkaZhcY
      rC0mgcFcGijSHJkySCKRp2OIPK/Mqtq/LS7gtJXOP1qp6/1PM+OCEWnCgyioDZKIQ2mOJBIg
      5h9KVdGpJASAgIBLENRZQzt5l0owOde82112FhZpSlh0OXrFGRgzQ+W8ybG2MoXVVoZWqtFM
      FRrtwvG2S503SSQgM4YkMvnOFiD6Y45IGAg+GD218QLstC6UhmqlGm1loLXpsAUoitKJFB22
      SMHRVnqo1JTOU3P+FJCq/Dq5OgkV7t0rF2ytEsLxVnjFN8fh1FY6T02FABAQcAmCOmtSZZB6
      imFydOT8u1svlXa72ciUdr9wOWfGXCAYRBPA+HRTM1MuCKRu591ouwCw6iddSbWMc4YkE470
      zBZpGMZcuqWVasSC59oF/cKiM9feTlVuE6VgjLVQygWeSDK0M7fjttZvxH3rbKq0400SHIMe
      kLSxJQU3k69Rm65bqQ4AACzTrjaiDZJIupMIR878KrUjt3MhYhPMz8/DWotdu3ah3W7jxIkT
      uOKKK9ZV/drSG9Iai4uLmJubG/g5AgICBofb5du84OtkIIudP6VdOlNA5Ew5ODN5QFDaQDAG
      JSyktX2fAoqThyu0psqg0c7QTJ3zb7QdDz7lvCPB0RYa1di5L5dqcYEozdzutpVpl3sfQJI9
      U66jJlMamd95l+sBrdSdDmgWQCq3+y+3hkrhbIkERyRcgBtkVsD4Dh8qzqeZznP+baXRTN2/
      XYrM5CR9qbKoxk6KMtMcQhlk0njBH3fdYymwqRf/n//5H3zta1+D1hrPPPMMvv71r0MphVar
      hTRNcz3gNE3RarWgtYYxBkopWGuRZZkrqJR+Pj8/j3vvvRftdhvGGGRZBgBQSuV6wgEBAeMD
      pU0sXC1A+V0mOf9y7tulYVzageoEeSFYd6Zg+h0qooKzse516QSijUXTp4GaqcJKK3XF4VRh
      pZVhtZXlQaKVal+zoHSIq124Xvn+LLLWQluL1Pf7Z9q4r0snpHam86BE9rVShVZmck3lVLnc
      fKq179ixfa8N4E4j9Fjq+KE6gNLuJNBoq9yOZupTaJlCqiiFpfLrSoHe+KLxpieAm266CQ88
      8ABarRYef/xxvPnNb8bDDz+M733ve1hZWcFf/dVf4cknn8R//ud/otVq4bbbbsOhQ4dw5MgR
      3HXXXfjSl76Ej33sY/j85z+Ps2fP4pZbboGUEj/4wQ+wtLSE3/3d38X3v/99/Nmf/Rm+8IUv
      4J3vfCcOHDgwwFIFBARsFeT4jXecmXIOTxvn8FxKyHgH73a0Fn4gzA+FceVOAOTAu+mjt4py
      gddaINNuZ0snEudoNVpt5wAFZ6gkwqWCIgFlLFqp2/lT26r2qZKkz5SU8uktKiprH+BS3/tP
      tYimz8NbOFW0SiS9toJL+ySRgNIuH0Q2UYG4H2S+4EzXgeiolb8+2li0MpUrhXEGl/ZhDKnQ
      iCWD8qcT7d+b0gbas5luegKo1+uo1+s4evQoXnrpJdx888247rrr8M53vhNTU1N44okn0Gw2
      8da3vhV//Md/jCNHjqDVamFlZQVaa5w/fx61Wg2/9Vu/hVtvvRU/+9nPcPPNN+MNb3gDPvnJ
      T6Jer2NhYQEAsLCwAKVUXwsUEBDQH2gHSNOtvUBTr6k/BShddNp0wwL5820kUbgRKACVn5Tq
      Eto4psvVdoblZopGW/kTiAsO3d1KSrsd/HAonC6ZlZUGr2hdmu3M2WiL4SxjkQcRCrLDQmkD
      iyLIauNOBW0fmFLfzZUq41JX2uQO39mB3PmXsWkAiOMYN9xwAx588EHU63Xs3LkT999/P44e
      PYrZ2Vm0220wxjA5OYnJyUmvEsQ60kDPPvssHnzwQVQqFQghEMcxhBCoVqvg3EWnkP4JCNg+
      bOqS/C9QfCh1GW78sGF8XY8Hl4VXbP5RnBZ6GTVYsmUr9nW+nC3/+wIT6qy3Fmt+r+vfmwYA
      xhje8pa34Hvf+x7e8IY35M79+PHjOHbsWMfvEfbu3Ysf//jH+OIXv4j5+XkwxrC8vIznnnsO
      rVYLMzMzqFar+PSnPw0AOH/+PD772c/i2Wef7TtnFxAQ0B8kccSw9TliuB8mSiKBJJKQYv2+
      epo+5ZxtSSy9FyLZRePAXGslpVYEd7KIk9UI9STKpQ8rsesGKlsWjUSSkfmirevxdzay3JZI
      uOGzWiwRRyL/nhTMU0Mg5+AZhViMe4/FNRCcgcGlnzhzqbBY8pwSIxekZ0WHFPNr2vEut0IG
      p7XGsWPHsGvXLtRqNSwvL2N+fh6Tk5Oo1WruiRhDFEVYXV3F5OQkXn75ZURRhEqlgpmZGZw8
      eRIAUK1WMTMzg5WVFczPz+Pyyy/HwsICVlZWMDk5ienpaURRNPSCBQQErI9WqtBWxne1KN/n
      7gqZ1PtORGzWury74ByVSPig4D4qsfDfk6jG7nv9TL1a63rbV1oZlhoplhopllsZVlsKi400
      T/k42UOX/+a+17+WRKjFTvVquh6jnkSYqEhM12NMVRPUKxKVqD8qBmstGm2VTyOvNjM0/DwC
      qW9RO6g2rktKcDf5W/HrMVGJUI0kJioS1YpELY5QTyQmKlHfwUAbg5WWKzIvNVO0Uo3lpks7
      NTOFlaZCK1OuM8jaXLQnkQL1SoRa4q5JPYlQjQUmfACtJW5ttjQHIITAlVdemf+b0j29MD09
      DQC46qqrOr7/ute9ruPfU1NTmJqaAgDs2rULu3bt2uqaBAQEDAtWfBKcQQiWT/paS7q2nQ+R
      3GnN0i5YCkc65kQRBzSDOQUrxtzpIY4EokznPD9Ky5xziFovIykgOXM78CTKg07kTyy0cx+k
      7ZL5HXssXR99JDki7U4nsZ/wtfCTyNoA1p9eOEccuQApuduJC1HsxqVga9ZzS/agvD6imDQG
      fJ+/e++pcNPcrMSOGgm/JtKdTNz3i9NfGAQLCLhEEQnheeRdH7/kHEpYRJ5QjGp5ZQgvNxgJ
      SoXwPO3jgsH6KaWNwDlDJRJIlfZpDIF6YvNcvuttF0gzDR1LCMZcoBAc9USilrjdbuQfGwm3
      Gx+UfyeWHO3MBZpIG0jFkEgOa30HDwOM4Yh9e2bknXssi5OREAxJ5CmreSf9Qr9rIwX3vf3u
      fVP7bRK5TqhUaSS6M31GTj+SLjUUSe64inyqjVJ1IQAEBFyC4J6aIBIWxtMXVPKfMQjuqB06
      h5u4rwW43HvUscMdnIqZ7KhEEpkyqEQa1ooS3TJz/e+y6BBMIgnJGSoxRzWOXPolEoik34WL
      wUXrGVzAsRZI/amCdv4M8LTP2n/PgoHlp4AkEqhEHEnsdtuJd8DDMIKW6zHKn0oS45x/pgwk
      Z3l6DCioICrehiIw8vxnZE0IAAEBlyCIFIyGwGK43W0FQMYZtGHgynS0jUhJqZ9ux88GSreU
      4VIUznkbG+U2MgbEwg1UVaIiwAjBEfudcSV2+WzK+a8pKPcJN1/AoY2bIyhXSSX3ff5SlLqN
      WF6XkJwjiTmSSLqTgE9lDWOP5AxWcmTKPS+9qlBFkbkcqBkYOPd8SaXUFBWI41JdJASAgIBL
      FNwLhTjnYQAfBARnUIZD8M62bOGFRngpCMSScszDdd24ArP7mnbanGtwBpjYopWtHaByaR6g
      EktUE4lq5FJBFe94hwFnROlcfE8KlxqKJYPSbmKYfpeospPIpcaSSOQF82FtcXUS99xl+6Qw
      kKKg8CBTyRbK+9PpgYJAOTUWAkBAwCUMl3+XYExDcTdJqozj9DGSlxTBWN5OSDv/KC8sjkbw
      RPhaAOAcXORz6u1MoxJ7QRhj804aqgUkvh5AnS2jsIc4ddzXyIndSPULgBfNsTnLpxSuFZTy
      7Ikvag+rBQB0Xie6Bpk2rvjruaC1sfl1AugEQEGA5evU8T6DJnBAQADx/5MQDOW3OzSBvWOJ
      ulJBowZNIBPVMSlwKWOhlIGURHfsCq9UOI6HTP30gvWUCY4HyeTMpeUpauqoiSSH8J9p5z8K
      518GCcAXqmDuJKI9qR/gTlM0t0HBmnb+3Wm6EAACAgJylNMJZRoDxoohpO0UhXei56SDW6Sk
      YlkInifbIApPilskxdgLZMt2iMITCV9brU94RzWJjYbRQgAICAjoQNklKO/41qQOxuhsu22x
      WMthA9B07PbZQvYAWCuXeQFtMdYNjBFoGAxbsCcEgICAgIBLFOM9pwQEBAQEXLQIASAgICDg
      EkUIAAEBAQGXKEIACAgICLhEEQJAQEBAwCWKEAACAgICLlEEKoiAgIsANPhU1ujlfvhqO3vL
      Ay4thDmAgIALjG4yrzJoqGfUFAcBAcCIU0BZlmF5eRnWWiwsLEAphVarNfTzKqWwtLQ0AgsD
      Ai4uZNpxuqy3C7Ol3wkIGDU2DQBPPfUUHnroIRhjcN999+HRRx9Fq9XCV77yFaysrHT87pEj
      R/DAAw9AKYV7770XR48exVe+8pWhjTxx4gTuv//+/N/3338//vqv/xp/8zd/g2eeeWbN7//q
      V7/CSy+9NPTrBgSME9aTeG0FWq/P+RIQMCg2rQFMTEzgG9/4Bm666Sb893//N5aWlrB37178
      8pe/xPvf/358+9vfRqvVwq233opms4kzZ87AWovjx48jSRIcOnQIAPD444/jyJEjuPHGG3Hw
      4EEAwOHDh/GLX/wCV111Fd785jfj8ccfx9LSEhqNBt71rnfBWovHHnsMv/zlL3HixIncpiNH
      juD222/HjTfeiKmpKTz55JO48cYbcfz4cSil8M///M/Isgzvete7MDs7m4vXHzlyBLt27cKv
      fvUrnDp1Ctdddx2uvPJKPP744zh9+jR+/dd/HZdddtmYljogoBPa2HV3/t2wcLw8kQj1gIDR
      YdMTwI4dO9BsNvHyyy/jwIEDaLfbePnll7F//340Gg00m03Mz8/jvvvuW/PYxcVFfPe738Xp
      06fxpS99CZVKJQ8QxhicPHkStVoNX//61/HSSy/hy1/+Ml588UX8+Mc/xlNPPYXvfve7+P73
      v49qtdqx+7HWYnFxEfPz82i1Wvi3f/s3NBoNPP7443jmmWcghICUElJK/PSnP8Wzzz6LM2fO
      4MEHH8Thw4dx//3356eUM2fOYGlpCWma4otf/CLSNB3tCgcErANt+tvRG7O9aSDraZBbqcpZ
      QQNeW9g0AFQqFSRJgueeew4HDhyA1hrPP/88Dhw4ACEEXnnlFRw7dmzdlItSCvV6HbOzs3jy
      ySdRrVbzrgalFJ555hksLi7i1KlTmJ6ext133403vvGNWFhYwOHDh3H33Xfj1ltvRZIk+XNm
      WYaf/exn+M53voNz585Ba50HlSRJcO211+Kmm27CLbfckv/MHbfd17fccgve/e53g3MOay3O
      nj2Lo0eP4sSJE1hdXR3R0gYEvLpBXUnu9HFx1CDWo2IOGAybBoA4jnHgwAE88sgjuOqqq7B7
      92489thjuOKKK/CTn/wESZLgAx/4AKrV6rrPobXGxz72Mdx999346le/ilarhZWVFXzrW9/C
      Pffcg2uvvbZnflNKieeffx7nz5+HUoUgdKVSwYc+9CF88pOfxBVXXAFrLU6fPp2nier1Ok6c
      OIFGowEhBM6ePYtXXnkFWZZ1PD9jDIcPH8aJEyfw+7//+2tOGgEBlzJ4STx8VKpfwyJ0Q40W
      m9YAGGN4y1vegmazif379+PNb34zFhcXsXfvXszOzuLxxx/Hd7/7XVx33XWYnp7GtddeC845
      brzxRkxOTuKGG26A1hoPPPAA5ufn8du//dtIkgRSStx222249957MTU1hbm5OVx//fWoVCq4
      /PLLMTMzgwMHDuDLX/4yjhw5gte//vW5Tddccw1mZ2cBuAB1xx134L777sPc3Bz27NmDK6+8
      Ek8++SS++c1v4vbbb8c//uM/Ym5uDgcPHsTOnTuduIUQuOGGG3Dw4EH84he/wP33349Dhw4h
      juPxrXZAQAmcAf1kVrZ7HoAzJyMY8NrF0HMASilwzsE3UcDRWkMphTiO8xvZWgulFKIo6vkY
      +jnnHEKsfyPS70kp8+fW2snICSGQZRmEEOvaqLV2WppjVvEJCCjDWotWprf8+8mI9GUDAghh
      ECwg4AIiUxpqC8cA4cW9AwJGibDlDQi4gJBeX3cjkLh3QMCoEU4AAQEXAYyxUMZ0tFtyzpyo
      90VSgA147SEEgICAgIBLFOFcGRAQEHCJIgSAgICAgEsUIQAEBAQEXKL4/wERm1zx7UHPzQAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Part 2 - E Govt Rank' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Part 2 - ICT Category Portfolio' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAALbElEQVR4nO3d32/V933H8fc5trGNbQwGQzAk/A4khDRAltBma5pfyya1azet67S7adN2
      v78gf8B2u150mqZJkTap2ZT+2tQ2WVVSQgJJyAgQSCDY4ZcBG2xjMMapd5EMiSZkgTBy8Xo8
      7vz98fl+5K/0fZ7zPf76NGZnZ2cLgDjNL3oCAHwxBAAglAAAhBIAgFACABCq9Xordh8Yqt0H
      hm7nXAC4ja4bgFf3D9Z3n9t+O+cCwG3kFhBAKAEACCUAAKFueQAajeuvm9PWUl0dc2peV0e1
      tnz6ofvmzf3YsgUfLfu0Y3yaBT3XjrngE45xM252PgBfpM8cgG89en/9+de31V9965Fad2d/
      Le7rqVUDC6/Zpq21WZvX31mLertq4+qlHxtj+eIFtXHN0np448qa3935qcf7vW33fmzZ73+0
      7KF7V37WaV/j6W33fOJ4n9f6u5ZUb1fHLRkL4Ha57l8B/aZmo1Hff/GNunDxcv3FN79SP915
      oOZ1ddRjW9fV2uX91dvdWX/77Au1vH9+rVzaV5vWDFRrS7PmdXXUhhVLanxyqnYfGKpGNarR
      qJrbOaf+aPPa+rdfvFnfeXJL/evPX6+qqt95YE1tWLHkalz+5s8eq5Zms557cc/VV9pLFvbU
      4w/eXf/97onq7eqoed2d9djWtVe3+9Ldy2t5//z6wUt769HNa6t/fnf9ZMf+WtzXU3/5za9U
      W2tLffe57dVoVK24o6++/cTmqqr6u2dfqNmq+vYTm6u7c07tfOtorVneX6sHFtbQqXN14uxY
      3bdmoE6fm6hGVf3wpbfqjx/fXMOj4zU8OlHfeWpLdXXMqRd3H6qvbbm7ers7atf+werqbK+B
      /t46NHS6Xt773i09gQA364ZvAc1W1ZUrM9XW2lIdc9pqxR199b3nd9SJs2NVVdUzt71e3TdY
      //XaO/XmO8fr9LkLdf7CpVq9bNE141ycmq7+BT21fPH8GhmbrKcf3lCPbl5bq5ctqu89v6P2
      HTlZK5f2VVtLS711+GQ99uDdV/ft6Wyv3QeG6qsPrKmHN66sCxenrtluxdK++uefvFKDJ0fr
      5NnxOn5mrL60blmdOTdR//D8jpqZ+aAaH9XkqYc31L4jJ6vZbNRdd/RVVVV3Z3uNjF2s906M
      1IP33FX73ztV969bVp3tbXXk+Nn60Utv1aIF3bVm2aI6eXasOtvbqq21We1trfWPP9xZQ6fO
      1b2rltS+Iyfry5tW1dyOtro8PVNvHx2+2fMEcMvdcABWDyys6ZkPrv48v6ezFvV2Vf/87qvL
      Lk/P1Nz2tqr68BX9v//izRoZm/zYWK+9PVR//YeP1C/3HK6f7TpY2/ccrt6ujmo0qtpaW+ri
      1HSdm7hUr+4frB//at81+45PTlX33PZqNKvGLly6ZrvhkfEam5yq/vnd1d3ZXv/x8v5r7tO3
      NBv1v/8Fe/LS5Tp6cqSe/c9ddfr8RFVVff/FN+r1g+/Xnzy5tSYmp+rNd4/XP/14Z1VVHXr/
      dFVVnR6ZqKe33VM79x2tqqpfz85W+5wP31A1m40aHb9Ybxw6Vv/ys9fqhV2H6qevHKg//d2t
      N/rrBvh/0/LMM88880krdv3Gk8CNRqO+tmVdze2YUz/45d6qqpqavlKvHzxWjzywphb2dtXL
      e9+rZrNRR06M1P1rl1VrS0udn7hYX960qo6dPl9HT47U1PSVmrh4uUbHJ+v94fO1Zf2dtX3P
      4Zqd/fDdxdiFqfqDr95/9ZbR4gU9tWnNQJ366KI+PDpRjUajhkcnqqXZrKFT52rw1Llrt7tw
      qYZHJ+ri1HRtWjtQA/29dfjY2Zqemalt962uPe8cq+HRiWo2G7Vj75F66qENtXRRbx0cHK6Z
      D35dj25eWxtXD9RLe96td4+dqSceXF+NRtXgqdE6PzFV01dm6sTZsVo0v7vePjpcjUajRscn
      a/rKB/X41nV15vxkjY5P1rb7VtXk1HQt6ZtXD927ovYcOlanRsZvx3kF+D81rveFMH//3PbP
      9CTwk7+1vvoX9NSR42fqlX2DN3Twb/z2pnrj0Pt17PT5G9oPgM/vM38IfD0/33WwGo2qm/le
      sR/9au9N7QfA53dLngO42Yu4iz/AF8eTwAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUA
      AKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgB
      AAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJ
      AEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBK
      AABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQ
      AgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACE
      EgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAg
      lAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAA
      oQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEA
      CCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkA
      QCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoA
      AEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFAC
      ABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQS
      AIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCU
      AACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAACh
      BAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAI
      JQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBA
      KAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAA
      QgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIA
      EEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIA
      gFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQA
      AIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEE
      ACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAgl
      AAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAo
      AQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhGrMzs7OftKKXfsH
      a9f+wds9HwBuk/8BjwT+Uw3vdrYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Part 2 - ICT Imports Export by Country' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Part 2 - ICT Trade flow' width='384'>
      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
      gg==
    </thumbnail>
  </thumbnails>
  <_.fcp.VizExtensions.true...referenced-extensions>
    <_.fcp.VizExtensions.true...referenced-extension>
      <manifest manifest-version='0.1'>
        <worksheet-extension extension-version='1.5.0' id='com.tableau.extension.sankey'>
          <default-locale>en_US</default-locale>
          <name resource-id='name' />
          <description>Visualisation of flows between nodes (levels) with proportionally sized edges.</description>
          <author email='github@tableau.com' name='tableau' organization='tableau' website='https://www.tableau.com' />
          <min-api-version>1.11</min-api-version>
          <source-location>
            <url>https://extensions.tableauusercontent.com/sandbox/sankey/sankey.html</url>
          </source-location>
          <icon />
          <context-menu>
            <configure-context-menu-item />
          </context-menu>
          <encoding id='level'>
            <display-name resource-id='level-id'>Level</display-name>
            <role-spec>
              <role-type>discrete-dimension</role-type>
              <role-type>discrete-measure</role-type>
            </role-spec>
            <fields max-count='5' />
            <encoding-icon token='level' />
            <tooltip resource-id='level-id'>Level</tooltip>
          </encoding>
          <encoding id='edge'>
            <display-name resource-id='edge-id'>Link</display-name>
            <role-spec>
              <role-type>continuous-dimension</role-type>
              <role-type>continuous-measure</role-type>
            </role-spec>
            <fields max-count='1' />
            <encoding-icon token='edge' />
            <tooltip resource-id='edge-id'>Edge</tooltip>
          </encoding>
        </worksheet-extension>
        <resources>
          <resource id='edge-id'>
            <text locale='de_DE'>Verbindungen</text>
            <text locale='en_GB'>Link</text>
            <text locale='en_US'>Link</text>
            <text locale='es_ES'>Vínculos</text>
            <text locale='fr_CA'>Lien</text>
            <text locale='fr_FR'>Lien</text>
            <text locale='it_IT'>Collegamento</text>
            <text locale='ja_JP'>リンク</text>
            <text locale='ko_KR'>링크</text>
            <text locale='pt_BR'>Elos</text>
            <text locale='sv_SE'>länkar</text>
            <text locale='th_TH'>ลิงก์</text>
            <text locale='zh_CN'>链接</text>
            <text locale='zh_TW'>連結</text>
          </resource>
          <resource id='level-id'>
            <text locale='de_DE'>Ebene</text>
            <text locale='en_GB'>Level</text>
            <text locale='en_US'>Level</text>
            <text locale='es_ES'>nivel</text>
            <text locale='fr_CA'>niveau</text>
            <text locale='fr_FR'>niveau</text>
            <text locale='it_IT'>livello</text>
            <text locale='ja_JP'>レベル</text>
            <text locale='ko_KR'>레벨</text>
            <text locale='pt_BR'>nível</text>
            <text locale='sv_SE'>nivå</text>
            <text locale='th_TH'>ระดับ</text>
            <text locale='zh_CN'>级别</text>
            <text locale='zh_TW'>級別</text>
          </resource>
          <resource id='name'>
            <text locale='en_US'>Sankey</text>
            <text locale='ja_JP'>サンキー</text>
            <text locale='zh_CN'>桑基图</text>
          </resource>
        </resources>
      </manifest>
      <referenced-views>
        <referenced-view instances='1' viewId='Part 2 - ICT Trade flow' />
      </referenced-views>
    </_.fcp.VizExtensions.true...referenced-extension>
  </_.fcp.VizExtensions.true...referenced-extensions>
</workbook>
